"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BundleTaskState = exports.ClientVpnAuthorizationRuleStatusCode = exports.AttachmentStatus = exports.VolumeAttachmentState = exports.UserTrustProviderType = exports.TrustProviderType = exports.DeviceTrustProviderType = exports.VpcCidrBlockStateCode = exports.InterfaceProtocolType = exports.TransitGatewayAssociationState = exports.SubnetCidrBlockStateCode = exports.RouteTableAssociationStateCode = exports.IpamResourceDiscoveryAssociationState = exports.IpamAssociatedResourceDiscoveryStatus = exports.WeekDay = exports.InstanceEventWindowState = exports.IamInstanceProfileAssociationState = exports.AssociationStatusCode = exports.NatGatewayAddressStatus = exports.AllowsMultipleInstanceTypes = exports.AllocationType = exports.AllocationStrategy = exports.AllocationState = exports.IpamPoolAllocationResourceType = exports.HostRecovery = exports.HostMaintenance = exports.AutoPlacement = exports.Affinity = exports.ByoipCidrState = exports.AddressFamily = exports.AddressAttributeName = exports.DomainType = exports.PrincipalType = exports.ActivityStatus = exports.InstanceHealthStatus = exports.AccountAttributeName = exports.Protocol = exports.VpcPeeringConnectionStateReasonCode = exports.Ipv6SupportValue = exports.DnsSupportValue = exports.ApplianceModeSupportValue = exports.TransitGatewayAttachmentState = exports.DynamicRoutingValue = exports.TransitGatewayMulitcastDomainAssociationState = exports.TransitGatewayAttachmentResourceType = exports.AddressTransferStatus = exports.ResourceType = exports.AcceleratorType = exports.AcceleratorName = exports.AcceleratorManufacturer = void 0;
exports.Ipv6CidrBlockFilterSensitiveLog = exports.CidrBlockFilterSensitiveLog = exports.AcceptVpcPeeringConnectionRequestFilterSensitiveLog = exports.AcceptVpcEndpointConnectionsResultFilterSensitiveLog = exports.UnsuccessfulItemFilterSensitiveLog = exports.UnsuccessfulItemErrorFilterSensitiveLog = exports.AcceptVpcEndpointConnectionsRequestFilterSensitiveLog = exports.AcceptTransitGatewayVpcAttachmentResultFilterSensitiveLog = exports.TransitGatewayVpcAttachmentFilterSensitiveLog = exports.TransitGatewayVpcAttachmentOptionsFilterSensitiveLog = exports.AcceptTransitGatewayVpcAttachmentRequestFilterSensitiveLog = exports.AcceptTransitGatewayPeeringAttachmentResultFilterSensitiveLog = exports.TransitGatewayPeeringAttachmentFilterSensitiveLog = exports.PeeringAttachmentStatusFilterSensitiveLog = exports.TransitGatewayPeeringAttachmentOptionsFilterSensitiveLog = exports.PeeringTgwInfoFilterSensitiveLog = exports.AcceptTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = exports.AcceptTransitGatewayMulticastDomainAssociationsResultFilterSensitiveLog = exports.TransitGatewayMulticastDomainAssociationsFilterSensitiveLog = exports.SubnetAssociationFilterSensitiveLog = exports.AcceptTransitGatewayMulticastDomainAssociationsRequestFilterSensitiveLog = exports.AcceptReservedInstancesExchangeQuoteResultFilterSensitiveLog = exports.AcceptReservedInstancesExchangeQuoteRequestFilterSensitiveLog = exports.TargetConfigurationRequestFilterSensitiveLog = exports.AcceptAddressTransferResultFilterSensitiveLog = exports.AddressTransferFilterSensitiveLog = exports.AcceptAddressTransferRequestFilterSensitiveLog = exports.TagSpecificationFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = exports.AcceleratorTotalMemoryMiBFilterSensitiveLog = exports.AcceleratorCountRequestFilterSensitiveLog = exports.AcceleratorCountFilterSensitiveLog = exports.ClientVpnAuthenticationType = exports.CarrierGatewayState = exports.FleetCapacityReservationTenancy = exports._InstanceType = exports.FleetInstanceMatchCriteria = exports.CapacityReservationState = exports.CapacityReservationTenancy = exports.CapacityReservationInstancePlatform = exports.InstanceMatchCriteria = exports.EndDateType = exports.CancelSpotInstanceRequestState = exports.CancelBatchErrorCode = exports.BatchState = exports.ListingStatus = exports.CurrencyCodeValues = exports.ListingState = exports.CapacityReservationFleetState = void 0;
exports.ApplySecurityGroupsToClientVpnTargetNetworkRequestFilterSensitiveLog = exports.AlternatePathHintFilterSensitiveLog = exports.AllowedPrincipalFilterSensitiveLog = exports.AllocateIpamPoolCidrResultFilterSensitiveLog = exports.IpamPoolAllocationFilterSensitiveLog = exports.AllocateIpamPoolCidrRequestFilterSensitiveLog = exports.AllocateHostsResultFilterSensitiveLog = exports.AllocateHostsRequestFilterSensitiveLog = exports.AllocateAddressResultFilterSensitiveLog = exports.AllocateAddressRequestFilterSensitiveLog = exports.AdvertiseByoipCidrResultFilterSensitiveLog = exports.ByoipCidrFilterSensitiveLog = exports.AdvertiseByoipCidrRequestFilterSensitiveLog = exports.AddressAttributeFilterSensitiveLog = exports.PtrUpdateStatusFilterSensitiveLog = exports.AddressFilterSensitiveLog = exports.AddPrefixListEntryFilterSensitiveLog = exports.AddIpamOperatingRegionFilterSensitiveLog = exports.AddedPrincipalFilterSensitiveLog = exports.ActiveInstanceFilterSensitiveLog = exports.AccountAttributeFilterSensitiveLog = exports.AccountAttributeValueFilterSensitiveLog = exports.AccessScopePathRequestFilterSensitiveLog = exports.ThroughResourcesStatementRequestFilterSensitiveLog = exports.PathStatementRequestFilterSensitiveLog = exports.ResourceStatementRequestFilterSensitiveLog = exports.PacketHeaderStatementRequestFilterSensitiveLog = exports.AccessScopePathFilterSensitiveLog = exports.ThroughResourcesStatementFilterSensitiveLog = exports.PathStatementFilterSensitiveLog = exports.ResourceStatementFilterSensitiveLog = exports.PacketHeaderStatementFilterSensitiveLog = exports.AccessScopeAnalysisFindingFilterSensitiveLog = exports.PathComponentFilterSensitiveLog = exports.AnalysisPacketHeaderFilterSensitiveLog = exports.ExplanationFilterSensitiveLog = exports.TransitGatewayRouteTableRouteFilterSensitiveLog = exports.AnalysisSecurityGroupRuleFilterSensitiveLog = exports.AnalysisRouteTableRouteFilterSensitiveLog = exports.AnalysisLoadBalancerTargetFilterSensitiveLog = exports.AnalysisLoadBalancerListenerFilterSensitiveLog = exports.AdditionalDetailFilterSensitiveLog = exports.AnalysisComponentFilterSensitiveLog = exports.AnalysisAclRuleFilterSensitiveLog = exports.PortRangeFilterSensitiveLog = exports.AcceptVpcPeeringConnectionResultFilterSensitiveLog = exports.VpcPeeringConnectionFilterSensitiveLog = exports.VpcPeeringConnectionStateReasonFilterSensitiveLog = exports.VpcPeeringConnectionVpcInfoFilterSensitiveLog = exports.VpcPeeringConnectionOptionsDescriptionFilterSensitiveLog = void 0;
exports.AssociateTrunkInterfaceRequestFilterSensitiveLog = exports.AssociateTransitGatewayRouteTableResultFilterSensitiveLog = exports.TransitGatewayAssociationFilterSensitiveLog = exports.AssociateTransitGatewayRouteTableRequestFilterSensitiveLog = exports.AssociateTransitGatewayPolicyTableResultFilterSensitiveLog = exports.TransitGatewayPolicyTableAssociationFilterSensitiveLog = exports.AssociateTransitGatewayPolicyTableRequestFilterSensitiveLog = exports.AssociateTransitGatewayMulticastDomainResultFilterSensitiveLog = exports.AssociateTransitGatewayMulticastDomainRequestFilterSensitiveLog = exports.AssociateSubnetCidrBlockResultFilterSensitiveLog = exports.SubnetIpv6CidrBlockAssociationFilterSensitiveLog = exports.SubnetCidrBlockStateFilterSensitiveLog = exports.AssociateSubnetCidrBlockRequestFilterSensitiveLog = exports.AssociateRouteTableResultFilterSensitiveLog = exports.RouteTableAssociationStateFilterSensitiveLog = exports.AssociateRouteTableRequestFilterSensitiveLog = exports.AssociateNatGatewayAddressResultFilterSensitiveLog = exports.AssociateNatGatewayAddressRequestFilterSensitiveLog = exports.AssociateIpamResourceDiscoveryResultFilterSensitiveLog = exports.IpamResourceDiscoveryAssociationFilterSensitiveLog = exports.AssociateIpamResourceDiscoveryRequestFilterSensitiveLog = exports.AssociateInstanceEventWindowResultFilterSensitiveLog = exports.InstanceEventWindowFilterSensitiveLog = exports.InstanceEventWindowTimeRangeFilterSensitiveLog = exports.InstanceEventWindowAssociationTargetFilterSensitiveLog = exports.AssociateInstanceEventWindowRequestFilterSensitiveLog = exports.InstanceEventWindowAssociationRequestFilterSensitiveLog = exports.AssociateIamInstanceProfileResultFilterSensitiveLog = exports.IamInstanceProfileAssociationFilterSensitiveLog = exports.IamInstanceProfileFilterSensitiveLog = exports.AssociateIamInstanceProfileRequestFilterSensitiveLog = exports.IamInstanceProfileSpecificationFilterSensitiveLog = exports.AssociateEnclaveCertificateIamRoleResultFilterSensitiveLog = exports.AssociateEnclaveCertificateIamRoleRequestFilterSensitiveLog = exports.AssociateDhcpOptionsRequestFilterSensitiveLog = exports.AssociateClientVpnTargetNetworkResultFilterSensitiveLog = exports.AssociationStatusFilterSensitiveLog = exports.AssociateClientVpnTargetNetworkRequestFilterSensitiveLog = exports.AssociateAddressResultFilterSensitiveLog = exports.AssociateAddressRequestFilterSensitiveLog = exports.AssignPrivateNatGatewayAddressResultFilterSensitiveLog = exports.NatGatewayAddressFilterSensitiveLog = exports.AssignPrivateNatGatewayAddressRequestFilterSensitiveLog = exports.AssignPrivateIpAddressesResultFilterSensitiveLog = exports.AssignedPrivateIpAddressFilterSensitiveLog = exports.Ipv4PrefixSpecificationFilterSensitiveLog = exports.AssignPrivateIpAddressesRequestFilterSensitiveLog = exports.AssignIpv6AddressesResultFilterSensitiveLog = exports.AssignIpv6AddressesRequestFilterSensitiveLog = exports.ApplySecurityGroupsToClientVpnTargetNetworkResultFilterSensitiveLog = void 0;
exports.CancelCapacityReservationResultFilterSensitiveLog = exports.CancelCapacityReservationRequestFilterSensitiveLog = exports.CancelBundleTaskResultFilterSensitiveLog = exports.CancelBundleTaskRequestFilterSensitiveLog = exports.BundleInstanceResultFilterSensitiveLog = exports.BundleTaskFilterSensitiveLog = exports.BundleTaskErrorFilterSensitiveLog = exports.BundleInstanceRequestFilterSensitiveLog = exports.StorageFilterSensitiveLog = exports.S3StorageFilterSensitiveLog = exports.AuthorizeSecurityGroupIngressResultFilterSensitiveLog = exports.AuthorizeSecurityGroupIngressRequestFilterSensitiveLog = exports.AuthorizeSecurityGroupEgressResultFilterSensitiveLog = exports.SecurityGroupRuleFilterSensitiveLog = exports.ReferencedSecurityGroupFilterSensitiveLog = exports.AuthorizeSecurityGroupEgressRequestFilterSensitiveLog = exports.IpPermissionFilterSensitiveLog = exports.UserIdGroupPairFilterSensitiveLog = exports.PrefixListIdFilterSensitiveLog = exports.Ipv6RangeFilterSensitiveLog = exports.IpRangeFilterSensitiveLog = exports.AuthorizeClientVpnIngressResultFilterSensitiveLog = exports.ClientVpnAuthorizationRuleStatusFilterSensitiveLog = exports.AuthorizeClientVpnIngressRequestFilterSensitiveLog = exports.AttachVpnGatewayResultFilterSensitiveLog = exports.VpcAttachmentFilterSensitiveLog = exports.AttachVpnGatewayRequestFilterSensitiveLog = exports.VolumeAttachmentFilterSensitiveLog = exports.AttachVolumeRequestFilterSensitiveLog = exports.AttachVerifiedAccessTrustProviderResultFilterSensitiveLog = exports.VerifiedAccessTrustProviderFilterSensitiveLog = exports.OidcOptionsFilterSensitiveLog = exports.DeviceOptionsFilterSensitiveLog = exports.VerifiedAccessInstanceFilterSensitiveLog = exports.VerifiedAccessTrustProviderCondensedFilterSensitiveLog = exports.AttachVerifiedAccessTrustProviderRequestFilterSensitiveLog = exports.AttachNetworkInterfaceResultFilterSensitiveLog = exports.AttachNetworkInterfaceRequestFilterSensitiveLog = exports.EnaSrdSpecificationFilterSensitiveLog = exports.EnaSrdUdpSpecificationFilterSensitiveLog = exports.AttachInternetGatewayRequestFilterSensitiveLog = exports.AttachClassicLinkVpcResultFilterSensitiveLog = exports.AttachClassicLinkVpcRequestFilterSensitiveLog = exports.AssociateVpcCidrBlockResultFilterSensitiveLog = exports.VpcIpv6CidrBlockAssociationFilterSensitiveLog = exports.VpcCidrBlockAssociationFilterSensitiveLog = exports.VpcCidrBlockStateFilterSensitiveLog = exports.AssociateVpcCidrBlockRequestFilterSensitiveLog = exports.AssociateTrunkInterfaceResultFilterSensitiveLog = exports.TrunkInterfaceAssociationFilterSensitiveLog = void 0;
exports.ConnectionLogOptionsFilterSensitiveLog = exports.ClientLoginBannerOptionsFilterSensitiveLog = exports.ClientConnectOptionsFilterSensitiveLog = exports.ClientVpnAuthenticationRequestFilterSensitiveLog = exports.CertificateAuthenticationRequestFilterSensitiveLog = exports.FederatedAuthenticationRequestFilterSensitiveLog = exports.DirectoryServiceAuthenticationRequestFilterSensitiveLog = exports.CreateCarrierGatewayResultFilterSensitiveLog = exports.CarrierGatewayFilterSensitiveLog = exports.CreateCarrierGatewayRequestFilterSensitiveLog = exports.CreateCapacityReservationFleetResultFilterSensitiveLog = exports.FleetCapacityReservationFilterSensitiveLog = exports.CreateCapacityReservationFleetRequestFilterSensitiveLog = exports.ReservationFleetInstanceSpecificationFilterSensitiveLog = exports.CreateCapacityReservationResultFilterSensitiveLog = exports.CapacityReservationFilterSensitiveLog = exports.CapacityAllocationFilterSensitiveLog = exports.CreateCapacityReservationRequestFilterSensitiveLog = exports.CopySnapshotResultFilterSensitiveLog = exports.CopySnapshotRequestFilterSensitiveLog = exports.CopyImageResultFilterSensitiveLog = exports.CopyImageRequestFilterSensitiveLog = exports.CopyFpgaImageResultFilterSensitiveLog = exports.CopyFpgaImageRequestFilterSensitiveLog = exports.ConfirmProductInstanceResultFilterSensitiveLog = exports.ConfirmProductInstanceRequestFilterSensitiveLog = exports.CancelSpotInstanceRequestsResultFilterSensitiveLog = exports.CancelledSpotInstanceRequestFilterSensitiveLog = exports.CancelSpotInstanceRequestsRequestFilterSensitiveLog = exports.CancelSpotFleetRequestsResponseFilterSensitiveLog = exports.CancelSpotFleetRequestsErrorItemFilterSensitiveLog = exports.CancelSpotFleetRequestsErrorFilterSensitiveLog = exports.CancelSpotFleetRequestsSuccessItemFilterSensitiveLog = exports.CancelSpotFleetRequestsRequestFilterSensitiveLog = exports.CancelReservedInstancesListingResultFilterSensitiveLog = exports.ReservedInstancesListingFilterSensitiveLog = exports.PriceScheduleFilterSensitiveLog = exports.InstanceCountFilterSensitiveLog = exports.CancelReservedInstancesListingRequestFilterSensitiveLog = exports.CancelImportTaskResultFilterSensitiveLog = exports.CancelImportTaskRequestFilterSensitiveLog = exports.CancelImageLaunchPermissionResultFilterSensitiveLog = exports.CancelImageLaunchPermissionRequestFilterSensitiveLog = exports.CancelExportTaskRequestFilterSensitiveLog = exports.CancelConversionRequestFilterSensitiveLog = exports.CancelCapacityReservationFleetsResultFilterSensitiveLog = exports.CapacityReservationFleetCancellationStateFilterSensitiveLog = exports.FailedCapacityReservationFleetCancellationResultFilterSensitiveLog = exports.CancelCapacityReservationFleetErrorFilterSensitiveLog = exports.CancelCapacityReservationFleetsRequestFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
var AcceleratorManufacturer;
(function (AcceleratorManufacturer) {
    AcceleratorManufacturer["AMAZON_WEB_SERVICES"] = "amazon-web-services";
    AcceleratorManufacturer["AMD"] = "amd";
    AcceleratorManufacturer["NVIDIA"] = "nvidia";
    AcceleratorManufacturer["XILINX"] = "xilinx";
})(AcceleratorManufacturer = exports.AcceleratorManufacturer || (exports.AcceleratorManufacturer = {}));
var AcceleratorName;
(function (AcceleratorName) {
    AcceleratorName["A100"] = "a100";
    AcceleratorName["INFERENTIA"] = "inferentia";
    AcceleratorName["K520"] = "k520";
    AcceleratorName["K80"] = "k80";
    AcceleratorName["M60"] = "m60";
    AcceleratorName["RADEON_PRO_V520"] = "radeon-pro-v520";
    AcceleratorName["T4"] = "t4";
    AcceleratorName["V100"] = "v100";
    AcceleratorName["VU9P"] = "vu9p";
})(AcceleratorName = exports.AcceleratorName || (exports.AcceleratorName = {}));
var AcceleratorType;
(function (AcceleratorType) {
    AcceleratorType["FPGA"] = "fpga";
    AcceleratorType["GPU"] = "gpu";
    AcceleratorType["INFERENCE"] = "inference";
})(AcceleratorType = exports.AcceleratorType || (exports.AcceleratorType = {}));
var ResourceType;
(function (ResourceType) {
    ResourceType["capacity_reservation"] = "capacity-reservation";
    ResourceType["capacity_reservation_fleet"] = "capacity-reservation-fleet";
    ResourceType["carrier_gateway"] = "carrier-gateway";
    ResourceType["client_vpn_endpoint"] = "client-vpn-endpoint";
    ResourceType["coip_pool"] = "coip-pool";
    ResourceType["customer_gateway"] = "customer-gateway";
    ResourceType["dedicated_host"] = "dedicated-host";
    ResourceType["dhcp_options"] = "dhcp-options";
    ResourceType["egress_only_internet_gateway"] = "egress-only-internet-gateway";
    ResourceType["elastic_gpu"] = "elastic-gpu";
    ResourceType["elastic_ip"] = "elastic-ip";
    ResourceType["export_image_task"] = "export-image-task";
    ResourceType["export_instance_task"] = "export-instance-task";
    ResourceType["fleet"] = "fleet";
    ResourceType["fpga_image"] = "fpga-image";
    ResourceType["host_reservation"] = "host-reservation";
    ResourceType["image"] = "image";
    ResourceType["import_image_task"] = "import-image-task";
    ResourceType["import_snapshot_task"] = "import-snapshot-task";
    ResourceType["instance"] = "instance";
    ResourceType["instance_event_window"] = "instance-event-window";
    ResourceType["internet_gateway"] = "internet-gateway";
    ResourceType["ipam"] = "ipam";
    ResourceType["ipam_pool"] = "ipam-pool";
    ResourceType["ipam_resource_discovery"] = "ipam-resource-discovery";
    ResourceType["ipam_resource_discovery_association"] = "ipam-resource-discovery-association";
    ResourceType["ipam_scope"] = "ipam-scope";
    ResourceType["ipv4pool_ec2"] = "ipv4pool-ec2";
    ResourceType["ipv6pool_ec2"] = "ipv6pool-ec2";
    ResourceType["key_pair"] = "key-pair";
    ResourceType["launch_template"] = "launch-template";
    ResourceType["local_gateway"] = "local-gateway";
    ResourceType["local_gateway_route_table"] = "local-gateway-route-table";
    ResourceType["local_gateway_route_table_virtual_interface_group_association"] = "local-gateway-route-table-virtual-interface-group-association";
    ResourceType["local_gateway_route_table_vpc_association"] = "local-gateway-route-table-vpc-association";
    ResourceType["local_gateway_virtual_interface"] = "local-gateway-virtual-interface";
    ResourceType["local_gateway_virtual_interface_group"] = "local-gateway-virtual-interface-group";
    ResourceType["natgateway"] = "natgateway";
    ResourceType["network_acl"] = "network-acl";
    ResourceType["network_insights_access_scope"] = "network-insights-access-scope";
    ResourceType["network_insights_access_scope_analysis"] = "network-insights-access-scope-analysis";
    ResourceType["network_insights_analysis"] = "network-insights-analysis";
    ResourceType["network_insights_path"] = "network-insights-path";
    ResourceType["network_interface"] = "network-interface";
    ResourceType["placement_group"] = "placement-group";
    ResourceType["prefix_list"] = "prefix-list";
    ResourceType["replace_root_volume_task"] = "replace-root-volume-task";
    ResourceType["reserved_instances"] = "reserved-instances";
    ResourceType["route_table"] = "route-table";
    ResourceType["security_group"] = "security-group";
    ResourceType["security_group_rule"] = "security-group-rule";
    ResourceType["snapshot"] = "snapshot";
    ResourceType["spot_fleet_request"] = "spot-fleet-request";
    ResourceType["spot_instances_request"] = "spot-instances-request";
    ResourceType["subnet"] = "subnet";
    ResourceType["subnet_cidr_reservation"] = "subnet-cidr-reservation";
    ResourceType["traffic_mirror_filter"] = "traffic-mirror-filter";
    ResourceType["traffic_mirror_filter_rule"] = "traffic-mirror-filter-rule";
    ResourceType["traffic_mirror_session"] = "traffic-mirror-session";
    ResourceType["traffic_mirror_target"] = "traffic-mirror-target";
    ResourceType["transit_gateway"] = "transit-gateway";
    ResourceType["transit_gateway_attachment"] = "transit-gateway-attachment";
    ResourceType["transit_gateway_connect_peer"] = "transit-gateway-connect-peer";
    ResourceType["transit_gateway_multicast_domain"] = "transit-gateway-multicast-domain";
    ResourceType["transit_gateway_policy_table"] = "transit-gateway-policy-table";
    ResourceType["transit_gateway_route_table"] = "transit-gateway-route-table";
    ResourceType["transit_gateway_route_table_announcement"] = "transit-gateway-route-table-announcement";
    ResourceType["verified_access_endpoint"] = "verified-access-endpoint";
    ResourceType["verified_access_group"] = "verified-access-group";
    ResourceType["verified_access_instance"] = "verified-access-instance";
    ResourceType["verified_access_policy"] = "verified-access-policy";
    ResourceType["verified_access_trust_provider"] = "verified-access-trust-provider";
    ResourceType["volume"] = "volume";
    ResourceType["vpc"] = "vpc";
    ResourceType["vpc_block_public_access_exclusion"] = "vpc-block-public-access-exclusion";
    ResourceType["vpc_endpoint"] = "vpc-endpoint";
    ResourceType["vpc_endpoint_connection"] = "vpc-endpoint-connection";
    ResourceType["vpc_endpoint_connection_device_type"] = "vpc-endpoint-connection-device-type";
    ResourceType["vpc_endpoint_service"] = "vpc-endpoint-service";
    ResourceType["vpc_endpoint_service_permission"] = "vpc-endpoint-service-permission";
    ResourceType["vpc_flow_log"] = "vpc-flow-log";
    ResourceType["vpc_peering_connection"] = "vpc-peering-connection";
    ResourceType["vpn_connection"] = "vpn-connection";
    ResourceType["vpn_connection_device_type"] = "vpn-connection-device-type";
    ResourceType["vpn_gateway"] = "vpn-gateway";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
var AddressTransferStatus;
(function (AddressTransferStatus) {
    AddressTransferStatus["accepted"] = "accepted";
    AddressTransferStatus["disabled"] = "disabled";
    AddressTransferStatus["pending"] = "pending";
})(AddressTransferStatus = exports.AddressTransferStatus || (exports.AddressTransferStatus = {}));
var TransitGatewayAttachmentResourceType;
(function (TransitGatewayAttachmentResourceType) {
    TransitGatewayAttachmentResourceType["connect"] = "connect";
    TransitGatewayAttachmentResourceType["direct_connect_gateway"] = "direct-connect-gateway";
    TransitGatewayAttachmentResourceType["peering"] = "peering";
    TransitGatewayAttachmentResourceType["tgw_peering"] = "tgw-peering";
    TransitGatewayAttachmentResourceType["vpc"] = "vpc";
    TransitGatewayAttachmentResourceType["vpn"] = "vpn";
})(TransitGatewayAttachmentResourceType = exports.TransitGatewayAttachmentResourceType || (exports.TransitGatewayAttachmentResourceType = {}));
var TransitGatewayMulitcastDomainAssociationState;
(function (TransitGatewayMulitcastDomainAssociationState) {
    TransitGatewayMulitcastDomainAssociationState["associated"] = "associated";
    TransitGatewayMulitcastDomainAssociationState["associating"] = "associating";
    TransitGatewayMulitcastDomainAssociationState["disassociated"] = "disassociated";
    TransitGatewayMulitcastDomainAssociationState["disassociating"] = "disassociating";
    TransitGatewayMulitcastDomainAssociationState["failed"] = "failed";
    TransitGatewayMulitcastDomainAssociationState["pendingAcceptance"] = "pendingAcceptance";
    TransitGatewayMulitcastDomainAssociationState["rejected"] = "rejected";
})(TransitGatewayMulitcastDomainAssociationState = exports.TransitGatewayMulitcastDomainAssociationState || (exports.TransitGatewayMulitcastDomainAssociationState = {}));
var DynamicRoutingValue;
(function (DynamicRoutingValue) {
    DynamicRoutingValue["disable"] = "disable";
    DynamicRoutingValue["enable"] = "enable";
})(DynamicRoutingValue = exports.DynamicRoutingValue || (exports.DynamicRoutingValue = {}));
var TransitGatewayAttachmentState;
(function (TransitGatewayAttachmentState) {
    TransitGatewayAttachmentState["available"] = "available";
    TransitGatewayAttachmentState["deleted"] = "deleted";
    TransitGatewayAttachmentState["deleting"] = "deleting";
    TransitGatewayAttachmentState["failed"] = "failed";
    TransitGatewayAttachmentState["failing"] = "failing";
    TransitGatewayAttachmentState["initiating"] = "initiating";
    TransitGatewayAttachmentState["initiatingRequest"] = "initiatingRequest";
    TransitGatewayAttachmentState["modifying"] = "modifying";
    TransitGatewayAttachmentState["pending"] = "pending";
    TransitGatewayAttachmentState["pendingAcceptance"] = "pendingAcceptance";
    TransitGatewayAttachmentState["rejected"] = "rejected";
    TransitGatewayAttachmentState["rejecting"] = "rejecting";
    TransitGatewayAttachmentState["rollingBack"] = "rollingBack";
})(TransitGatewayAttachmentState = exports.TransitGatewayAttachmentState || (exports.TransitGatewayAttachmentState = {}));
var ApplianceModeSupportValue;
(function (ApplianceModeSupportValue) {
    ApplianceModeSupportValue["disable"] = "disable";
    ApplianceModeSupportValue["enable"] = "enable";
})(ApplianceModeSupportValue = exports.ApplianceModeSupportValue || (exports.ApplianceModeSupportValue = {}));
var DnsSupportValue;
(function (DnsSupportValue) {
    DnsSupportValue["disable"] = "disable";
    DnsSupportValue["enable"] = "enable";
})(DnsSupportValue = exports.DnsSupportValue || (exports.DnsSupportValue = {}));
var Ipv6SupportValue;
(function (Ipv6SupportValue) {
    Ipv6SupportValue["disable"] = "disable";
    Ipv6SupportValue["enable"] = "enable";
})(Ipv6SupportValue = exports.Ipv6SupportValue || (exports.Ipv6SupportValue = {}));
var VpcPeeringConnectionStateReasonCode;
(function (VpcPeeringConnectionStateReasonCode) {
    VpcPeeringConnectionStateReasonCode["active"] = "active";
    VpcPeeringConnectionStateReasonCode["deleted"] = "deleted";
    VpcPeeringConnectionStateReasonCode["deleting"] = "deleting";
    VpcPeeringConnectionStateReasonCode["expired"] = "expired";
    VpcPeeringConnectionStateReasonCode["failed"] = "failed";
    VpcPeeringConnectionStateReasonCode["initiating_request"] = "initiating-request";
    VpcPeeringConnectionStateReasonCode["pending_acceptance"] = "pending-acceptance";
    VpcPeeringConnectionStateReasonCode["provisioning"] = "provisioning";
    VpcPeeringConnectionStateReasonCode["rejected"] = "rejected";
})(VpcPeeringConnectionStateReasonCode = exports.VpcPeeringConnectionStateReasonCode || (exports.VpcPeeringConnectionStateReasonCode = {}));
var Protocol;
(function (Protocol) {
    Protocol["tcp"] = "tcp";
    Protocol["udp"] = "udp";
})(Protocol = exports.Protocol || (exports.Protocol = {}));
var AccountAttributeName;
(function (AccountAttributeName) {
    AccountAttributeName["default_vpc"] = "default-vpc";
    AccountAttributeName["supported_platforms"] = "supported-platforms";
})(AccountAttributeName = exports.AccountAttributeName || (exports.AccountAttributeName = {}));
var InstanceHealthStatus;
(function (InstanceHealthStatus) {
    InstanceHealthStatus["HEALTHY_STATUS"] = "healthy";
    InstanceHealthStatus["UNHEALTHY_STATUS"] = "unhealthy";
})(InstanceHealthStatus = exports.InstanceHealthStatus || (exports.InstanceHealthStatus = {}));
var ActivityStatus;
(function (ActivityStatus) {
    ActivityStatus["ERROR"] = "error";
    ActivityStatus["FULFILLED"] = "fulfilled";
    ActivityStatus["PENDING_FULFILLMENT"] = "pending_fulfillment";
    ActivityStatus["PENDING_TERMINATION"] = "pending_termination";
})(ActivityStatus = exports.ActivityStatus || (exports.ActivityStatus = {}));
var PrincipalType;
(function (PrincipalType) {
    PrincipalType["Account"] = "Account";
    PrincipalType["All"] = "All";
    PrincipalType["OrganizationUnit"] = "OrganizationUnit";
    PrincipalType["Role"] = "Role";
    PrincipalType["Service"] = "Service";
    PrincipalType["User"] = "User";
})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));
var DomainType;
(function (DomainType) {
    DomainType["standard"] = "standard";
    DomainType["vpc"] = "vpc";
})(DomainType = exports.DomainType || (exports.DomainType = {}));
var AddressAttributeName;
(function (AddressAttributeName) {
    AddressAttributeName["domain_name"] = "domain-name";
})(AddressAttributeName = exports.AddressAttributeName || (exports.AddressAttributeName = {}));
var AddressFamily;
(function (AddressFamily) {
    AddressFamily["ipv4"] = "ipv4";
    AddressFamily["ipv6"] = "ipv6";
})(AddressFamily = exports.AddressFamily || (exports.AddressFamily = {}));
var ByoipCidrState;
(function (ByoipCidrState) {
    ByoipCidrState["advertised"] = "advertised";
    ByoipCidrState["deprovisioned"] = "deprovisioned";
    ByoipCidrState["failed_deprovision"] = "failed-deprovision";
    ByoipCidrState["failed_provision"] = "failed-provision";
    ByoipCidrState["pending_deprovision"] = "pending-deprovision";
    ByoipCidrState["pending_provision"] = "pending-provision";
    ByoipCidrState["provisioned"] = "provisioned";
    ByoipCidrState["provisioned_not_publicly_advertisable"] = "provisioned-not-publicly-advertisable";
})(ByoipCidrState = exports.ByoipCidrState || (exports.ByoipCidrState = {}));
var Affinity;
(function (Affinity) {
    Affinity["default"] = "default";
    Affinity["host"] = "host";
})(Affinity = exports.Affinity || (exports.Affinity = {}));
var AutoPlacement;
(function (AutoPlacement) {
    AutoPlacement["off"] = "off";
    AutoPlacement["on"] = "on";
})(AutoPlacement = exports.AutoPlacement || (exports.AutoPlacement = {}));
var HostMaintenance;
(function (HostMaintenance) {
    HostMaintenance["off"] = "off";
    HostMaintenance["on"] = "on";
})(HostMaintenance = exports.HostMaintenance || (exports.HostMaintenance = {}));
var HostRecovery;
(function (HostRecovery) {
    HostRecovery["off"] = "off";
    HostRecovery["on"] = "on";
})(HostRecovery = exports.HostRecovery || (exports.HostRecovery = {}));
var IpamPoolAllocationResourceType;
(function (IpamPoolAllocationResourceType) {
    IpamPoolAllocationResourceType["custom"] = "custom";
    IpamPoolAllocationResourceType["ec2_public_ipv4_pool"] = "ec2-public-ipv4-pool";
    IpamPoolAllocationResourceType["ipam_pool"] = "ipam-pool";
    IpamPoolAllocationResourceType["vpc"] = "vpc";
})(IpamPoolAllocationResourceType = exports.IpamPoolAllocationResourceType || (exports.IpamPoolAllocationResourceType = {}));
var AllocationState;
(function (AllocationState) {
    AllocationState["available"] = "available";
    AllocationState["pending"] = "pending";
    AllocationState["permanent_failure"] = "permanent-failure";
    AllocationState["released"] = "released";
    AllocationState["released_permanent_failure"] = "released-permanent-failure";
    AllocationState["under_assessment"] = "under-assessment";
})(AllocationState = exports.AllocationState || (exports.AllocationState = {}));
var AllocationStrategy;
(function (AllocationStrategy) {
    AllocationStrategy["CAPACITY_OPTIMIZED"] = "capacityOptimized";
    AllocationStrategy["CAPACITY_OPTIMIZED_PRIORITIZED"] = "capacityOptimizedPrioritized";
    AllocationStrategy["DIVERSIFIED"] = "diversified";
    AllocationStrategy["LOWEST_PRICE"] = "lowestPrice";
    AllocationStrategy["PRICE_CAPACITY_OPTIMIZED"] = "priceCapacityOptimized";
})(AllocationStrategy = exports.AllocationStrategy || (exports.AllocationStrategy = {}));
var AllocationType;
(function (AllocationType) {
    AllocationType["used"] = "used";
})(AllocationType = exports.AllocationType || (exports.AllocationType = {}));
var AllowsMultipleInstanceTypes;
(function (AllowsMultipleInstanceTypes) {
    AllowsMultipleInstanceTypes["off"] = "off";
    AllowsMultipleInstanceTypes["on"] = "on";
})(AllowsMultipleInstanceTypes = exports.AllowsMultipleInstanceTypes || (exports.AllowsMultipleInstanceTypes = {}));
var NatGatewayAddressStatus;
(function (NatGatewayAddressStatus) {
    NatGatewayAddressStatus["ASSIGNING"] = "assigning";
    NatGatewayAddressStatus["ASSOCIATING"] = "associating";
    NatGatewayAddressStatus["DISASSOCIATING"] = "disassociating";
    NatGatewayAddressStatus["FAILED"] = "failed";
    NatGatewayAddressStatus["SUCCEEDED"] = "succeeded";
    NatGatewayAddressStatus["UNASSIGNING"] = "unassigning";
})(NatGatewayAddressStatus = exports.NatGatewayAddressStatus || (exports.NatGatewayAddressStatus = {}));
var AssociationStatusCode;
(function (AssociationStatusCode) {
    AssociationStatusCode["associated"] = "associated";
    AssociationStatusCode["associating"] = "associating";
    AssociationStatusCode["association_failed"] = "association-failed";
    AssociationStatusCode["disassociated"] = "disassociated";
    AssociationStatusCode["disassociating"] = "disassociating";
})(AssociationStatusCode = exports.AssociationStatusCode || (exports.AssociationStatusCode = {}));
var IamInstanceProfileAssociationState;
(function (IamInstanceProfileAssociationState) {
    IamInstanceProfileAssociationState["ASSOCIATED"] = "associated";
    IamInstanceProfileAssociationState["ASSOCIATING"] = "associating";
    IamInstanceProfileAssociationState["DISASSOCIATED"] = "disassociated";
    IamInstanceProfileAssociationState["DISASSOCIATING"] = "disassociating";
})(IamInstanceProfileAssociationState = exports.IamInstanceProfileAssociationState || (exports.IamInstanceProfileAssociationState = {}));
var InstanceEventWindowState;
(function (InstanceEventWindowState) {
    InstanceEventWindowState["active"] = "active";
    InstanceEventWindowState["creating"] = "creating";
    InstanceEventWindowState["deleted"] = "deleted";
    InstanceEventWindowState["deleting"] = "deleting";
})(InstanceEventWindowState = exports.InstanceEventWindowState || (exports.InstanceEventWindowState = {}));
var WeekDay;
(function (WeekDay) {
    WeekDay["friday"] = "friday";
    WeekDay["monday"] = "monday";
    WeekDay["saturday"] = "saturday";
    WeekDay["sunday"] = "sunday";
    WeekDay["thursday"] = "thursday";
    WeekDay["tuesday"] = "tuesday";
    WeekDay["wednesday"] = "wednesday";
})(WeekDay = exports.WeekDay || (exports.WeekDay = {}));
var IpamAssociatedResourceDiscoveryStatus;
(function (IpamAssociatedResourceDiscoveryStatus) {
    IpamAssociatedResourceDiscoveryStatus["ACTIVE"] = "active";
    IpamAssociatedResourceDiscoveryStatus["NOT_FOUND"] = "not-found";
})(IpamAssociatedResourceDiscoveryStatus = exports.IpamAssociatedResourceDiscoveryStatus || (exports.IpamAssociatedResourceDiscoveryStatus = {}));
var IpamResourceDiscoveryAssociationState;
(function (IpamResourceDiscoveryAssociationState) {
    IpamResourceDiscoveryAssociationState["ASSOCIATE_COMPLETE"] = "associate-complete";
    IpamResourceDiscoveryAssociationState["ASSOCIATE_FAILED"] = "associate-failed";
    IpamResourceDiscoveryAssociationState["ASSOCIATE_IN_PROGRESS"] = "associate-in-progress";
    IpamResourceDiscoveryAssociationState["DISASSOCIATE_COMPLETE"] = "disassociate-complete";
    IpamResourceDiscoveryAssociationState["DISASSOCIATE_FAILED"] = "disassociate-failed";
    IpamResourceDiscoveryAssociationState["DISASSOCIATE_IN_PROGRESS"] = "disassociate-in-progress";
    IpamResourceDiscoveryAssociationState["ISOLATE_COMPLETE"] = "isolate-complete";
    IpamResourceDiscoveryAssociationState["ISOLATE_IN_PROGRESS"] = "isolate-in-progress";
    IpamResourceDiscoveryAssociationState["RESTORE_IN_PROGRESS"] = "restore-in-progress";
})(IpamResourceDiscoveryAssociationState = exports.IpamResourceDiscoveryAssociationState || (exports.IpamResourceDiscoveryAssociationState = {}));
var RouteTableAssociationStateCode;
(function (RouteTableAssociationStateCode) {
    RouteTableAssociationStateCode["associated"] = "associated";
    RouteTableAssociationStateCode["associating"] = "associating";
    RouteTableAssociationStateCode["disassociated"] = "disassociated";
    RouteTableAssociationStateCode["disassociating"] = "disassociating";
    RouteTableAssociationStateCode["failed"] = "failed";
})(RouteTableAssociationStateCode = exports.RouteTableAssociationStateCode || (exports.RouteTableAssociationStateCode = {}));
var SubnetCidrBlockStateCode;
(function (SubnetCidrBlockStateCode) {
    SubnetCidrBlockStateCode["associated"] = "associated";
    SubnetCidrBlockStateCode["associating"] = "associating";
    SubnetCidrBlockStateCode["disassociated"] = "disassociated";
    SubnetCidrBlockStateCode["disassociating"] = "disassociating";
    SubnetCidrBlockStateCode["failed"] = "failed";
    SubnetCidrBlockStateCode["failing"] = "failing";
})(SubnetCidrBlockStateCode = exports.SubnetCidrBlockStateCode || (exports.SubnetCidrBlockStateCode = {}));
var TransitGatewayAssociationState;
(function (TransitGatewayAssociationState) {
    TransitGatewayAssociationState["associated"] = "associated";
    TransitGatewayAssociationState["associating"] = "associating";
    TransitGatewayAssociationState["disassociated"] = "disassociated";
    TransitGatewayAssociationState["disassociating"] = "disassociating";
})(TransitGatewayAssociationState = exports.TransitGatewayAssociationState || (exports.TransitGatewayAssociationState = {}));
var InterfaceProtocolType;
(function (InterfaceProtocolType) {
    InterfaceProtocolType["GRE"] = "GRE";
    InterfaceProtocolType["VLAN"] = "VLAN";
})(InterfaceProtocolType = exports.InterfaceProtocolType || (exports.InterfaceProtocolType = {}));
var VpcCidrBlockStateCode;
(function (VpcCidrBlockStateCode) {
    VpcCidrBlockStateCode["associated"] = "associated";
    VpcCidrBlockStateCode["associating"] = "associating";
    VpcCidrBlockStateCode["disassociated"] = "disassociated";
    VpcCidrBlockStateCode["disassociating"] = "disassociating";
    VpcCidrBlockStateCode["failed"] = "failed";
    VpcCidrBlockStateCode["failing"] = "failing";
})(VpcCidrBlockStateCode = exports.VpcCidrBlockStateCode || (exports.VpcCidrBlockStateCode = {}));
var DeviceTrustProviderType;
(function (DeviceTrustProviderType) {
    DeviceTrustProviderType["crowdstrike"] = "crowdstrike";
    DeviceTrustProviderType["jamf"] = "jamf";
})(DeviceTrustProviderType = exports.DeviceTrustProviderType || (exports.DeviceTrustProviderType = {}));
var TrustProviderType;
(function (TrustProviderType) {
    TrustProviderType["device"] = "device";
    TrustProviderType["user"] = "user";
})(TrustProviderType = exports.TrustProviderType || (exports.TrustProviderType = {}));
var UserTrustProviderType;
(function (UserTrustProviderType) {
    UserTrustProviderType["iam_identity_center"] = "iam-identity-center";
    UserTrustProviderType["oidc"] = "oidc";
})(UserTrustProviderType = exports.UserTrustProviderType || (exports.UserTrustProviderType = {}));
var VolumeAttachmentState;
(function (VolumeAttachmentState) {
    VolumeAttachmentState["attached"] = "attached";
    VolumeAttachmentState["attaching"] = "attaching";
    VolumeAttachmentState["busy"] = "busy";
    VolumeAttachmentState["detached"] = "detached";
    VolumeAttachmentState["detaching"] = "detaching";
})(VolumeAttachmentState = exports.VolumeAttachmentState || (exports.VolumeAttachmentState = {}));
var AttachmentStatus;
(function (AttachmentStatus) {
    AttachmentStatus["attached"] = "attached";
    AttachmentStatus["attaching"] = "attaching";
    AttachmentStatus["detached"] = "detached";
    AttachmentStatus["detaching"] = "detaching";
})(AttachmentStatus = exports.AttachmentStatus || (exports.AttachmentStatus = {}));
var ClientVpnAuthorizationRuleStatusCode;
(function (ClientVpnAuthorizationRuleStatusCode) {
    ClientVpnAuthorizationRuleStatusCode["active"] = "active";
    ClientVpnAuthorizationRuleStatusCode["authorizing"] = "authorizing";
    ClientVpnAuthorizationRuleStatusCode["failed"] = "failed";
    ClientVpnAuthorizationRuleStatusCode["revoking"] = "revoking";
})(ClientVpnAuthorizationRuleStatusCode = exports.ClientVpnAuthorizationRuleStatusCode || (exports.ClientVpnAuthorizationRuleStatusCode = {}));
var BundleTaskState;
(function (BundleTaskState) {
    BundleTaskState["bundling"] = "bundling";
    BundleTaskState["cancelling"] = "cancelling";
    BundleTaskState["complete"] = "complete";
    BundleTaskState["failed"] = "failed";
    BundleTaskState["pending"] = "pending";
    BundleTaskState["storing"] = "storing";
    BundleTaskState["waiting_for_shutdown"] = "waiting-for-shutdown";
})(BundleTaskState = exports.BundleTaskState || (exports.BundleTaskState = {}));
var CapacityReservationFleetState;
(function (CapacityReservationFleetState) {
    CapacityReservationFleetState["ACTIVE"] = "active";
    CapacityReservationFleetState["CANCELLED"] = "cancelled";
    CapacityReservationFleetState["CANCELLING"] = "cancelling";
    CapacityReservationFleetState["EXPIRED"] = "expired";
    CapacityReservationFleetState["EXPIRING"] = "expiring";
    CapacityReservationFleetState["FAILED"] = "failed";
    CapacityReservationFleetState["MODIFYING"] = "modifying";
    CapacityReservationFleetState["PARTIALLY_FULFILLED"] = "partially_fulfilled";
    CapacityReservationFleetState["SUBMITTED"] = "submitted";
})(CapacityReservationFleetState = exports.CapacityReservationFleetState || (exports.CapacityReservationFleetState = {}));
var ListingState;
(function (ListingState) {
    ListingState["available"] = "available";
    ListingState["cancelled"] = "cancelled";
    ListingState["pending"] = "pending";
    ListingState["sold"] = "sold";
})(ListingState = exports.ListingState || (exports.ListingState = {}));
var CurrencyCodeValues;
(function (CurrencyCodeValues) {
    CurrencyCodeValues["USD"] = "USD";
})(CurrencyCodeValues = exports.CurrencyCodeValues || (exports.CurrencyCodeValues = {}));
var ListingStatus;
(function (ListingStatus) {
    ListingStatus["active"] = "active";
    ListingStatus["cancelled"] = "cancelled";
    ListingStatus["closed"] = "closed";
    ListingStatus["pending"] = "pending";
})(ListingStatus = exports.ListingStatus || (exports.ListingStatus = {}));
var BatchState;
(function (BatchState) {
    BatchState["ACTIVE"] = "active";
    BatchState["CANCELLED"] = "cancelled";
    BatchState["CANCELLED_RUNNING"] = "cancelled_running";
    BatchState["CANCELLED_TERMINATING_INSTANCES"] = "cancelled_terminating";
    BatchState["FAILED"] = "failed";
    BatchState["MODIFYING"] = "modifying";
    BatchState["SUBMITTED"] = "submitted";
})(BatchState = exports.BatchState || (exports.BatchState = {}));
var CancelBatchErrorCode;
(function (CancelBatchErrorCode) {
    CancelBatchErrorCode["FLEET_REQUEST_ID_DOES_NOT_EXIST"] = "fleetRequestIdDoesNotExist";
    CancelBatchErrorCode["FLEET_REQUEST_ID_MALFORMED"] = "fleetRequestIdMalformed";
    CancelBatchErrorCode["FLEET_REQUEST_NOT_IN_CANCELLABLE_STATE"] = "fleetRequestNotInCancellableState";
    CancelBatchErrorCode["UNEXPECTED_ERROR"] = "unexpectedError";
})(CancelBatchErrorCode = exports.CancelBatchErrorCode || (exports.CancelBatchErrorCode = {}));
var CancelSpotInstanceRequestState;
(function (CancelSpotInstanceRequestState) {
    CancelSpotInstanceRequestState["active"] = "active";
    CancelSpotInstanceRequestState["cancelled"] = "cancelled";
    CancelSpotInstanceRequestState["closed"] = "closed";
    CancelSpotInstanceRequestState["completed"] = "completed";
    CancelSpotInstanceRequestState["open"] = "open";
})(CancelSpotInstanceRequestState = exports.CancelSpotInstanceRequestState || (exports.CancelSpotInstanceRequestState = {}));
var EndDateType;
(function (EndDateType) {
    EndDateType["limited"] = "limited";
    EndDateType["unlimited"] = "unlimited";
})(EndDateType = exports.EndDateType || (exports.EndDateType = {}));
var InstanceMatchCriteria;
(function (InstanceMatchCriteria) {
    InstanceMatchCriteria["open"] = "open";
    InstanceMatchCriteria["targeted"] = "targeted";
})(InstanceMatchCriteria = exports.InstanceMatchCriteria || (exports.InstanceMatchCriteria = {}));
var CapacityReservationInstancePlatform;
(function (CapacityReservationInstancePlatform) {
    CapacityReservationInstancePlatform["LINUX_UNIX"] = "Linux/UNIX";
    CapacityReservationInstancePlatform["LINUX_WITH_SQL_SERVER_ENTERPRISE"] = "Linux with SQL Server Enterprise";
    CapacityReservationInstancePlatform["LINUX_WITH_SQL_SERVER_STANDARD"] = "Linux with SQL Server Standard";
    CapacityReservationInstancePlatform["LINUX_WITH_SQL_SERVER_WEB"] = "Linux with SQL Server Web";
    CapacityReservationInstancePlatform["RED_HAT_ENTERPRISE_LINUX"] = "Red Hat Enterprise Linux";
    CapacityReservationInstancePlatform["RHEL_WITH_HA"] = "RHEL with HA";
    CapacityReservationInstancePlatform["RHEL_WITH_HA_AND_SQL_SERVER_ENTERPRISE"] = "RHEL with HA and SQL Server Enterprise";
    CapacityReservationInstancePlatform["RHEL_WITH_HA_AND_SQL_SERVER_STANDARD"] = "RHEL with HA and SQL Server Standard";
    CapacityReservationInstancePlatform["RHEL_WITH_SQL_SERVER_ENTERPRISE"] = "RHEL with SQL Server Enterprise";
    CapacityReservationInstancePlatform["RHEL_WITH_SQL_SERVER_STANDARD"] = "RHEL with SQL Server Standard";
    CapacityReservationInstancePlatform["RHEL_WITH_SQL_SERVER_WEB"] = "RHEL with SQL Server Web";
    CapacityReservationInstancePlatform["SUSE_LINUX"] = "SUSE Linux";
    CapacityReservationInstancePlatform["WINDOWS"] = "Windows";
    CapacityReservationInstancePlatform["WINDOWS_WITH_SQL_SERVER"] = "Windows with SQL Server";
    CapacityReservationInstancePlatform["WINDOWS_WITH_SQL_SERVER_ENTERPRISE"] = "Windows with SQL Server Enterprise";
    CapacityReservationInstancePlatform["WINDOWS_WITH_SQL_SERVER_STANDARD"] = "Windows with SQL Server Standard";
    CapacityReservationInstancePlatform["WINDOWS_WITH_SQL_SERVER_WEB"] = "Windows with SQL Server Web";
})(CapacityReservationInstancePlatform = exports.CapacityReservationInstancePlatform || (exports.CapacityReservationInstancePlatform = {}));
var CapacityReservationTenancy;
(function (CapacityReservationTenancy) {
    CapacityReservationTenancy["dedicated"] = "dedicated";
    CapacityReservationTenancy["default"] = "default";
})(CapacityReservationTenancy = exports.CapacityReservationTenancy || (exports.CapacityReservationTenancy = {}));
var CapacityReservationState;
(function (CapacityReservationState) {
    CapacityReservationState["active"] = "active";
    CapacityReservationState["cancelled"] = "cancelled";
    CapacityReservationState["expired"] = "expired";
    CapacityReservationState["failed"] = "failed";
    CapacityReservationState["pending"] = "pending";
})(CapacityReservationState = exports.CapacityReservationState || (exports.CapacityReservationState = {}));
var FleetInstanceMatchCriteria;
(function (FleetInstanceMatchCriteria) {
    FleetInstanceMatchCriteria["open"] = "open";
})(FleetInstanceMatchCriteria = exports.FleetInstanceMatchCriteria || (exports.FleetInstanceMatchCriteria = {}));
var _InstanceType;
(function (_InstanceType) {
    _InstanceType["a1_2xlarge"] = "a1.2xlarge";
    _InstanceType["a1_4xlarge"] = "a1.4xlarge";
    _InstanceType["a1_large"] = "a1.large";
    _InstanceType["a1_medium"] = "a1.medium";
    _InstanceType["a1_metal"] = "a1.metal";
    _InstanceType["a1_xlarge"] = "a1.xlarge";
    _InstanceType["c1_medium"] = "c1.medium";
    _InstanceType["c1_xlarge"] = "c1.xlarge";
    _InstanceType["c3_2xlarge"] = "c3.2xlarge";
    _InstanceType["c3_4xlarge"] = "c3.4xlarge";
    _InstanceType["c3_8xlarge"] = "c3.8xlarge";
    _InstanceType["c3_large"] = "c3.large";
    _InstanceType["c3_xlarge"] = "c3.xlarge";
    _InstanceType["c4_2xlarge"] = "c4.2xlarge";
    _InstanceType["c4_4xlarge"] = "c4.4xlarge";
    _InstanceType["c4_8xlarge"] = "c4.8xlarge";
    _InstanceType["c4_large"] = "c4.large";
    _InstanceType["c4_xlarge"] = "c4.xlarge";
    _InstanceType["c5_12xlarge"] = "c5.12xlarge";
    _InstanceType["c5_18xlarge"] = "c5.18xlarge";
    _InstanceType["c5_24xlarge"] = "c5.24xlarge";
    _InstanceType["c5_2xlarge"] = "c5.2xlarge";
    _InstanceType["c5_4xlarge"] = "c5.4xlarge";
    _InstanceType["c5_9xlarge"] = "c5.9xlarge";
    _InstanceType["c5_large"] = "c5.large";
    _InstanceType["c5_metal"] = "c5.metal";
    _InstanceType["c5_xlarge"] = "c5.xlarge";
    _InstanceType["c5a_12xlarge"] = "c5a.12xlarge";
    _InstanceType["c5a_16xlarge"] = "c5a.16xlarge";
    _InstanceType["c5a_24xlarge"] = "c5a.24xlarge";
    _InstanceType["c5a_2xlarge"] = "c5a.2xlarge";
    _InstanceType["c5a_4xlarge"] = "c5a.4xlarge";
    _InstanceType["c5a_8xlarge"] = "c5a.8xlarge";
    _InstanceType["c5a_large"] = "c5a.large";
    _InstanceType["c5a_xlarge"] = "c5a.xlarge";
    _InstanceType["c5ad_12xlarge"] = "c5ad.12xlarge";
    _InstanceType["c5ad_16xlarge"] = "c5ad.16xlarge";
    _InstanceType["c5ad_24xlarge"] = "c5ad.24xlarge";
    _InstanceType["c5ad_2xlarge"] = "c5ad.2xlarge";
    _InstanceType["c5ad_4xlarge"] = "c5ad.4xlarge";
    _InstanceType["c5ad_8xlarge"] = "c5ad.8xlarge";
    _InstanceType["c5ad_large"] = "c5ad.large";
    _InstanceType["c5ad_xlarge"] = "c5ad.xlarge";
    _InstanceType["c5d_12xlarge"] = "c5d.12xlarge";
    _InstanceType["c5d_18xlarge"] = "c5d.18xlarge";
    _InstanceType["c5d_24xlarge"] = "c5d.24xlarge";
    _InstanceType["c5d_2xlarge"] = "c5d.2xlarge";
    _InstanceType["c5d_4xlarge"] = "c5d.4xlarge";
    _InstanceType["c5d_9xlarge"] = "c5d.9xlarge";
    _InstanceType["c5d_large"] = "c5d.large";
    _InstanceType["c5d_metal"] = "c5d.metal";
    _InstanceType["c5d_xlarge"] = "c5d.xlarge";
    _InstanceType["c5n_18xlarge"] = "c5n.18xlarge";
    _InstanceType["c5n_2xlarge"] = "c5n.2xlarge";
    _InstanceType["c5n_4xlarge"] = "c5n.4xlarge";
    _InstanceType["c5n_9xlarge"] = "c5n.9xlarge";
    _InstanceType["c5n_large"] = "c5n.large";
    _InstanceType["c5n_metal"] = "c5n.metal";
    _InstanceType["c5n_xlarge"] = "c5n.xlarge";
    _InstanceType["c6a_12xlarge"] = "c6a.12xlarge";
    _InstanceType["c6a_16xlarge"] = "c6a.16xlarge";
    _InstanceType["c6a_24xlarge"] = "c6a.24xlarge";
    _InstanceType["c6a_2xlarge"] = "c6a.2xlarge";
    _InstanceType["c6a_32xlarge"] = "c6a.32xlarge";
    _InstanceType["c6a_48xlarge"] = "c6a.48xlarge";
    _InstanceType["c6a_4xlarge"] = "c6a.4xlarge";
    _InstanceType["c6a_8xlarge"] = "c6a.8xlarge";
    _InstanceType["c6a_large"] = "c6a.large";
    _InstanceType["c6a_metal"] = "c6a.metal";
    _InstanceType["c6a_xlarge"] = "c6a.xlarge";
    _InstanceType["c6g_12xlarge"] = "c6g.12xlarge";
    _InstanceType["c6g_16xlarge"] = "c6g.16xlarge";
    _InstanceType["c6g_2xlarge"] = "c6g.2xlarge";
    _InstanceType["c6g_4xlarge"] = "c6g.4xlarge";
    _InstanceType["c6g_8xlarge"] = "c6g.8xlarge";
    _InstanceType["c6g_large"] = "c6g.large";
    _InstanceType["c6g_medium"] = "c6g.medium";
    _InstanceType["c6g_metal"] = "c6g.metal";
    _InstanceType["c6g_xlarge"] = "c6g.xlarge";
    _InstanceType["c6gd_12xlarge"] = "c6gd.12xlarge";
    _InstanceType["c6gd_16xlarge"] = "c6gd.16xlarge";
    _InstanceType["c6gd_2xlarge"] = "c6gd.2xlarge";
    _InstanceType["c6gd_4xlarge"] = "c6gd.4xlarge";
    _InstanceType["c6gd_8xlarge"] = "c6gd.8xlarge";
    _InstanceType["c6gd_large"] = "c6gd.large";
    _InstanceType["c6gd_medium"] = "c6gd.medium";
    _InstanceType["c6gd_metal"] = "c6gd.metal";
    _InstanceType["c6gd_xlarge"] = "c6gd.xlarge";
    _InstanceType["c6gn_12xlarge"] = "c6gn.12xlarge";
    _InstanceType["c6gn_16xlarge"] = "c6gn.16xlarge";
    _InstanceType["c6gn_2xlarge"] = "c6gn.2xlarge";
    _InstanceType["c6gn_4xlarge"] = "c6gn.4xlarge";
    _InstanceType["c6gn_8xlarge"] = "c6gn.8xlarge";
    _InstanceType["c6gn_large"] = "c6gn.large";
    _InstanceType["c6gn_medium"] = "c6gn.medium";
    _InstanceType["c6gn_xlarge"] = "c6gn.xlarge";
    _InstanceType["c6i_12xlarge"] = "c6i.12xlarge";
    _InstanceType["c6i_16xlarge"] = "c6i.16xlarge";
    _InstanceType["c6i_24xlarge"] = "c6i.24xlarge";
    _InstanceType["c6i_2xlarge"] = "c6i.2xlarge";
    _InstanceType["c6i_32xlarge"] = "c6i.32xlarge";
    _InstanceType["c6i_4xlarge"] = "c6i.4xlarge";
    _InstanceType["c6i_8xlarge"] = "c6i.8xlarge";
    _InstanceType["c6i_large"] = "c6i.large";
    _InstanceType["c6i_metal"] = "c6i.metal";
    _InstanceType["c6i_xlarge"] = "c6i.xlarge";
    _InstanceType["c6id_12xlarge"] = "c6id.12xlarge";
    _InstanceType["c6id_16xlarge"] = "c6id.16xlarge";
    _InstanceType["c6id_24xlarge"] = "c6id.24xlarge";
    _InstanceType["c6id_2xlarge"] = "c6id.2xlarge";
    _InstanceType["c6id_32xlarge"] = "c6id.32xlarge";
    _InstanceType["c6id_4xlarge"] = "c6id.4xlarge";
    _InstanceType["c6id_8xlarge"] = "c6id.8xlarge";
    _InstanceType["c6id_large"] = "c6id.large";
    _InstanceType["c6id_metal"] = "c6id.metal";
    _InstanceType["c6id_xlarge"] = "c6id.xlarge";
    _InstanceType["c6in_12xlarge"] = "c6in.12xlarge";
    _InstanceType["c6in_16xlarge"] = "c6in.16xlarge";
    _InstanceType["c6in_24xlarge"] = "c6in.24xlarge";
    _InstanceType["c6in_2xlarge"] = "c6in.2xlarge";
    _InstanceType["c6in_32xlarge"] = "c6in.32xlarge";
    _InstanceType["c6in_4xlarge"] = "c6in.4xlarge";
    _InstanceType["c6in_8xlarge"] = "c6in.8xlarge";
    _InstanceType["c6in_large"] = "c6in.large";
    _InstanceType["c6in_xlarge"] = "c6in.xlarge";
    _InstanceType["c7g_12xlarge"] = "c7g.12xlarge";
    _InstanceType["c7g_16xlarge"] = "c7g.16xlarge";
    _InstanceType["c7g_2xlarge"] = "c7g.2xlarge";
    _InstanceType["c7g_4xlarge"] = "c7g.4xlarge";
    _InstanceType["c7g_8xlarge"] = "c7g.8xlarge";
    _InstanceType["c7g_large"] = "c7g.large";
    _InstanceType["c7g_medium"] = "c7g.medium";
    _InstanceType["c7g_metal"] = "c7g.metal";
    _InstanceType["c7g_xlarge"] = "c7g.xlarge";
    _InstanceType["cc1_4xlarge"] = "cc1.4xlarge";
    _InstanceType["cc2_8xlarge"] = "cc2.8xlarge";
    _InstanceType["cg1_4xlarge"] = "cg1.4xlarge";
    _InstanceType["cr1_8xlarge"] = "cr1.8xlarge";
    _InstanceType["d2_2xlarge"] = "d2.2xlarge";
    _InstanceType["d2_4xlarge"] = "d2.4xlarge";
    _InstanceType["d2_8xlarge"] = "d2.8xlarge";
    _InstanceType["d2_xlarge"] = "d2.xlarge";
    _InstanceType["d3_2xlarge"] = "d3.2xlarge";
    _InstanceType["d3_4xlarge"] = "d3.4xlarge";
    _InstanceType["d3_8xlarge"] = "d3.8xlarge";
    _InstanceType["d3_xlarge"] = "d3.xlarge";
    _InstanceType["d3en_12xlarge"] = "d3en.12xlarge";
    _InstanceType["d3en_2xlarge"] = "d3en.2xlarge";
    _InstanceType["d3en_4xlarge"] = "d3en.4xlarge";
    _InstanceType["d3en_6xlarge"] = "d3en.6xlarge";
    _InstanceType["d3en_8xlarge"] = "d3en.8xlarge";
    _InstanceType["d3en_xlarge"] = "d3en.xlarge";
    _InstanceType["dl1_24xlarge"] = "dl1.24xlarge";
    _InstanceType["f1_16xlarge"] = "f1.16xlarge";
    _InstanceType["f1_2xlarge"] = "f1.2xlarge";
    _InstanceType["f1_4xlarge"] = "f1.4xlarge";
    _InstanceType["g2_2xlarge"] = "g2.2xlarge";
    _InstanceType["g2_8xlarge"] = "g2.8xlarge";
    _InstanceType["g3_16xlarge"] = "g3.16xlarge";
    _InstanceType["g3_4xlarge"] = "g3.4xlarge";
    _InstanceType["g3_8xlarge"] = "g3.8xlarge";
    _InstanceType["g3s_xlarge"] = "g3s.xlarge";
    _InstanceType["g4ad_16xlarge"] = "g4ad.16xlarge";
    _InstanceType["g4ad_2xlarge"] = "g4ad.2xlarge";
    _InstanceType["g4ad_4xlarge"] = "g4ad.4xlarge";
    _InstanceType["g4ad_8xlarge"] = "g4ad.8xlarge";
    _InstanceType["g4ad_xlarge"] = "g4ad.xlarge";
    _InstanceType["g4dn_12xlarge"] = "g4dn.12xlarge";
    _InstanceType["g4dn_16xlarge"] = "g4dn.16xlarge";
    _InstanceType["g4dn_2xlarge"] = "g4dn.2xlarge";
    _InstanceType["g4dn_4xlarge"] = "g4dn.4xlarge";
    _InstanceType["g4dn_8xlarge"] = "g4dn.8xlarge";
    _InstanceType["g4dn_metal"] = "g4dn.metal";
    _InstanceType["g4dn_xlarge"] = "g4dn.xlarge";
    _InstanceType["g5_12xlarge"] = "g5.12xlarge";
    _InstanceType["g5_16xlarge"] = "g5.16xlarge";
    _InstanceType["g5_24xlarge"] = "g5.24xlarge";
    _InstanceType["g5_2xlarge"] = "g5.2xlarge";
    _InstanceType["g5_48xlarge"] = "g5.48xlarge";
    _InstanceType["g5_4xlarge"] = "g5.4xlarge";
    _InstanceType["g5_8xlarge"] = "g5.8xlarge";
    _InstanceType["g5_xlarge"] = "g5.xlarge";
    _InstanceType["g5g_16xlarge"] = "g5g.16xlarge";
    _InstanceType["g5g_2xlarge"] = "g5g.2xlarge";
    _InstanceType["g5g_4xlarge"] = "g5g.4xlarge";
    _InstanceType["g5g_8xlarge"] = "g5g.8xlarge";
    _InstanceType["g5g_metal"] = "g5g.metal";
    _InstanceType["g5g_xlarge"] = "g5g.xlarge";
    _InstanceType["h1_16xlarge"] = "h1.16xlarge";
    _InstanceType["h1_2xlarge"] = "h1.2xlarge";
    _InstanceType["h1_4xlarge"] = "h1.4xlarge";
    _InstanceType["h1_8xlarge"] = "h1.8xlarge";
    _InstanceType["hi1_4xlarge"] = "hi1.4xlarge";
    _InstanceType["hpc6a_48xlarge"] = "hpc6a.48xlarge";
    _InstanceType["hpc6id_32xlarge"] = "hpc6id.32xlarge";
    _InstanceType["hs1_8xlarge"] = "hs1.8xlarge";
    _InstanceType["i2_2xlarge"] = "i2.2xlarge";
    _InstanceType["i2_4xlarge"] = "i2.4xlarge";
    _InstanceType["i2_8xlarge"] = "i2.8xlarge";
    _InstanceType["i2_xlarge"] = "i2.xlarge";
    _InstanceType["i3_16xlarge"] = "i3.16xlarge";
    _InstanceType["i3_2xlarge"] = "i3.2xlarge";
    _InstanceType["i3_4xlarge"] = "i3.4xlarge";
    _InstanceType["i3_8xlarge"] = "i3.8xlarge";
    _InstanceType["i3_large"] = "i3.large";
    _InstanceType["i3_metal"] = "i3.metal";
    _InstanceType["i3_xlarge"] = "i3.xlarge";
    _InstanceType["i3en_12xlarge"] = "i3en.12xlarge";
    _InstanceType["i3en_24xlarge"] = "i3en.24xlarge";
    _InstanceType["i3en_2xlarge"] = "i3en.2xlarge";
    _InstanceType["i3en_3xlarge"] = "i3en.3xlarge";
    _InstanceType["i3en_6xlarge"] = "i3en.6xlarge";
    _InstanceType["i3en_large"] = "i3en.large";
    _InstanceType["i3en_metal"] = "i3en.metal";
    _InstanceType["i3en_xlarge"] = "i3en.xlarge";
    _InstanceType["i4i_16xlarge"] = "i4i.16xlarge";
    _InstanceType["i4i_2xlarge"] = "i4i.2xlarge";
    _InstanceType["i4i_32xlarge"] = "i4i.32xlarge";
    _InstanceType["i4i_4xlarge"] = "i4i.4xlarge";
    _InstanceType["i4i_8xlarge"] = "i4i.8xlarge";
    _InstanceType["i4i_large"] = "i4i.large";
    _InstanceType["i4i_metal"] = "i4i.metal";
    _InstanceType["i4i_xlarge"] = "i4i.xlarge";
    _InstanceType["im4gn_16xlarge"] = "im4gn.16xlarge";
    _InstanceType["im4gn_2xlarge"] = "im4gn.2xlarge";
    _InstanceType["im4gn_4xlarge"] = "im4gn.4xlarge";
    _InstanceType["im4gn_8xlarge"] = "im4gn.8xlarge";
    _InstanceType["im4gn_large"] = "im4gn.large";
    _InstanceType["im4gn_xlarge"] = "im4gn.xlarge";
    _InstanceType["inf1_24xlarge"] = "inf1.24xlarge";
    _InstanceType["inf1_2xlarge"] = "inf1.2xlarge";
    _InstanceType["inf1_6xlarge"] = "inf1.6xlarge";
    _InstanceType["inf1_xlarge"] = "inf1.xlarge";
    _InstanceType["is4gen_2xlarge"] = "is4gen.2xlarge";
    _InstanceType["is4gen_4xlarge"] = "is4gen.4xlarge";
    _InstanceType["is4gen_8xlarge"] = "is4gen.8xlarge";
    _InstanceType["is4gen_large"] = "is4gen.large";
    _InstanceType["is4gen_medium"] = "is4gen.medium";
    _InstanceType["is4gen_xlarge"] = "is4gen.xlarge";
    _InstanceType["m1_large"] = "m1.large";
    _InstanceType["m1_medium"] = "m1.medium";
    _InstanceType["m1_small"] = "m1.small";
    _InstanceType["m1_xlarge"] = "m1.xlarge";
    _InstanceType["m2_2xlarge"] = "m2.2xlarge";
    _InstanceType["m2_4xlarge"] = "m2.4xlarge";
    _InstanceType["m2_xlarge"] = "m2.xlarge";
    _InstanceType["m3_2xlarge"] = "m3.2xlarge";
    _InstanceType["m3_large"] = "m3.large";
    _InstanceType["m3_medium"] = "m3.medium";
    _InstanceType["m3_xlarge"] = "m3.xlarge";
    _InstanceType["m4_10xlarge"] = "m4.10xlarge";
    _InstanceType["m4_16xlarge"] = "m4.16xlarge";
    _InstanceType["m4_2xlarge"] = "m4.2xlarge";
    _InstanceType["m4_4xlarge"] = "m4.4xlarge";
    _InstanceType["m4_large"] = "m4.large";
    _InstanceType["m4_xlarge"] = "m4.xlarge";
    _InstanceType["m5_12xlarge"] = "m5.12xlarge";
    _InstanceType["m5_16xlarge"] = "m5.16xlarge";
    _InstanceType["m5_24xlarge"] = "m5.24xlarge";
    _InstanceType["m5_2xlarge"] = "m5.2xlarge";
    _InstanceType["m5_4xlarge"] = "m5.4xlarge";
    _InstanceType["m5_8xlarge"] = "m5.8xlarge";
    _InstanceType["m5_large"] = "m5.large";
    _InstanceType["m5_metal"] = "m5.metal";
    _InstanceType["m5_xlarge"] = "m5.xlarge";
    _InstanceType["m5a_12xlarge"] = "m5a.12xlarge";
    _InstanceType["m5a_16xlarge"] = "m5a.16xlarge";
    _InstanceType["m5a_24xlarge"] = "m5a.24xlarge";
    _InstanceType["m5a_2xlarge"] = "m5a.2xlarge";
    _InstanceType["m5a_4xlarge"] = "m5a.4xlarge";
    _InstanceType["m5a_8xlarge"] = "m5a.8xlarge";
    _InstanceType["m5a_large"] = "m5a.large";
    _InstanceType["m5a_xlarge"] = "m5a.xlarge";
    _InstanceType["m5ad_12xlarge"] = "m5ad.12xlarge";
    _InstanceType["m5ad_16xlarge"] = "m5ad.16xlarge";
    _InstanceType["m5ad_24xlarge"] = "m5ad.24xlarge";
    _InstanceType["m5ad_2xlarge"] = "m5ad.2xlarge";
    _InstanceType["m5ad_4xlarge"] = "m5ad.4xlarge";
    _InstanceType["m5ad_8xlarge"] = "m5ad.8xlarge";
    _InstanceType["m5ad_large"] = "m5ad.large";
    _InstanceType["m5ad_xlarge"] = "m5ad.xlarge";
    _InstanceType["m5d_12xlarge"] = "m5d.12xlarge";
    _InstanceType["m5d_16xlarge"] = "m5d.16xlarge";
    _InstanceType["m5d_24xlarge"] = "m5d.24xlarge";
    _InstanceType["m5d_2xlarge"] = "m5d.2xlarge";
    _InstanceType["m5d_4xlarge"] = "m5d.4xlarge";
    _InstanceType["m5d_8xlarge"] = "m5d.8xlarge";
    _InstanceType["m5d_large"] = "m5d.large";
    _InstanceType["m5d_metal"] = "m5d.metal";
    _InstanceType["m5d_xlarge"] = "m5d.xlarge";
    _InstanceType["m5dn_12xlarge"] = "m5dn.12xlarge";
    _InstanceType["m5dn_16xlarge"] = "m5dn.16xlarge";
    _InstanceType["m5dn_24xlarge"] = "m5dn.24xlarge";
    _InstanceType["m5dn_2xlarge"] = "m5dn.2xlarge";
    _InstanceType["m5dn_4xlarge"] = "m5dn.4xlarge";
    _InstanceType["m5dn_8xlarge"] = "m5dn.8xlarge";
    _InstanceType["m5dn_large"] = "m5dn.large";
    _InstanceType["m5dn_metal"] = "m5dn.metal";
    _InstanceType["m5dn_xlarge"] = "m5dn.xlarge";
    _InstanceType["m5n_12xlarge"] = "m5n.12xlarge";
    _InstanceType["m5n_16xlarge"] = "m5n.16xlarge";
    _InstanceType["m5n_24xlarge"] = "m5n.24xlarge";
    _InstanceType["m5n_2xlarge"] = "m5n.2xlarge";
    _InstanceType["m5n_4xlarge"] = "m5n.4xlarge";
    _InstanceType["m5n_8xlarge"] = "m5n.8xlarge";
    _InstanceType["m5n_large"] = "m5n.large";
    _InstanceType["m5n_metal"] = "m5n.metal";
    _InstanceType["m5n_xlarge"] = "m5n.xlarge";
    _InstanceType["m5zn_12xlarge"] = "m5zn.12xlarge";
    _InstanceType["m5zn_2xlarge"] = "m5zn.2xlarge";
    _InstanceType["m5zn_3xlarge"] = "m5zn.3xlarge";
    _InstanceType["m5zn_6xlarge"] = "m5zn.6xlarge";
    _InstanceType["m5zn_large"] = "m5zn.large";
    _InstanceType["m5zn_metal"] = "m5zn.metal";
    _InstanceType["m5zn_xlarge"] = "m5zn.xlarge";
    _InstanceType["m6a_12xlarge"] = "m6a.12xlarge";
    _InstanceType["m6a_16xlarge"] = "m6a.16xlarge";
    _InstanceType["m6a_24xlarge"] = "m6a.24xlarge";
    _InstanceType["m6a_2xlarge"] = "m6a.2xlarge";
    _InstanceType["m6a_32xlarge"] = "m6a.32xlarge";
    _InstanceType["m6a_48xlarge"] = "m6a.48xlarge";
    _InstanceType["m6a_4xlarge"] = "m6a.4xlarge";
    _InstanceType["m6a_8xlarge"] = "m6a.8xlarge";
    _InstanceType["m6a_large"] = "m6a.large";
    _InstanceType["m6a_metal"] = "m6a.metal";
    _InstanceType["m6a_xlarge"] = "m6a.xlarge";
    _InstanceType["m6g_12xlarge"] = "m6g.12xlarge";
    _InstanceType["m6g_16xlarge"] = "m6g.16xlarge";
    _InstanceType["m6g_2xlarge"] = "m6g.2xlarge";
    _InstanceType["m6g_4xlarge"] = "m6g.4xlarge";
    _InstanceType["m6g_8xlarge"] = "m6g.8xlarge";
    _InstanceType["m6g_large"] = "m6g.large";
    _InstanceType["m6g_medium"] = "m6g.medium";
    _InstanceType["m6g_metal"] = "m6g.metal";
    _InstanceType["m6g_xlarge"] = "m6g.xlarge";
    _InstanceType["m6gd_12xlarge"] = "m6gd.12xlarge";
    _InstanceType["m6gd_16xlarge"] = "m6gd.16xlarge";
    _InstanceType["m6gd_2xlarge"] = "m6gd.2xlarge";
    _InstanceType["m6gd_4xlarge"] = "m6gd.4xlarge";
    _InstanceType["m6gd_8xlarge"] = "m6gd.8xlarge";
    _InstanceType["m6gd_large"] = "m6gd.large";
    _InstanceType["m6gd_medium"] = "m6gd.medium";
    _InstanceType["m6gd_metal"] = "m6gd.metal";
    _InstanceType["m6gd_xlarge"] = "m6gd.xlarge";
    _InstanceType["m6i_12xlarge"] = "m6i.12xlarge";
    _InstanceType["m6i_16xlarge"] = "m6i.16xlarge";
    _InstanceType["m6i_24xlarge"] = "m6i.24xlarge";
    _InstanceType["m6i_2xlarge"] = "m6i.2xlarge";
    _InstanceType["m6i_32xlarge"] = "m6i.32xlarge";
    _InstanceType["m6i_4xlarge"] = "m6i.4xlarge";
    _InstanceType["m6i_8xlarge"] = "m6i.8xlarge";
    _InstanceType["m6i_large"] = "m6i.large";
    _InstanceType["m6i_metal"] = "m6i.metal";
    _InstanceType["m6i_xlarge"] = "m6i.xlarge";
    _InstanceType["m6id_12xlarge"] = "m6id.12xlarge";
    _InstanceType["m6id_16xlarge"] = "m6id.16xlarge";
    _InstanceType["m6id_24xlarge"] = "m6id.24xlarge";
    _InstanceType["m6id_2xlarge"] = "m6id.2xlarge";
    _InstanceType["m6id_32xlarge"] = "m6id.32xlarge";
    _InstanceType["m6id_4xlarge"] = "m6id.4xlarge";
    _InstanceType["m6id_8xlarge"] = "m6id.8xlarge";
    _InstanceType["m6id_large"] = "m6id.large";
    _InstanceType["m6id_metal"] = "m6id.metal";
    _InstanceType["m6id_xlarge"] = "m6id.xlarge";
    _InstanceType["m6idn_12xlarge"] = "m6idn.12xlarge";
    _InstanceType["m6idn_16xlarge"] = "m6idn.16xlarge";
    _InstanceType["m6idn_24xlarge"] = "m6idn.24xlarge";
    _InstanceType["m6idn_2xlarge"] = "m6idn.2xlarge";
    _InstanceType["m6idn_32xlarge"] = "m6idn.32xlarge";
    _InstanceType["m6idn_4xlarge"] = "m6idn.4xlarge";
    _InstanceType["m6idn_8xlarge"] = "m6idn.8xlarge";
    _InstanceType["m6idn_large"] = "m6idn.large";
    _InstanceType["m6idn_xlarge"] = "m6idn.xlarge";
    _InstanceType["m6in_12xlarge"] = "m6in.12xlarge";
    _InstanceType["m6in_16xlarge"] = "m6in.16xlarge";
    _InstanceType["m6in_24xlarge"] = "m6in.24xlarge";
    _InstanceType["m6in_2xlarge"] = "m6in.2xlarge";
    _InstanceType["m6in_32xlarge"] = "m6in.32xlarge";
    _InstanceType["m6in_4xlarge"] = "m6in.4xlarge";
    _InstanceType["m6in_8xlarge"] = "m6in.8xlarge";
    _InstanceType["m6in_large"] = "m6in.large";
    _InstanceType["m6in_xlarge"] = "m6in.xlarge";
    _InstanceType["m7g_12xlarge"] = "m7g.12xlarge";
    _InstanceType["m7g_16xlarge"] = "m7g.16xlarge";
    _InstanceType["m7g_2xlarge"] = "m7g.2xlarge";
    _InstanceType["m7g_4xlarge"] = "m7g.4xlarge";
    _InstanceType["m7g_8xlarge"] = "m7g.8xlarge";
    _InstanceType["m7g_large"] = "m7g.large";
    _InstanceType["m7g_medium"] = "m7g.medium";
    _InstanceType["m7g_metal"] = "m7g.metal";
    _InstanceType["m7g_xlarge"] = "m7g.xlarge";
    _InstanceType["mac1_metal"] = "mac1.metal";
    _InstanceType["mac2_metal"] = "mac2.metal";
    _InstanceType["p2_16xlarge"] = "p2.16xlarge";
    _InstanceType["p2_8xlarge"] = "p2.8xlarge";
    _InstanceType["p2_xlarge"] = "p2.xlarge";
    _InstanceType["p3_16xlarge"] = "p3.16xlarge";
    _InstanceType["p3_2xlarge"] = "p3.2xlarge";
    _InstanceType["p3_8xlarge"] = "p3.8xlarge";
    _InstanceType["p3dn_24xlarge"] = "p3dn.24xlarge";
    _InstanceType["p4d_24xlarge"] = "p4d.24xlarge";
    _InstanceType["p4de_24xlarge"] = "p4de.24xlarge";
    _InstanceType["r3_2xlarge"] = "r3.2xlarge";
    _InstanceType["r3_4xlarge"] = "r3.4xlarge";
    _InstanceType["r3_8xlarge"] = "r3.8xlarge";
    _InstanceType["r3_large"] = "r3.large";
    _InstanceType["r3_xlarge"] = "r3.xlarge";
    _InstanceType["r4_16xlarge"] = "r4.16xlarge";
    _InstanceType["r4_2xlarge"] = "r4.2xlarge";
    _InstanceType["r4_4xlarge"] = "r4.4xlarge";
    _InstanceType["r4_8xlarge"] = "r4.8xlarge";
    _InstanceType["r4_large"] = "r4.large";
    _InstanceType["r4_xlarge"] = "r4.xlarge";
    _InstanceType["r5_12xlarge"] = "r5.12xlarge";
    _InstanceType["r5_16xlarge"] = "r5.16xlarge";
    _InstanceType["r5_24xlarge"] = "r5.24xlarge";
    _InstanceType["r5_2xlarge"] = "r5.2xlarge";
    _InstanceType["r5_4xlarge"] = "r5.4xlarge";
    _InstanceType["r5_8xlarge"] = "r5.8xlarge";
    _InstanceType["r5_large"] = "r5.large";
    _InstanceType["r5_metal"] = "r5.metal";
    _InstanceType["r5_xlarge"] = "r5.xlarge";
    _InstanceType["r5a_12xlarge"] = "r5a.12xlarge";
    _InstanceType["r5a_16xlarge"] = "r5a.16xlarge";
    _InstanceType["r5a_24xlarge"] = "r5a.24xlarge";
    _InstanceType["r5a_2xlarge"] = "r5a.2xlarge";
    _InstanceType["r5a_4xlarge"] = "r5a.4xlarge";
    _InstanceType["r5a_8xlarge"] = "r5a.8xlarge";
    _InstanceType["r5a_large"] = "r5a.large";
    _InstanceType["r5a_xlarge"] = "r5a.xlarge";
    _InstanceType["r5ad_12xlarge"] = "r5ad.12xlarge";
    _InstanceType["r5ad_16xlarge"] = "r5ad.16xlarge";
    _InstanceType["r5ad_24xlarge"] = "r5ad.24xlarge";
    _InstanceType["r5ad_2xlarge"] = "r5ad.2xlarge";
    _InstanceType["r5ad_4xlarge"] = "r5ad.4xlarge";
    _InstanceType["r5ad_8xlarge"] = "r5ad.8xlarge";
    _InstanceType["r5ad_large"] = "r5ad.large";
    _InstanceType["r5ad_xlarge"] = "r5ad.xlarge";
    _InstanceType["r5b_12xlarge"] = "r5b.12xlarge";
    _InstanceType["r5b_16xlarge"] = "r5b.16xlarge";
    _InstanceType["r5b_24xlarge"] = "r5b.24xlarge";
    _InstanceType["r5b_2xlarge"] = "r5b.2xlarge";
    _InstanceType["r5b_4xlarge"] = "r5b.4xlarge";
    _InstanceType["r5b_8xlarge"] = "r5b.8xlarge";
    _InstanceType["r5b_large"] = "r5b.large";
    _InstanceType["r5b_metal"] = "r5b.metal";
    _InstanceType["r5b_xlarge"] = "r5b.xlarge";
    _InstanceType["r5d_12xlarge"] = "r5d.12xlarge";
    _InstanceType["r5d_16xlarge"] = "r5d.16xlarge";
    _InstanceType["r5d_24xlarge"] = "r5d.24xlarge";
    _InstanceType["r5d_2xlarge"] = "r5d.2xlarge";
    _InstanceType["r5d_4xlarge"] = "r5d.4xlarge";
    _InstanceType["r5d_8xlarge"] = "r5d.8xlarge";
    _InstanceType["r5d_large"] = "r5d.large";
    _InstanceType["r5d_metal"] = "r5d.metal";
    _InstanceType["r5d_xlarge"] = "r5d.xlarge";
    _InstanceType["r5dn_12xlarge"] = "r5dn.12xlarge";
    _InstanceType["r5dn_16xlarge"] = "r5dn.16xlarge";
    _InstanceType["r5dn_24xlarge"] = "r5dn.24xlarge";
    _InstanceType["r5dn_2xlarge"] = "r5dn.2xlarge";
    _InstanceType["r5dn_4xlarge"] = "r5dn.4xlarge";
    _InstanceType["r5dn_8xlarge"] = "r5dn.8xlarge";
    _InstanceType["r5dn_large"] = "r5dn.large";
    _InstanceType["r5dn_metal"] = "r5dn.metal";
    _InstanceType["r5dn_xlarge"] = "r5dn.xlarge";
    _InstanceType["r5n_12xlarge"] = "r5n.12xlarge";
    _InstanceType["r5n_16xlarge"] = "r5n.16xlarge";
    _InstanceType["r5n_24xlarge"] = "r5n.24xlarge";
    _InstanceType["r5n_2xlarge"] = "r5n.2xlarge";
    _InstanceType["r5n_4xlarge"] = "r5n.4xlarge";
    _InstanceType["r5n_8xlarge"] = "r5n.8xlarge";
    _InstanceType["r5n_large"] = "r5n.large";
    _InstanceType["r5n_metal"] = "r5n.metal";
    _InstanceType["r5n_xlarge"] = "r5n.xlarge";
    _InstanceType["r6a_12xlarge"] = "r6a.12xlarge";
    _InstanceType["r6a_16xlarge"] = "r6a.16xlarge";
    _InstanceType["r6a_24xlarge"] = "r6a.24xlarge";
    _InstanceType["r6a_2xlarge"] = "r6a.2xlarge";
    _InstanceType["r6a_32xlarge"] = "r6a.32xlarge";
    _InstanceType["r6a_48xlarge"] = "r6a.48xlarge";
    _InstanceType["r6a_4xlarge"] = "r6a.4xlarge";
    _InstanceType["r6a_8xlarge"] = "r6a.8xlarge";
    _InstanceType["r6a_large"] = "r6a.large";
    _InstanceType["r6a_metal"] = "r6a.metal";
    _InstanceType["r6a_xlarge"] = "r6a.xlarge";
    _InstanceType["r6g_12xlarge"] = "r6g.12xlarge";
    _InstanceType["r6g_16xlarge"] = "r6g.16xlarge";
    _InstanceType["r6g_2xlarge"] = "r6g.2xlarge";
    _InstanceType["r6g_4xlarge"] = "r6g.4xlarge";
    _InstanceType["r6g_8xlarge"] = "r6g.8xlarge";
    _InstanceType["r6g_large"] = "r6g.large";
    _InstanceType["r6g_medium"] = "r6g.medium";
    _InstanceType["r6g_metal"] = "r6g.metal";
    _InstanceType["r6g_xlarge"] = "r6g.xlarge";
    _InstanceType["r6gd_12xlarge"] = "r6gd.12xlarge";
    _InstanceType["r6gd_16xlarge"] = "r6gd.16xlarge";
    _InstanceType["r6gd_2xlarge"] = "r6gd.2xlarge";
    _InstanceType["r6gd_4xlarge"] = "r6gd.4xlarge";
    _InstanceType["r6gd_8xlarge"] = "r6gd.8xlarge";
    _InstanceType["r6gd_large"] = "r6gd.large";
    _InstanceType["r6gd_medium"] = "r6gd.medium";
    _InstanceType["r6gd_metal"] = "r6gd.metal";
    _InstanceType["r6gd_xlarge"] = "r6gd.xlarge";
    _InstanceType["r6i_12xlarge"] = "r6i.12xlarge";
    _InstanceType["r6i_16xlarge"] = "r6i.16xlarge";
    _InstanceType["r6i_24xlarge"] = "r6i.24xlarge";
    _InstanceType["r6i_2xlarge"] = "r6i.2xlarge";
    _InstanceType["r6i_32xlarge"] = "r6i.32xlarge";
    _InstanceType["r6i_4xlarge"] = "r6i.4xlarge";
    _InstanceType["r6i_8xlarge"] = "r6i.8xlarge";
    _InstanceType["r6i_large"] = "r6i.large";
    _InstanceType["r6i_metal"] = "r6i.metal";
    _InstanceType["r6i_xlarge"] = "r6i.xlarge";
    _InstanceType["r6id_12xlarge"] = "r6id.12xlarge";
    _InstanceType["r6id_16xlarge"] = "r6id.16xlarge";
    _InstanceType["r6id_24xlarge"] = "r6id.24xlarge";
    _InstanceType["r6id_2xlarge"] = "r6id.2xlarge";
    _InstanceType["r6id_32xlarge"] = "r6id.32xlarge";
    _InstanceType["r6id_4xlarge"] = "r6id.4xlarge";
    _InstanceType["r6id_8xlarge"] = "r6id.8xlarge";
    _InstanceType["r6id_large"] = "r6id.large";
    _InstanceType["r6id_metal"] = "r6id.metal";
    _InstanceType["r6id_xlarge"] = "r6id.xlarge";
    _InstanceType["r6idn_12xlarge"] = "r6idn.12xlarge";
    _InstanceType["r6idn_16xlarge"] = "r6idn.16xlarge";
    _InstanceType["r6idn_24xlarge"] = "r6idn.24xlarge";
    _InstanceType["r6idn_2xlarge"] = "r6idn.2xlarge";
    _InstanceType["r6idn_32xlarge"] = "r6idn.32xlarge";
    _InstanceType["r6idn_4xlarge"] = "r6idn.4xlarge";
    _InstanceType["r6idn_8xlarge"] = "r6idn.8xlarge";
    _InstanceType["r6idn_large"] = "r6idn.large";
    _InstanceType["r6idn_xlarge"] = "r6idn.xlarge";
    _InstanceType["r6in_12xlarge"] = "r6in.12xlarge";
    _InstanceType["r6in_16xlarge"] = "r6in.16xlarge";
    _InstanceType["r6in_24xlarge"] = "r6in.24xlarge";
    _InstanceType["r6in_2xlarge"] = "r6in.2xlarge";
    _InstanceType["r6in_32xlarge"] = "r6in.32xlarge";
    _InstanceType["r6in_4xlarge"] = "r6in.4xlarge";
    _InstanceType["r6in_8xlarge"] = "r6in.8xlarge";
    _InstanceType["r6in_large"] = "r6in.large";
    _InstanceType["r6in_xlarge"] = "r6in.xlarge";
    _InstanceType["r7g_12xlarge"] = "r7g.12xlarge";
    _InstanceType["r7g_16xlarge"] = "r7g.16xlarge";
    _InstanceType["r7g_2xlarge"] = "r7g.2xlarge";
    _InstanceType["r7g_4xlarge"] = "r7g.4xlarge";
    _InstanceType["r7g_8xlarge"] = "r7g.8xlarge";
    _InstanceType["r7g_large"] = "r7g.large";
    _InstanceType["r7g_medium"] = "r7g.medium";
    _InstanceType["r7g_metal"] = "r7g.metal";
    _InstanceType["r7g_xlarge"] = "r7g.xlarge";
    _InstanceType["t1_micro"] = "t1.micro";
    _InstanceType["t2_2xlarge"] = "t2.2xlarge";
    _InstanceType["t2_large"] = "t2.large";
    _InstanceType["t2_medium"] = "t2.medium";
    _InstanceType["t2_micro"] = "t2.micro";
    _InstanceType["t2_nano"] = "t2.nano";
    _InstanceType["t2_small"] = "t2.small";
    _InstanceType["t2_xlarge"] = "t2.xlarge";
    _InstanceType["t3_2xlarge"] = "t3.2xlarge";
    _InstanceType["t3_large"] = "t3.large";
    _InstanceType["t3_medium"] = "t3.medium";
    _InstanceType["t3_micro"] = "t3.micro";
    _InstanceType["t3_nano"] = "t3.nano";
    _InstanceType["t3_small"] = "t3.small";
    _InstanceType["t3_xlarge"] = "t3.xlarge";
    _InstanceType["t3a_2xlarge"] = "t3a.2xlarge";
    _InstanceType["t3a_large"] = "t3a.large";
    _InstanceType["t3a_medium"] = "t3a.medium";
    _InstanceType["t3a_micro"] = "t3a.micro";
    _InstanceType["t3a_nano"] = "t3a.nano";
    _InstanceType["t3a_small"] = "t3a.small";
    _InstanceType["t3a_xlarge"] = "t3a.xlarge";
    _InstanceType["t4g_2xlarge"] = "t4g.2xlarge";
    _InstanceType["t4g_large"] = "t4g.large";
    _InstanceType["t4g_medium"] = "t4g.medium";
    _InstanceType["t4g_micro"] = "t4g.micro";
    _InstanceType["t4g_nano"] = "t4g.nano";
    _InstanceType["t4g_small"] = "t4g.small";
    _InstanceType["t4g_xlarge"] = "t4g.xlarge";
    _InstanceType["trn1_2xlarge"] = "trn1.2xlarge";
    _InstanceType["trn1_32xlarge"] = "trn1.32xlarge";
    _InstanceType["u_12tb1_112xlarge"] = "u-12tb1.112xlarge";
    _InstanceType["u_12tb1_metal"] = "u-12tb1.metal";
    _InstanceType["u_18tb1_112xlarge"] = "u-18tb1.112xlarge";
    _InstanceType["u_18tb1_metal"] = "u-18tb1.metal";
    _InstanceType["u_24tb1_112xlarge"] = "u-24tb1.112xlarge";
    _InstanceType["u_24tb1_metal"] = "u-24tb1.metal";
    _InstanceType["u_3tb1_56xlarge"] = "u-3tb1.56xlarge";
    _InstanceType["u_6tb1_112xlarge"] = "u-6tb1.112xlarge";
    _InstanceType["u_6tb1_56xlarge"] = "u-6tb1.56xlarge";
    _InstanceType["u_6tb1_metal"] = "u-6tb1.metal";
    _InstanceType["u_9tb1_112xlarge"] = "u-9tb1.112xlarge";
    _InstanceType["u_9tb1_metal"] = "u-9tb1.metal";
    _InstanceType["vt1_24xlarge"] = "vt1.24xlarge";
    _InstanceType["vt1_3xlarge"] = "vt1.3xlarge";
    _InstanceType["vt1_6xlarge"] = "vt1.6xlarge";
    _InstanceType["x1_16xlarge"] = "x1.16xlarge";
    _InstanceType["x1_32xlarge"] = "x1.32xlarge";
    _InstanceType["x1e_16xlarge"] = "x1e.16xlarge";
    _InstanceType["x1e_2xlarge"] = "x1e.2xlarge";
    _InstanceType["x1e_32xlarge"] = "x1e.32xlarge";
    _InstanceType["x1e_4xlarge"] = "x1e.4xlarge";
    _InstanceType["x1e_8xlarge"] = "x1e.8xlarge";
    _InstanceType["x1e_xlarge"] = "x1e.xlarge";
    _InstanceType["x2gd_12xlarge"] = "x2gd.12xlarge";
    _InstanceType["x2gd_16xlarge"] = "x2gd.16xlarge";
    _InstanceType["x2gd_2xlarge"] = "x2gd.2xlarge";
    _InstanceType["x2gd_4xlarge"] = "x2gd.4xlarge";
    _InstanceType["x2gd_8xlarge"] = "x2gd.8xlarge";
    _InstanceType["x2gd_large"] = "x2gd.large";
    _InstanceType["x2gd_medium"] = "x2gd.medium";
    _InstanceType["x2gd_metal"] = "x2gd.metal";
    _InstanceType["x2gd_xlarge"] = "x2gd.xlarge";
    _InstanceType["x2idn_16xlarge"] = "x2idn.16xlarge";
    _InstanceType["x2idn_24xlarge"] = "x2idn.24xlarge";
    _InstanceType["x2idn_32xlarge"] = "x2idn.32xlarge";
    _InstanceType["x2idn_metal"] = "x2idn.metal";
    _InstanceType["x2iedn_16xlarge"] = "x2iedn.16xlarge";
    _InstanceType["x2iedn_24xlarge"] = "x2iedn.24xlarge";
    _InstanceType["x2iedn_2xlarge"] = "x2iedn.2xlarge";
    _InstanceType["x2iedn_32xlarge"] = "x2iedn.32xlarge";
    _InstanceType["x2iedn_4xlarge"] = "x2iedn.4xlarge";
    _InstanceType["x2iedn_8xlarge"] = "x2iedn.8xlarge";
    _InstanceType["x2iedn_metal"] = "x2iedn.metal";
    _InstanceType["x2iedn_xlarge"] = "x2iedn.xlarge";
    _InstanceType["x2iezn_12xlarge"] = "x2iezn.12xlarge";
    _InstanceType["x2iezn_2xlarge"] = "x2iezn.2xlarge";
    _InstanceType["x2iezn_4xlarge"] = "x2iezn.4xlarge";
    _InstanceType["x2iezn_6xlarge"] = "x2iezn.6xlarge";
    _InstanceType["x2iezn_8xlarge"] = "x2iezn.8xlarge";
    _InstanceType["x2iezn_metal"] = "x2iezn.metal";
    _InstanceType["z1d_12xlarge"] = "z1d.12xlarge";
    _InstanceType["z1d_2xlarge"] = "z1d.2xlarge";
    _InstanceType["z1d_3xlarge"] = "z1d.3xlarge";
    _InstanceType["z1d_6xlarge"] = "z1d.6xlarge";
    _InstanceType["z1d_large"] = "z1d.large";
    _InstanceType["z1d_metal"] = "z1d.metal";
    _InstanceType["z1d_xlarge"] = "z1d.xlarge";
})(_InstanceType = exports._InstanceType || (exports._InstanceType = {}));
var FleetCapacityReservationTenancy;
(function (FleetCapacityReservationTenancy) {
    FleetCapacityReservationTenancy["default"] = "default";
})(FleetCapacityReservationTenancy = exports.FleetCapacityReservationTenancy || (exports.FleetCapacityReservationTenancy = {}));
var CarrierGatewayState;
(function (CarrierGatewayState) {
    CarrierGatewayState["available"] = "available";
    CarrierGatewayState["deleted"] = "deleted";
    CarrierGatewayState["deleting"] = "deleting";
    CarrierGatewayState["pending"] = "pending";
})(CarrierGatewayState = exports.CarrierGatewayState || (exports.CarrierGatewayState = {}));
var ClientVpnAuthenticationType;
(function (ClientVpnAuthenticationType) {
    ClientVpnAuthenticationType["certificate_authentication"] = "certificate-authentication";
    ClientVpnAuthenticationType["directory_service_authentication"] = "directory-service-authentication";
    ClientVpnAuthenticationType["federated_authentication"] = "federated-authentication";
})(ClientVpnAuthenticationType = exports.ClientVpnAuthenticationType || (exports.ClientVpnAuthenticationType = {}));
const AcceleratorCountFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorCountFilterSensitiveLog = AcceleratorCountFilterSensitiveLog;
const AcceleratorCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorCountRequestFilterSensitiveLog = AcceleratorCountRequestFilterSensitiveLog;
const AcceleratorTotalMemoryMiBFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorTotalMemoryMiBFilterSensitiveLog = AcceleratorTotalMemoryMiBFilterSensitiveLog;
const AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = AcceleratorTotalMemoryMiBRequestFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const TagSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagSpecificationFilterSensitiveLog = TagSpecificationFilterSensitiveLog;
const AcceptAddressTransferRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptAddressTransferRequestFilterSensitiveLog = AcceptAddressTransferRequestFilterSensitiveLog;
const AddressTransferFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddressTransferFilterSensitiveLog = AddressTransferFilterSensitiveLog;
const AcceptAddressTransferResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptAddressTransferResultFilterSensitiveLog = AcceptAddressTransferResultFilterSensitiveLog;
const TargetConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TargetConfigurationRequestFilterSensitiveLog = TargetConfigurationRequestFilterSensitiveLog;
const AcceptReservedInstancesExchangeQuoteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptReservedInstancesExchangeQuoteRequestFilterSensitiveLog = AcceptReservedInstancesExchangeQuoteRequestFilterSensitiveLog;
const AcceptReservedInstancesExchangeQuoteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptReservedInstancesExchangeQuoteResultFilterSensitiveLog = AcceptReservedInstancesExchangeQuoteResultFilterSensitiveLog;
const AcceptTransitGatewayMulticastDomainAssociationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayMulticastDomainAssociationsRequestFilterSensitiveLog = AcceptTransitGatewayMulticastDomainAssociationsRequestFilterSensitiveLog;
const SubnetAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetAssociationFilterSensitiveLog = SubnetAssociationFilterSensitiveLog;
const TransitGatewayMulticastDomainAssociationsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayMulticastDomainAssociationsFilterSensitiveLog = TransitGatewayMulticastDomainAssociationsFilterSensitiveLog;
const AcceptTransitGatewayMulticastDomainAssociationsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayMulticastDomainAssociationsResultFilterSensitiveLog = AcceptTransitGatewayMulticastDomainAssociationsResultFilterSensitiveLog;
const AcceptTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = AcceptTransitGatewayPeeringAttachmentRequestFilterSensitiveLog;
const PeeringTgwInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PeeringTgwInfoFilterSensitiveLog = PeeringTgwInfoFilterSensitiveLog;
const TransitGatewayPeeringAttachmentOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPeeringAttachmentOptionsFilterSensitiveLog = TransitGatewayPeeringAttachmentOptionsFilterSensitiveLog;
const PeeringAttachmentStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PeeringAttachmentStatusFilterSensitiveLog = PeeringAttachmentStatusFilterSensitiveLog;
const TransitGatewayPeeringAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPeeringAttachmentFilterSensitiveLog = TransitGatewayPeeringAttachmentFilterSensitiveLog;
const AcceptTransitGatewayPeeringAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayPeeringAttachmentResultFilterSensitiveLog = AcceptTransitGatewayPeeringAttachmentResultFilterSensitiveLog;
const AcceptTransitGatewayVpcAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayVpcAttachmentRequestFilterSensitiveLog = AcceptTransitGatewayVpcAttachmentRequestFilterSensitiveLog;
const TransitGatewayVpcAttachmentOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayVpcAttachmentOptionsFilterSensitiveLog = TransitGatewayVpcAttachmentOptionsFilterSensitiveLog;
const TransitGatewayVpcAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayVpcAttachmentFilterSensitiveLog = TransitGatewayVpcAttachmentFilterSensitiveLog;
const AcceptTransitGatewayVpcAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptTransitGatewayVpcAttachmentResultFilterSensitiveLog = AcceptTransitGatewayVpcAttachmentResultFilterSensitiveLog;
const AcceptVpcEndpointConnectionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptVpcEndpointConnectionsRequestFilterSensitiveLog = AcceptVpcEndpointConnectionsRequestFilterSensitiveLog;
const UnsuccessfulItemErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnsuccessfulItemErrorFilterSensitiveLog = UnsuccessfulItemErrorFilterSensitiveLog;
const UnsuccessfulItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnsuccessfulItemFilterSensitiveLog = UnsuccessfulItemFilterSensitiveLog;
const AcceptVpcEndpointConnectionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptVpcEndpointConnectionsResultFilterSensitiveLog = AcceptVpcEndpointConnectionsResultFilterSensitiveLog;
const AcceptVpcPeeringConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptVpcPeeringConnectionRequestFilterSensitiveLog = AcceptVpcPeeringConnectionRequestFilterSensitiveLog;
const CidrBlockFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CidrBlockFilterSensitiveLog = CidrBlockFilterSensitiveLog;
const Ipv6CidrBlockFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Ipv6CidrBlockFilterSensitiveLog = Ipv6CidrBlockFilterSensitiveLog;
const VpcPeeringConnectionOptionsDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcPeeringConnectionOptionsDescriptionFilterSensitiveLog = VpcPeeringConnectionOptionsDescriptionFilterSensitiveLog;
const VpcPeeringConnectionVpcInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcPeeringConnectionVpcInfoFilterSensitiveLog = VpcPeeringConnectionVpcInfoFilterSensitiveLog;
const VpcPeeringConnectionStateReasonFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcPeeringConnectionStateReasonFilterSensitiveLog = VpcPeeringConnectionStateReasonFilterSensitiveLog;
const VpcPeeringConnectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcPeeringConnectionFilterSensitiveLog = VpcPeeringConnectionFilterSensitiveLog;
const AcceptVpcPeeringConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptVpcPeeringConnectionResultFilterSensitiveLog = AcceptVpcPeeringConnectionResultFilterSensitiveLog;
const PortRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PortRangeFilterSensitiveLog = PortRangeFilterSensitiveLog;
const AnalysisAclRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisAclRuleFilterSensitiveLog = AnalysisAclRuleFilterSensitiveLog;
const AnalysisComponentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisComponentFilterSensitiveLog = AnalysisComponentFilterSensitiveLog;
const AdditionalDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AdditionalDetailFilterSensitiveLog = AdditionalDetailFilterSensitiveLog;
const AnalysisLoadBalancerListenerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisLoadBalancerListenerFilterSensitiveLog = AnalysisLoadBalancerListenerFilterSensitiveLog;
const AnalysisLoadBalancerTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisLoadBalancerTargetFilterSensitiveLog = AnalysisLoadBalancerTargetFilterSensitiveLog;
const AnalysisRouteTableRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisRouteTableRouteFilterSensitiveLog = AnalysisRouteTableRouteFilterSensitiveLog;
const AnalysisSecurityGroupRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisSecurityGroupRuleFilterSensitiveLog = AnalysisSecurityGroupRuleFilterSensitiveLog;
const TransitGatewayRouteTableRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRouteTableRouteFilterSensitiveLog = TransitGatewayRouteTableRouteFilterSensitiveLog;
const ExplanationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExplanationFilterSensitiveLog = ExplanationFilterSensitiveLog;
const AnalysisPacketHeaderFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AnalysisPacketHeaderFilterSensitiveLog = AnalysisPacketHeaderFilterSensitiveLog;
const PathComponentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PathComponentFilterSensitiveLog = PathComponentFilterSensitiveLog;
const AccessScopeAnalysisFindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccessScopeAnalysisFindingFilterSensitiveLog = AccessScopeAnalysisFindingFilterSensitiveLog;
const PacketHeaderStatementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PacketHeaderStatementFilterSensitiveLog = PacketHeaderStatementFilterSensitiveLog;
const ResourceStatementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceStatementFilterSensitiveLog = ResourceStatementFilterSensitiveLog;
const PathStatementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PathStatementFilterSensitiveLog = PathStatementFilterSensitiveLog;
const ThroughResourcesStatementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ThroughResourcesStatementFilterSensitiveLog = ThroughResourcesStatementFilterSensitiveLog;
const AccessScopePathFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccessScopePathFilterSensitiveLog = AccessScopePathFilterSensitiveLog;
const PacketHeaderStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PacketHeaderStatementRequestFilterSensitiveLog = PacketHeaderStatementRequestFilterSensitiveLog;
const ResourceStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceStatementRequestFilterSensitiveLog = ResourceStatementRequestFilterSensitiveLog;
const PathStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PathStatementRequestFilterSensitiveLog = PathStatementRequestFilterSensitiveLog;
const ThroughResourcesStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ThroughResourcesStatementRequestFilterSensitiveLog = ThroughResourcesStatementRequestFilterSensitiveLog;
const AccessScopePathRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccessScopePathRequestFilterSensitiveLog = AccessScopePathRequestFilterSensitiveLog;
const AccountAttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountAttributeValueFilterSensitiveLog = AccountAttributeValueFilterSensitiveLog;
const AccountAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountAttributeFilterSensitiveLog = AccountAttributeFilterSensitiveLog;
const ActiveInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActiveInstanceFilterSensitiveLog = ActiveInstanceFilterSensitiveLog;
const AddedPrincipalFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddedPrincipalFilterSensitiveLog = AddedPrincipalFilterSensitiveLog;
const AddIpamOperatingRegionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddIpamOperatingRegionFilterSensitiveLog = AddIpamOperatingRegionFilterSensitiveLog;
const AddPrefixListEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddPrefixListEntryFilterSensitiveLog = AddPrefixListEntryFilterSensitiveLog;
const AddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddressFilterSensitiveLog = AddressFilterSensitiveLog;
const PtrUpdateStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PtrUpdateStatusFilterSensitiveLog = PtrUpdateStatusFilterSensitiveLog;
const AddressAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddressAttributeFilterSensitiveLog = AddressAttributeFilterSensitiveLog;
const AdvertiseByoipCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AdvertiseByoipCidrRequestFilterSensitiveLog = AdvertiseByoipCidrRequestFilterSensitiveLog;
const ByoipCidrFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ByoipCidrFilterSensitiveLog = ByoipCidrFilterSensitiveLog;
const AdvertiseByoipCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AdvertiseByoipCidrResultFilterSensitiveLog = AdvertiseByoipCidrResultFilterSensitiveLog;
const AllocateAddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateAddressRequestFilterSensitiveLog = AllocateAddressRequestFilterSensitiveLog;
const AllocateAddressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateAddressResultFilterSensitiveLog = AllocateAddressResultFilterSensitiveLog;
const AllocateHostsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateHostsRequestFilterSensitiveLog = AllocateHostsRequestFilterSensitiveLog;
const AllocateHostsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateHostsResultFilterSensitiveLog = AllocateHostsResultFilterSensitiveLog;
const AllocateIpamPoolCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateIpamPoolCidrRequestFilterSensitiveLog = AllocateIpamPoolCidrRequestFilterSensitiveLog;
const IpamPoolAllocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IpamPoolAllocationFilterSensitiveLog = IpamPoolAllocationFilterSensitiveLog;
const AllocateIpamPoolCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateIpamPoolCidrResultFilterSensitiveLog = AllocateIpamPoolCidrResultFilterSensitiveLog;
const AllowedPrincipalFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllowedPrincipalFilterSensitiveLog = AllowedPrincipalFilterSensitiveLog;
const AlternatePathHintFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AlternatePathHintFilterSensitiveLog = AlternatePathHintFilterSensitiveLog;
const ApplySecurityGroupsToClientVpnTargetNetworkRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ApplySecurityGroupsToClientVpnTargetNetworkRequestFilterSensitiveLog = ApplySecurityGroupsToClientVpnTargetNetworkRequestFilterSensitiveLog;
const ApplySecurityGroupsToClientVpnTargetNetworkResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ApplySecurityGroupsToClientVpnTargetNetworkResultFilterSensitiveLog = ApplySecurityGroupsToClientVpnTargetNetworkResultFilterSensitiveLog;
const AssignIpv6AddressesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignIpv6AddressesRequestFilterSensitiveLog = AssignIpv6AddressesRequestFilterSensitiveLog;
const AssignIpv6AddressesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignIpv6AddressesResultFilterSensitiveLog = AssignIpv6AddressesResultFilterSensitiveLog;
const AssignPrivateIpAddressesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignPrivateIpAddressesRequestFilterSensitiveLog = AssignPrivateIpAddressesRequestFilterSensitiveLog;
const Ipv4PrefixSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Ipv4PrefixSpecificationFilterSensitiveLog = Ipv4PrefixSpecificationFilterSensitiveLog;
const AssignedPrivateIpAddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignedPrivateIpAddressFilterSensitiveLog = AssignedPrivateIpAddressFilterSensitiveLog;
const AssignPrivateIpAddressesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignPrivateIpAddressesResultFilterSensitiveLog = AssignPrivateIpAddressesResultFilterSensitiveLog;
const AssignPrivateNatGatewayAddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignPrivateNatGatewayAddressRequestFilterSensitiveLog = AssignPrivateNatGatewayAddressRequestFilterSensitiveLog;
const NatGatewayAddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NatGatewayAddressFilterSensitiveLog = NatGatewayAddressFilterSensitiveLog;
const AssignPrivateNatGatewayAddressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssignPrivateNatGatewayAddressResultFilterSensitiveLog = AssignPrivateNatGatewayAddressResultFilterSensitiveLog;
const AssociateAddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateAddressRequestFilterSensitiveLog = AssociateAddressRequestFilterSensitiveLog;
const AssociateAddressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateAddressResultFilterSensitiveLog = AssociateAddressResultFilterSensitiveLog;
const AssociateClientVpnTargetNetworkRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateClientVpnTargetNetworkRequestFilterSensitiveLog = AssociateClientVpnTargetNetworkRequestFilterSensitiveLog;
const AssociationStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociationStatusFilterSensitiveLog = AssociationStatusFilterSensitiveLog;
const AssociateClientVpnTargetNetworkResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateClientVpnTargetNetworkResultFilterSensitiveLog = AssociateClientVpnTargetNetworkResultFilterSensitiveLog;
const AssociateDhcpOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateDhcpOptionsRequestFilterSensitiveLog = AssociateDhcpOptionsRequestFilterSensitiveLog;
const AssociateEnclaveCertificateIamRoleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateEnclaveCertificateIamRoleRequestFilterSensitiveLog = AssociateEnclaveCertificateIamRoleRequestFilterSensitiveLog;
const AssociateEnclaveCertificateIamRoleResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateEnclaveCertificateIamRoleResultFilterSensitiveLog = AssociateEnclaveCertificateIamRoleResultFilterSensitiveLog;
const IamInstanceProfileSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IamInstanceProfileSpecificationFilterSensitiveLog = IamInstanceProfileSpecificationFilterSensitiveLog;
const AssociateIamInstanceProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateIamInstanceProfileRequestFilterSensitiveLog = AssociateIamInstanceProfileRequestFilterSensitiveLog;
const IamInstanceProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IamInstanceProfileFilterSensitiveLog = IamInstanceProfileFilterSensitiveLog;
const IamInstanceProfileAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IamInstanceProfileAssociationFilterSensitiveLog = IamInstanceProfileAssociationFilterSensitiveLog;
const AssociateIamInstanceProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateIamInstanceProfileResultFilterSensitiveLog = AssociateIamInstanceProfileResultFilterSensitiveLog;
const InstanceEventWindowAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEventWindowAssociationRequestFilterSensitiveLog = InstanceEventWindowAssociationRequestFilterSensitiveLog;
const AssociateInstanceEventWindowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateInstanceEventWindowRequestFilterSensitiveLog = AssociateInstanceEventWindowRequestFilterSensitiveLog;
const InstanceEventWindowAssociationTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEventWindowAssociationTargetFilterSensitiveLog = InstanceEventWindowAssociationTargetFilterSensitiveLog;
const InstanceEventWindowTimeRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEventWindowTimeRangeFilterSensitiveLog = InstanceEventWindowTimeRangeFilterSensitiveLog;
const InstanceEventWindowFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEventWindowFilterSensitiveLog = InstanceEventWindowFilterSensitiveLog;
const AssociateInstanceEventWindowResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateInstanceEventWindowResultFilterSensitiveLog = AssociateInstanceEventWindowResultFilterSensitiveLog;
const AssociateIpamResourceDiscoveryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateIpamResourceDiscoveryRequestFilterSensitiveLog = AssociateIpamResourceDiscoveryRequestFilterSensitiveLog;
const IpamResourceDiscoveryAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IpamResourceDiscoveryAssociationFilterSensitiveLog = IpamResourceDiscoveryAssociationFilterSensitiveLog;
const AssociateIpamResourceDiscoveryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateIpamResourceDiscoveryResultFilterSensitiveLog = AssociateIpamResourceDiscoveryResultFilterSensitiveLog;
const AssociateNatGatewayAddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateNatGatewayAddressRequestFilterSensitiveLog = AssociateNatGatewayAddressRequestFilterSensitiveLog;
const AssociateNatGatewayAddressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateNatGatewayAddressResultFilterSensitiveLog = AssociateNatGatewayAddressResultFilterSensitiveLog;
const AssociateRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateRouteTableRequestFilterSensitiveLog = AssociateRouteTableRequestFilterSensitiveLog;
const RouteTableAssociationStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RouteTableAssociationStateFilterSensitiveLog = RouteTableAssociationStateFilterSensitiveLog;
const AssociateRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateRouteTableResultFilterSensitiveLog = AssociateRouteTableResultFilterSensitiveLog;
const AssociateSubnetCidrBlockRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateSubnetCidrBlockRequestFilterSensitiveLog = AssociateSubnetCidrBlockRequestFilterSensitiveLog;
const SubnetCidrBlockStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetCidrBlockStateFilterSensitiveLog = SubnetCidrBlockStateFilterSensitiveLog;
const SubnetIpv6CidrBlockAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetIpv6CidrBlockAssociationFilterSensitiveLog = SubnetIpv6CidrBlockAssociationFilterSensitiveLog;
const AssociateSubnetCidrBlockResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateSubnetCidrBlockResultFilterSensitiveLog = AssociateSubnetCidrBlockResultFilterSensitiveLog;
const AssociateTransitGatewayMulticastDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayMulticastDomainRequestFilterSensitiveLog = AssociateTransitGatewayMulticastDomainRequestFilterSensitiveLog;
const AssociateTransitGatewayMulticastDomainResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayMulticastDomainResultFilterSensitiveLog = AssociateTransitGatewayMulticastDomainResultFilterSensitiveLog;
const AssociateTransitGatewayPolicyTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayPolicyTableRequestFilterSensitiveLog = AssociateTransitGatewayPolicyTableRequestFilterSensitiveLog;
const TransitGatewayPolicyTableAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPolicyTableAssociationFilterSensitiveLog = TransitGatewayPolicyTableAssociationFilterSensitiveLog;
const AssociateTransitGatewayPolicyTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayPolicyTableResultFilterSensitiveLog = AssociateTransitGatewayPolicyTableResultFilterSensitiveLog;
const AssociateTransitGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayRouteTableRequestFilterSensitiveLog = AssociateTransitGatewayRouteTableRequestFilterSensitiveLog;
const TransitGatewayAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayAssociationFilterSensitiveLog = TransitGatewayAssociationFilterSensitiveLog;
const AssociateTransitGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTransitGatewayRouteTableResultFilterSensitiveLog = AssociateTransitGatewayRouteTableResultFilterSensitiveLog;
const AssociateTrunkInterfaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTrunkInterfaceRequestFilterSensitiveLog = AssociateTrunkInterfaceRequestFilterSensitiveLog;
const TrunkInterfaceAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrunkInterfaceAssociationFilterSensitiveLog = TrunkInterfaceAssociationFilterSensitiveLog;
const AssociateTrunkInterfaceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTrunkInterfaceResultFilterSensitiveLog = AssociateTrunkInterfaceResultFilterSensitiveLog;
const AssociateVpcCidrBlockRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateVpcCidrBlockRequestFilterSensitiveLog = AssociateVpcCidrBlockRequestFilterSensitiveLog;
const VpcCidrBlockStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcCidrBlockStateFilterSensitiveLog = VpcCidrBlockStateFilterSensitiveLog;
const VpcCidrBlockAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcCidrBlockAssociationFilterSensitiveLog = VpcCidrBlockAssociationFilterSensitiveLog;
const VpcIpv6CidrBlockAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcIpv6CidrBlockAssociationFilterSensitiveLog = VpcIpv6CidrBlockAssociationFilterSensitiveLog;
const AssociateVpcCidrBlockResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateVpcCidrBlockResultFilterSensitiveLog = AssociateVpcCidrBlockResultFilterSensitiveLog;
const AttachClassicLinkVpcRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachClassicLinkVpcRequestFilterSensitiveLog = AttachClassicLinkVpcRequestFilterSensitiveLog;
const AttachClassicLinkVpcResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachClassicLinkVpcResultFilterSensitiveLog = AttachClassicLinkVpcResultFilterSensitiveLog;
const AttachInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachInternetGatewayRequestFilterSensitiveLog = AttachInternetGatewayRequestFilterSensitiveLog;
const EnaSrdUdpSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnaSrdUdpSpecificationFilterSensitiveLog = EnaSrdUdpSpecificationFilterSensitiveLog;
const EnaSrdSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnaSrdSpecificationFilterSensitiveLog = EnaSrdSpecificationFilterSensitiveLog;
const AttachNetworkInterfaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachNetworkInterfaceRequestFilterSensitiveLog = AttachNetworkInterfaceRequestFilterSensitiveLog;
const AttachNetworkInterfaceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachNetworkInterfaceResultFilterSensitiveLog = AttachNetworkInterfaceResultFilterSensitiveLog;
const AttachVerifiedAccessTrustProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachVerifiedAccessTrustProviderRequestFilterSensitiveLog = AttachVerifiedAccessTrustProviderRequestFilterSensitiveLog;
const VerifiedAccessTrustProviderCondensedFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessTrustProviderCondensedFilterSensitiveLog = VerifiedAccessTrustProviderCondensedFilterSensitiveLog;
const VerifiedAccessInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessInstanceFilterSensitiveLog = VerifiedAccessInstanceFilterSensitiveLog;
const DeviceOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeviceOptionsFilterSensitiveLog = DeviceOptionsFilterSensitiveLog;
const OidcOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OidcOptionsFilterSensitiveLog = OidcOptionsFilterSensitiveLog;
const VerifiedAccessTrustProviderFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessTrustProviderFilterSensitiveLog = VerifiedAccessTrustProviderFilterSensitiveLog;
const AttachVerifiedAccessTrustProviderResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachVerifiedAccessTrustProviderResultFilterSensitiveLog = AttachVerifiedAccessTrustProviderResultFilterSensitiveLog;
const AttachVolumeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachVolumeRequestFilterSensitiveLog = AttachVolumeRequestFilterSensitiveLog;
const VolumeAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VolumeAttachmentFilterSensitiveLog = VolumeAttachmentFilterSensitiveLog;
const AttachVpnGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachVpnGatewayRequestFilterSensitiveLog = AttachVpnGatewayRequestFilterSensitiveLog;
const VpcAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcAttachmentFilterSensitiveLog = VpcAttachmentFilterSensitiveLog;
const AttachVpnGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachVpnGatewayResultFilterSensitiveLog = AttachVpnGatewayResultFilterSensitiveLog;
const AuthorizeClientVpnIngressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeClientVpnIngressRequestFilterSensitiveLog = AuthorizeClientVpnIngressRequestFilterSensitiveLog;
const ClientVpnAuthorizationRuleStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClientVpnAuthorizationRuleStatusFilterSensitiveLog = ClientVpnAuthorizationRuleStatusFilterSensitiveLog;
const AuthorizeClientVpnIngressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeClientVpnIngressResultFilterSensitiveLog = AuthorizeClientVpnIngressResultFilterSensitiveLog;
const IpRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IpRangeFilterSensitiveLog = IpRangeFilterSensitiveLog;
const Ipv6RangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Ipv6RangeFilterSensitiveLog = Ipv6RangeFilterSensitiveLog;
const PrefixListIdFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PrefixListIdFilterSensitiveLog = PrefixListIdFilterSensitiveLog;
const UserIdGroupPairFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UserIdGroupPairFilterSensitiveLog = UserIdGroupPairFilterSensitiveLog;
const IpPermissionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IpPermissionFilterSensitiveLog = IpPermissionFilterSensitiveLog;
const AuthorizeSecurityGroupEgressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSecurityGroupEgressRequestFilterSensitiveLog = AuthorizeSecurityGroupEgressRequestFilterSensitiveLog;
const ReferencedSecurityGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReferencedSecurityGroupFilterSensitiveLog = ReferencedSecurityGroupFilterSensitiveLog;
const SecurityGroupRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SecurityGroupRuleFilterSensitiveLog = SecurityGroupRuleFilterSensitiveLog;
const AuthorizeSecurityGroupEgressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSecurityGroupEgressResultFilterSensitiveLog = AuthorizeSecurityGroupEgressResultFilterSensitiveLog;
const AuthorizeSecurityGroupIngressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSecurityGroupIngressRequestFilterSensitiveLog = AuthorizeSecurityGroupIngressRequestFilterSensitiveLog;
const AuthorizeSecurityGroupIngressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSecurityGroupIngressResultFilterSensitiveLog = AuthorizeSecurityGroupIngressResultFilterSensitiveLog;
const S3StorageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3StorageFilterSensitiveLog = S3StorageFilterSensitiveLog;
const StorageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StorageFilterSensitiveLog = StorageFilterSensitiveLog;
const BundleInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BundleInstanceRequestFilterSensitiveLog = BundleInstanceRequestFilterSensitiveLog;
const BundleTaskErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BundleTaskErrorFilterSensitiveLog = BundleTaskErrorFilterSensitiveLog;
const BundleTaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BundleTaskFilterSensitiveLog = BundleTaskFilterSensitiveLog;
const BundleInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BundleInstanceResultFilterSensitiveLog = BundleInstanceResultFilterSensitiveLog;
const CancelBundleTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelBundleTaskRequestFilterSensitiveLog = CancelBundleTaskRequestFilterSensitiveLog;
const CancelBundleTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelBundleTaskResultFilterSensitiveLog = CancelBundleTaskResultFilterSensitiveLog;
const CancelCapacityReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCapacityReservationRequestFilterSensitiveLog = CancelCapacityReservationRequestFilterSensitiveLog;
const CancelCapacityReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCapacityReservationResultFilterSensitiveLog = CancelCapacityReservationResultFilterSensitiveLog;
const CancelCapacityReservationFleetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCapacityReservationFleetsRequestFilterSensitiveLog = CancelCapacityReservationFleetsRequestFilterSensitiveLog;
const CancelCapacityReservationFleetErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCapacityReservationFleetErrorFilterSensitiveLog = CancelCapacityReservationFleetErrorFilterSensitiveLog;
const FailedCapacityReservationFleetCancellationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailedCapacityReservationFleetCancellationResultFilterSensitiveLog = FailedCapacityReservationFleetCancellationResultFilterSensitiveLog;
const CapacityReservationFleetCancellationStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CapacityReservationFleetCancellationStateFilterSensitiveLog = CapacityReservationFleetCancellationStateFilterSensitiveLog;
const CancelCapacityReservationFleetsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCapacityReservationFleetsResultFilterSensitiveLog = CancelCapacityReservationFleetsResultFilterSensitiveLog;
const CancelConversionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelConversionRequestFilterSensitiveLog = CancelConversionRequestFilterSensitiveLog;
const CancelExportTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelExportTaskRequestFilterSensitiveLog = CancelExportTaskRequestFilterSensitiveLog;
const CancelImageLaunchPermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelImageLaunchPermissionRequestFilterSensitiveLog = CancelImageLaunchPermissionRequestFilterSensitiveLog;
const CancelImageLaunchPermissionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelImageLaunchPermissionResultFilterSensitiveLog = CancelImageLaunchPermissionResultFilterSensitiveLog;
const CancelImportTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelImportTaskRequestFilterSensitiveLog = CancelImportTaskRequestFilterSensitiveLog;
const CancelImportTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelImportTaskResultFilterSensitiveLog = CancelImportTaskResultFilterSensitiveLog;
const CancelReservedInstancesListingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelReservedInstancesListingRequestFilterSensitiveLog = CancelReservedInstancesListingRequestFilterSensitiveLog;
const InstanceCountFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceCountFilterSensitiveLog = InstanceCountFilterSensitiveLog;
const PriceScheduleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PriceScheduleFilterSensitiveLog = PriceScheduleFilterSensitiveLog;
const ReservedInstancesListingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReservedInstancesListingFilterSensitiveLog = ReservedInstancesListingFilterSensitiveLog;
const CancelReservedInstancesListingResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelReservedInstancesListingResultFilterSensitiveLog = CancelReservedInstancesListingResultFilterSensitiveLog;
const CancelSpotFleetRequestsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotFleetRequestsRequestFilterSensitiveLog = CancelSpotFleetRequestsRequestFilterSensitiveLog;
const CancelSpotFleetRequestsSuccessItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotFleetRequestsSuccessItemFilterSensitiveLog = CancelSpotFleetRequestsSuccessItemFilterSensitiveLog;
const CancelSpotFleetRequestsErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotFleetRequestsErrorFilterSensitiveLog = CancelSpotFleetRequestsErrorFilterSensitiveLog;
const CancelSpotFleetRequestsErrorItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotFleetRequestsErrorItemFilterSensitiveLog = CancelSpotFleetRequestsErrorItemFilterSensitiveLog;
const CancelSpotFleetRequestsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotFleetRequestsResponseFilterSensitiveLog = CancelSpotFleetRequestsResponseFilterSensitiveLog;
const CancelSpotInstanceRequestsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotInstanceRequestsRequestFilterSensitiveLog = CancelSpotInstanceRequestsRequestFilterSensitiveLog;
const CancelledSpotInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelledSpotInstanceRequestFilterSensitiveLog = CancelledSpotInstanceRequestFilterSensitiveLog;
const CancelSpotInstanceRequestsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelSpotInstanceRequestsResultFilterSensitiveLog = CancelSpotInstanceRequestsResultFilterSensitiveLog;
const ConfirmProductInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConfirmProductInstanceRequestFilterSensitiveLog = ConfirmProductInstanceRequestFilterSensitiveLog;
const ConfirmProductInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConfirmProductInstanceResultFilterSensitiveLog = ConfirmProductInstanceResultFilterSensitiveLog;
const CopyFpgaImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyFpgaImageRequestFilterSensitiveLog = CopyFpgaImageRequestFilterSensitiveLog;
const CopyFpgaImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyFpgaImageResultFilterSensitiveLog = CopyFpgaImageResultFilterSensitiveLog;
const CopyImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyImageRequestFilterSensitiveLog = CopyImageRequestFilterSensitiveLog;
const CopyImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyImageResultFilterSensitiveLog = CopyImageResultFilterSensitiveLog;
const CopySnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PresignedUrl && { PresignedUrl: smithy_client_1.SENSITIVE_STRING }),
});
exports.CopySnapshotRequestFilterSensitiveLog = CopySnapshotRequestFilterSensitiveLog;
const CopySnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopySnapshotResultFilterSensitiveLog = CopySnapshotResultFilterSensitiveLog;
const CreateCapacityReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCapacityReservationRequestFilterSensitiveLog = CreateCapacityReservationRequestFilterSensitiveLog;
const CapacityAllocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CapacityAllocationFilterSensitiveLog = CapacityAllocationFilterSensitiveLog;
const CapacityReservationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CapacityReservationFilterSensitiveLog = CapacityReservationFilterSensitiveLog;
const CreateCapacityReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCapacityReservationResultFilterSensitiveLog = CreateCapacityReservationResultFilterSensitiveLog;
const ReservationFleetInstanceSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReservationFleetInstanceSpecificationFilterSensitiveLog = ReservationFleetInstanceSpecificationFilterSensitiveLog;
const CreateCapacityReservationFleetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCapacityReservationFleetRequestFilterSensitiveLog = CreateCapacityReservationFleetRequestFilterSensitiveLog;
const FleetCapacityReservationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FleetCapacityReservationFilterSensitiveLog = FleetCapacityReservationFilterSensitiveLog;
const CreateCapacityReservationFleetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCapacityReservationFleetResultFilterSensitiveLog = CreateCapacityReservationFleetResultFilterSensitiveLog;
const CreateCarrierGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCarrierGatewayRequestFilterSensitiveLog = CreateCarrierGatewayRequestFilterSensitiveLog;
const CarrierGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CarrierGatewayFilterSensitiveLog = CarrierGatewayFilterSensitiveLog;
const CreateCarrierGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCarrierGatewayResultFilterSensitiveLog = CreateCarrierGatewayResultFilterSensitiveLog;
const DirectoryServiceAuthenticationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DirectoryServiceAuthenticationRequestFilterSensitiveLog = DirectoryServiceAuthenticationRequestFilterSensitiveLog;
const FederatedAuthenticationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FederatedAuthenticationRequestFilterSensitiveLog = FederatedAuthenticationRequestFilterSensitiveLog;
const CertificateAuthenticationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CertificateAuthenticationRequestFilterSensitiveLog = CertificateAuthenticationRequestFilterSensitiveLog;
const ClientVpnAuthenticationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClientVpnAuthenticationRequestFilterSensitiveLog = ClientVpnAuthenticationRequestFilterSensitiveLog;
const ClientConnectOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClientConnectOptionsFilterSensitiveLog = ClientConnectOptionsFilterSensitiveLog;
const ClientLoginBannerOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClientLoginBannerOptionsFilterSensitiveLog = ClientLoginBannerOptionsFilterSensitiveLog;
const ConnectionLogOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConnectionLogOptionsFilterSensitiveLog = ConnectionLogOptionsFilterSensitiveLog;
