"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpnStaticRouteSource = exports.GatewayAssociationState = exports.TunnelInsideIpVersion = exports.ServiceConnectivityType = exports.ServiceType = exports.ServiceState = exports.DnsNameState = exports.PayerResponsibility = exports.ConnectionNotificationType = exports.ConnectionNotificationState = exports.State = exports.VpcEndpointType = exports.IpAddressType = exports.DnsRecordIpType = exports.VolumeState = exports.VerifiedAccessEndpointStatusCode = exports.VerifiedAccessEndpointProtocol = exports.VerifiedAccessEndpointType = exports.VerifiedAccessEndpointAttachmentType = exports.TransitGatewayRouteTableAnnouncementState = exports.TransitGatewayRouteTableAnnouncementDirection = exports.TransitGatewayRouteTableState = exports.TransitGatewayRouteType = exports.TransitGatewayRouteState = exports.TransitGatewayPrefixListReferenceState = exports.TransitGatewayPolicyTableState = exports.TransitGatewayMulticastDomainState = exports.StaticSourcesSupportValue = exports.Igmpv2SupportValue = exports.AutoAcceptSharedAssociationsValue = exports.TransitGatewayConnectPeerState = exports.BgpStatus = exports.ProtocolValue = exports.TransitGatewayState = exports.VpnEcmpSupportValue = exports.MulticastSupportValue = exports.DefaultRouteTablePropagationValue = exports.DefaultRouteTableAssociationValue = exports.AutoAcceptSharedAttachmentsValue = exports.TrafficMirrorTargetType = exports.TrafficMirrorNetworkService = exports.TrafficDirection = exports.TrafficMirrorRuleAction = exports.SubnetCidrReservationType = exports.DatafeedSubscriptionState = exports.CopyTagsFromSource = exports.StorageTier = exports.SnapshotState = exports.RouteState = exports.RouteOrigin = void 0;
exports.TransitGatewayFilterSensitiveLog = exports.TransitGatewayOptionsFilterSensitiveLog = exports.CreateTransitGatewayRequestFilterSensitiveLog = exports.TransitGatewayRequestOptionsFilterSensitiveLog = exports.CreateTrafficMirrorTargetResultFilterSensitiveLog = exports.TrafficMirrorTargetFilterSensitiveLog = exports.CreateTrafficMirrorTargetRequestFilterSensitiveLog = exports.CreateTrafficMirrorSessionResultFilterSensitiveLog = exports.TrafficMirrorSessionFilterSensitiveLog = exports.CreateTrafficMirrorSessionRequestFilterSensitiveLog = exports.CreateTrafficMirrorFilterRuleResultFilterSensitiveLog = exports.CreateTrafficMirrorFilterRuleRequestFilterSensitiveLog = exports.TrafficMirrorPortRangeRequestFilterSensitiveLog = exports.CreateTrafficMirrorFilterResultFilterSensitiveLog = exports.TrafficMirrorFilterFilterSensitiveLog = exports.TrafficMirrorFilterRuleFilterSensitiveLog = exports.TrafficMirrorPortRangeFilterSensitiveLog = exports.CreateTrafficMirrorFilterRequestFilterSensitiveLog = exports.CreateTagsRequestFilterSensitiveLog = exports.CreateSubnetCidrReservationResultFilterSensitiveLog = exports.SubnetCidrReservationFilterSensitiveLog = exports.CreateSubnetCidrReservationRequestFilterSensitiveLog = exports.CreateSubnetResultFilterSensitiveLog = exports.CreateSubnetRequestFilterSensitiveLog = exports.CreateStoreImageTaskResultFilterSensitiveLog = exports.CreateStoreImageTaskRequestFilterSensitiveLog = exports.S3ObjectTagFilterSensitiveLog = exports.CreateSpotDatafeedSubscriptionResultFilterSensitiveLog = exports.SpotDatafeedSubscriptionFilterSensitiveLog = exports.SpotInstanceStateFaultFilterSensitiveLog = exports.CreateSpotDatafeedSubscriptionRequestFilterSensitiveLog = exports.CreateSnapshotsResultFilterSensitiveLog = exports.SnapshotInfoFilterSensitiveLog = exports.CreateSnapshotsRequestFilterSensitiveLog = exports.InstanceSpecificationFilterSensitiveLog = exports.SnapshotFilterSensitiveLog = exports.CreateSnapshotRequestFilterSensitiveLog = exports.CreateSecurityGroupResultFilterSensitiveLog = exports.CreateSecurityGroupRequestFilterSensitiveLog = exports.CreateRouteTableResultFilterSensitiveLog = exports.RouteTableFilterSensitiveLog = exports.RouteFilterSensitiveLog = exports.PropagatingVgwFilterSensitiveLog = exports.RouteTableAssociationFilterSensitiveLog = exports.DeleteQueuedReservedInstancesErrorCode = exports.LaunchTemplateErrorCode = exports.DeleteFleetErrorCode = exports.FleetStateCode = exports.TelemetryStatus = exports.VpnState = void 0;
exports.VerifiedAccessGroupFilterSensitiveLog = exports.CreateVerifiedAccessGroupRequestFilterSensitiveLog = exports.CreateVerifiedAccessEndpointResultFilterSensitiveLog = exports.VerifiedAccessEndpointFilterSensitiveLog = exports.VerifiedAccessEndpointStatusFilterSensitiveLog = exports.VerifiedAccessEndpointEniOptionsFilterSensitiveLog = exports.VerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = exports.CreateVerifiedAccessEndpointRequestFilterSensitiveLog = exports.CreateVerifiedAccessEndpointEniOptionsFilterSensitiveLog = exports.CreateVerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = exports.CreateTransitGatewayVpcAttachmentResultFilterSensitiveLog = exports.CreateTransitGatewayVpcAttachmentRequestFilterSensitiveLog = exports.CreateTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog = exports.CreateTransitGatewayRouteTableAnnouncementResultFilterSensitiveLog = exports.TransitGatewayRouteTableAnnouncementFilterSensitiveLog = exports.CreateTransitGatewayRouteTableAnnouncementRequestFilterSensitiveLog = exports.CreateTransitGatewayRouteTableResultFilterSensitiveLog = exports.TransitGatewayRouteTableFilterSensitiveLog = exports.CreateTransitGatewayRouteTableRequestFilterSensitiveLog = exports.CreateTransitGatewayRouteResultFilterSensitiveLog = exports.TransitGatewayRouteFilterSensitiveLog = exports.TransitGatewayRouteAttachmentFilterSensitiveLog = exports.CreateTransitGatewayRouteRequestFilterSensitiveLog = exports.CreateTransitGatewayPrefixListReferenceResultFilterSensitiveLog = exports.TransitGatewayPrefixListReferenceFilterSensitiveLog = exports.TransitGatewayPrefixListAttachmentFilterSensitiveLog = exports.CreateTransitGatewayPrefixListReferenceRequestFilterSensitiveLog = exports.CreateTransitGatewayPolicyTableResultFilterSensitiveLog = exports.TransitGatewayPolicyTableFilterSensitiveLog = exports.CreateTransitGatewayPolicyTableRequestFilterSensitiveLog = exports.CreateTransitGatewayPeeringAttachmentResultFilterSensitiveLog = exports.CreateTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = exports.CreateTransitGatewayPeeringAttachmentRequestOptionsFilterSensitiveLog = exports.CreateTransitGatewayMulticastDomainResultFilterSensitiveLog = exports.TransitGatewayMulticastDomainFilterSensitiveLog = exports.TransitGatewayMulticastDomainOptionsFilterSensitiveLog = exports.CreateTransitGatewayMulticastDomainRequestFilterSensitiveLog = exports.CreateTransitGatewayMulticastDomainRequestOptionsFilterSensitiveLog = exports.CreateTransitGatewayConnectPeerResultFilterSensitiveLog = exports.TransitGatewayConnectPeerFilterSensitiveLog = exports.TransitGatewayConnectPeerConfigurationFilterSensitiveLog = exports.TransitGatewayAttachmentBgpConfigurationFilterSensitiveLog = exports.CreateTransitGatewayConnectPeerRequestFilterSensitiveLog = exports.TransitGatewayConnectRequestBgpOptionsFilterSensitiveLog = exports.CreateTransitGatewayConnectResultFilterSensitiveLog = exports.TransitGatewayConnectFilterSensitiveLog = exports.TransitGatewayConnectOptionsFilterSensitiveLog = exports.CreateTransitGatewayConnectRequestFilterSensitiveLog = exports.CreateTransitGatewayConnectRequestOptionsFilterSensitiveLog = exports.CreateTransitGatewayResultFilterSensitiveLog = void 0;
exports.Phase2IntegrityAlgorithmsListValueFilterSensitiveLog = exports.Phase2EncryptionAlgorithmsListValueFilterSensitiveLog = exports.Phase2DHGroupNumbersListValueFilterSensitiveLog = exports.Phase1IntegrityAlgorithmsListValueFilterSensitiveLog = exports.Phase1EncryptionAlgorithmsListValueFilterSensitiveLog = exports.Phase1DHGroupNumbersListValueFilterSensitiveLog = exports.VpnTunnelLogOptionsFilterSensitiveLog = exports.CloudWatchLogOptionsFilterSensitiveLog = exports.IKEVersionsListValueFilterSensitiveLog = exports.CreateVpnConnectionRequestFilterSensitiveLog = exports.VpnConnectionOptionsSpecificationFilterSensitiveLog = exports.VpnTunnelOptionsSpecificationFilterSensitiveLog = exports.Phase2IntegrityAlgorithmsRequestListValueFilterSensitiveLog = exports.Phase2EncryptionAlgorithmsRequestListValueFilterSensitiveLog = exports.Phase2DHGroupNumbersRequestListValueFilterSensitiveLog = exports.Phase1IntegrityAlgorithmsRequestListValueFilterSensitiveLog = exports.Phase1EncryptionAlgorithmsRequestListValueFilterSensitiveLog = exports.Phase1DHGroupNumbersRequestListValueFilterSensitiveLog = exports.VpnTunnelLogOptionsSpecificationFilterSensitiveLog = exports.CloudWatchLogOptionsSpecificationFilterSensitiveLog = exports.IKEVersionsRequestListValueFilterSensitiveLog = exports.CreateVpcPeeringConnectionResultFilterSensitiveLog = exports.CreateVpcPeeringConnectionRequestFilterSensitiveLog = exports.CreateVpcEndpointServiceConfigurationResultFilterSensitiveLog = exports.ServiceConfigurationFilterSensitiveLog = exports.ServiceTypeDetailFilterSensitiveLog = exports.PrivateDnsNameConfigurationFilterSensitiveLog = exports.CreateVpcEndpointServiceConfigurationRequestFilterSensitiveLog = exports.CreateVpcEndpointConnectionNotificationResultFilterSensitiveLog = exports.ConnectionNotificationFilterSensitiveLog = exports.CreateVpcEndpointConnectionNotificationRequestFilterSensitiveLog = exports.CreateVpcEndpointResultFilterSensitiveLog = exports.VpcEndpointFilterSensitiveLog = exports.LastErrorFilterSensitiveLog = exports.SecurityGroupIdentifierFilterSensitiveLog = exports.DnsOptionsFilterSensitiveLog = exports.DnsEntryFilterSensitiveLog = exports.CreateVpcEndpointRequestFilterSensitiveLog = exports.DnsOptionsSpecificationFilterSensitiveLog = exports.CreateVpcResultFilterSensitiveLog = exports.CreateVpcRequestFilterSensitiveLog = exports.VolumeFilterSensitiveLog = exports.CreateVolumeRequestFilterSensitiveLog = exports.CreateVerifiedAccessTrustProviderResultFilterSensitiveLog = exports.CreateVerifiedAccessTrustProviderRequestFilterSensitiveLog = exports.CreateVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = exports.CreateVerifiedAccessTrustProviderDeviceOptionsFilterSensitiveLog = exports.CreateVerifiedAccessInstanceResultFilterSensitiveLog = exports.CreateVerifiedAccessInstanceRequestFilterSensitiveLog = exports.CreateVerifiedAccessGroupResultFilterSensitiveLog = void 0;
exports.DeleteLaunchTemplateVersionsResponseSuccessItemFilterSensitiveLog = exports.DeleteLaunchTemplateVersionsRequestFilterSensitiveLog = exports.DeleteLaunchTemplateResultFilterSensitiveLog = exports.DeleteLaunchTemplateRequestFilterSensitiveLog = exports.DeleteKeyPairRequestFilterSensitiveLog = exports.DeleteIpamScopeResultFilterSensitiveLog = exports.DeleteIpamScopeRequestFilterSensitiveLog = exports.DeleteIpamResourceDiscoveryResultFilterSensitiveLog = exports.DeleteIpamResourceDiscoveryRequestFilterSensitiveLog = exports.DeleteIpamPoolResultFilterSensitiveLog = exports.DeleteIpamPoolRequestFilterSensitiveLog = exports.DeleteIpamResultFilterSensitiveLog = exports.DeleteIpamRequestFilterSensitiveLog = exports.DeleteInternetGatewayRequestFilterSensitiveLog = exports.DeleteInstanceEventWindowResultFilterSensitiveLog = exports.InstanceEventWindowStateChangeFilterSensitiveLog = exports.DeleteInstanceEventWindowRequestFilterSensitiveLog = exports.DeleteFpgaImageResultFilterSensitiveLog = exports.DeleteFpgaImageRequestFilterSensitiveLog = exports.DeleteFlowLogsResultFilterSensitiveLog = exports.DeleteFlowLogsRequestFilterSensitiveLog = exports.DeleteFleetsResultFilterSensitiveLog = exports.DeleteFleetErrorItemFilterSensitiveLog = exports.DeleteFleetErrorFilterSensitiveLog = exports.DeleteFleetSuccessItemFilterSensitiveLog = exports.DeleteFleetsRequestFilterSensitiveLog = exports.DeleteEgressOnlyInternetGatewayResultFilterSensitiveLog = exports.DeleteEgressOnlyInternetGatewayRequestFilterSensitiveLog = exports.DeleteDhcpOptionsRequestFilterSensitiveLog = exports.DeleteCustomerGatewayRequestFilterSensitiveLog = exports.DeleteCoipPoolResultFilterSensitiveLog = exports.DeleteCoipPoolRequestFilterSensitiveLog = exports.DeleteCoipCidrResultFilterSensitiveLog = exports.DeleteCoipCidrRequestFilterSensitiveLog = exports.DeleteClientVpnRouteResultFilterSensitiveLog = exports.DeleteClientVpnRouteRequestFilterSensitiveLog = exports.DeleteClientVpnEndpointResultFilterSensitiveLog = exports.DeleteClientVpnEndpointRequestFilterSensitiveLog = exports.DeleteCarrierGatewayResultFilterSensitiveLog = exports.DeleteCarrierGatewayRequestFilterSensitiveLog = exports.CreateVpnGatewayResultFilterSensitiveLog = exports.VpnGatewayFilterSensitiveLog = exports.CreateVpnGatewayRequestFilterSensitiveLog = exports.CreateVpnConnectionRouteRequestFilterSensitiveLog = exports.CreateVpnConnectionResultFilterSensitiveLog = exports.VpnConnectionFilterSensitiveLog = exports.VgwTelemetryFilterSensitiveLog = exports.VpnStaticRouteFilterSensitiveLog = exports.VpnConnectionOptionsFilterSensitiveLog = exports.TunnelOptionFilterSensitiveLog = void 0;
exports.DeleteTrafficMirrorSessionRequestFilterSensitiveLog = exports.DeleteTrafficMirrorFilterRuleResultFilterSensitiveLog = exports.DeleteTrafficMirrorFilterRuleRequestFilterSensitiveLog = exports.DeleteTrafficMirrorFilterResultFilterSensitiveLog = exports.DeleteTrafficMirrorFilterRequestFilterSensitiveLog = exports.DeleteTagsRequestFilterSensitiveLog = exports.DeleteSubnetCidrReservationResultFilterSensitiveLog = exports.DeleteSubnetCidrReservationRequestFilterSensitiveLog = exports.DeleteSubnetRequestFilterSensitiveLog = exports.DeleteSpotDatafeedSubscriptionRequestFilterSensitiveLog = exports.DeleteSnapshotRequestFilterSensitiveLog = exports.DeleteSecurityGroupRequestFilterSensitiveLog = exports.DeleteRouteTableRequestFilterSensitiveLog = exports.DeleteRouteRequestFilterSensitiveLog = exports.DeleteQueuedReservedInstancesResultFilterSensitiveLog = exports.SuccessfulQueuedPurchaseDeletionFilterSensitiveLog = exports.FailedQueuedPurchaseDeletionFilterSensitiveLog = exports.DeleteQueuedReservedInstancesErrorFilterSensitiveLog = exports.DeleteQueuedReservedInstancesRequestFilterSensitiveLog = exports.DeletePublicIpv4PoolResultFilterSensitiveLog = exports.DeletePublicIpv4PoolRequestFilterSensitiveLog = exports.DeletePlacementGroupRequestFilterSensitiveLog = exports.DeleteNetworkInterfacePermissionResultFilterSensitiveLog = exports.DeleteNetworkInterfacePermissionRequestFilterSensitiveLog = exports.DeleteNetworkInterfaceRequestFilterSensitiveLog = exports.DeleteNetworkInsightsPathResultFilterSensitiveLog = exports.DeleteNetworkInsightsPathRequestFilterSensitiveLog = exports.DeleteNetworkInsightsAnalysisResultFilterSensitiveLog = exports.DeleteNetworkInsightsAnalysisRequestFilterSensitiveLog = exports.DeleteNetworkInsightsAccessScopeAnalysisResultFilterSensitiveLog = exports.DeleteNetworkInsightsAccessScopeAnalysisRequestFilterSensitiveLog = exports.DeleteNetworkInsightsAccessScopeResultFilterSensitiveLog = exports.DeleteNetworkInsightsAccessScopeRequestFilterSensitiveLog = exports.DeleteNetworkAclEntryRequestFilterSensitiveLog = exports.DeleteNetworkAclRequestFilterSensitiveLog = exports.DeleteNatGatewayResultFilterSensitiveLog = exports.DeleteNatGatewayRequestFilterSensitiveLog = exports.DeleteManagedPrefixListResultFilterSensitiveLog = exports.DeleteManagedPrefixListRequestFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableResultFilterSensitiveLog = exports.DeleteLocalGatewayRouteTableRequestFilterSensitiveLog = exports.DeleteLocalGatewayRouteResultFilterSensitiveLog = exports.DeleteLocalGatewayRouteRequestFilterSensitiveLog = exports.DeleteLaunchTemplateVersionsResultFilterSensitiveLog = exports.DeleteLaunchTemplateVersionsResponseErrorItemFilterSensitiveLog = exports.ResponseErrorFilterSensitiveLog = void 0;
var RouteOrigin;
(function (RouteOrigin) {
    RouteOrigin["CreateRoute"] = "CreateRoute";
    RouteOrigin["CreateRouteTable"] = "CreateRouteTable";
    RouteOrigin["EnableVgwRoutePropagation"] = "EnableVgwRoutePropagation";
})(RouteOrigin = exports.RouteOrigin || (exports.RouteOrigin = {}));
var RouteState;
(function (RouteState) {
    RouteState["active"] = "active";
    RouteState["blackhole"] = "blackhole";
})(RouteState = exports.RouteState || (exports.RouteState = {}));
var SnapshotState;
(function (SnapshotState) {
    SnapshotState["completed"] = "completed";
    SnapshotState["error"] = "error";
    SnapshotState["pending"] = "pending";
    SnapshotState["recoverable"] = "recoverable";
    SnapshotState["recovering"] = "recovering";
})(SnapshotState = exports.SnapshotState || (exports.SnapshotState = {}));
var StorageTier;
(function (StorageTier) {
    StorageTier["archive"] = "archive";
    StorageTier["standard"] = "standard";
})(StorageTier = exports.StorageTier || (exports.StorageTier = {}));
var CopyTagsFromSource;
(function (CopyTagsFromSource) {
    CopyTagsFromSource["volume"] = "volume";
})(CopyTagsFromSource = exports.CopyTagsFromSource || (exports.CopyTagsFromSource = {}));
var DatafeedSubscriptionState;
(function (DatafeedSubscriptionState) {
    DatafeedSubscriptionState["Active"] = "Active";
    DatafeedSubscriptionState["Inactive"] = "Inactive";
})(DatafeedSubscriptionState = exports.DatafeedSubscriptionState || (exports.DatafeedSubscriptionState = {}));
var SubnetCidrReservationType;
(function (SubnetCidrReservationType) {
    SubnetCidrReservationType["explicit"] = "explicit";
    SubnetCidrReservationType["prefix"] = "prefix";
})(SubnetCidrReservationType = exports.SubnetCidrReservationType || (exports.SubnetCidrReservationType = {}));
var TrafficMirrorRuleAction;
(function (TrafficMirrorRuleAction) {
    TrafficMirrorRuleAction["accept"] = "accept";
    TrafficMirrorRuleAction["reject"] = "reject";
})(TrafficMirrorRuleAction = exports.TrafficMirrorRuleAction || (exports.TrafficMirrorRuleAction = {}));
var TrafficDirection;
(function (TrafficDirection) {
    TrafficDirection["egress"] = "egress";
    TrafficDirection["ingress"] = "ingress";
})(TrafficDirection = exports.TrafficDirection || (exports.TrafficDirection = {}));
var TrafficMirrorNetworkService;
(function (TrafficMirrorNetworkService) {
    TrafficMirrorNetworkService["amazon_dns"] = "amazon-dns";
})(TrafficMirrorNetworkService = exports.TrafficMirrorNetworkService || (exports.TrafficMirrorNetworkService = {}));
var TrafficMirrorTargetType;
(function (TrafficMirrorTargetType) {
    TrafficMirrorTargetType["gateway_load_balancer_endpoint"] = "gateway-load-balancer-endpoint";
    TrafficMirrorTargetType["network_interface"] = "network-interface";
    TrafficMirrorTargetType["network_load_balancer"] = "network-load-balancer";
})(TrafficMirrorTargetType = exports.TrafficMirrorTargetType || (exports.TrafficMirrorTargetType = {}));
var AutoAcceptSharedAttachmentsValue;
(function (AutoAcceptSharedAttachmentsValue) {
    AutoAcceptSharedAttachmentsValue["disable"] = "disable";
    AutoAcceptSharedAttachmentsValue["enable"] = "enable";
})(AutoAcceptSharedAttachmentsValue = exports.AutoAcceptSharedAttachmentsValue || (exports.AutoAcceptSharedAttachmentsValue = {}));
var DefaultRouteTableAssociationValue;
(function (DefaultRouteTableAssociationValue) {
    DefaultRouteTableAssociationValue["disable"] = "disable";
    DefaultRouteTableAssociationValue["enable"] = "enable";
})(DefaultRouteTableAssociationValue = exports.DefaultRouteTableAssociationValue || (exports.DefaultRouteTableAssociationValue = {}));
var DefaultRouteTablePropagationValue;
(function (DefaultRouteTablePropagationValue) {
    DefaultRouteTablePropagationValue["disable"] = "disable";
    DefaultRouteTablePropagationValue["enable"] = "enable";
})(DefaultRouteTablePropagationValue = exports.DefaultRouteTablePropagationValue || (exports.DefaultRouteTablePropagationValue = {}));
var MulticastSupportValue;
(function (MulticastSupportValue) {
    MulticastSupportValue["disable"] = "disable";
    MulticastSupportValue["enable"] = "enable";
})(MulticastSupportValue = exports.MulticastSupportValue || (exports.MulticastSupportValue = {}));
var VpnEcmpSupportValue;
(function (VpnEcmpSupportValue) {
    VpnEcmpSupportValue["disable"] = "disable";
    VpnEcmpSupportValue["enable"] = "enable";
})(VpnEcmpSupportValue = exports.VpnEcmpSupportValue || (exports.VpnEcmpSupportValue = {}));
var TransitGatewayState;
(function (TransitGatewayState) {
    TransitGatewayState["available"] = "available";
    TransitGatewayState["deleted"] = "deleted";
    TransitGatewayState["deleting"] = "deleting";
    TransitGatewayState["modifying"] = "modifying";
    TransitGatewayState["pending"] = "pending";
})(TransitGatewayState = exports.TransitGatewayState || (exports.TransitGatewayState = {}));
var ProtocolValue;
(function (ProtocolValue) {
    ProtocolValue["gre"] = "gre";
})(ProtocolValue = exports.ProtocolValue || (exports.ProtocolValue = {}));
var BgpStatus;
(function (BgpStatus) {
    BgpStatus["down"] = "down";
    BgpStatus["up"] = "up";
})(BgpStatus = exports.BgpStatus || (exports.BgpStatus = {}));
var TransitGatewayConnectPeerState;
(function (TransitGatewayConnectPeerState) {
    TransitGatewayConnectPeerState["available"] = "available";
    TransitGatewayConnectPeerState["deleted"] = "deleted";
    TransitGatewayConnectPeerState["deleting"] = "deleting";
    TransitGatewayConnectPeerState["pending"] = "pending";
})(TransitGatewayConnectPeerState = exports.TransitGatewayConnectPeerState || (exports.TransitGatewayConnectPeerState = {}));
var AutoAcceptSharedAssociationsValue;
(function (AutoAcceptSharedAssociationsValue) {
    AutoAcceptSharedAssociationsValue["disable"] = "disable";
    AutoAcceptSharedAssociationsValue["enable"] = "enable";
})(AutoAcceptSharedAssociationsValue = exports.AutoAcceptSharedAssociationsValue || (exports.AutoAcceptSharedAssociationsValue = {}));
var Igmpv2SupportValue;
(function (Igmpv2SupportValue) {
    Igmpv2SupportValue["disable"] = "disable";
    Igmpv2SupportValue["enable"] = "enable";
})(Igmpv2SupportValue = exports.Igmpv2SupportValue || (exports.Igmpv2SupportValue = {}));
var StaticSourcesSupportValue;
(function (StaticSourcesSupportValue) {
    StaticSourcesSupportValue["disable"] = "disable";
    StaticSourcesSupportValue["enable"] = "enable";
})(StaticSourcesSupportValue = exports.StaticSourcesSupportValue || (exports.StaticSourcesSupportValue = {}));
var TransitGatewayMulticastDomainState;
(function (TransitGatewayMulticastDomainState) {
    TransitGatewayMulticastDomainState["available"] = "available";
    TransitGatewayMulticastDomainState["deleted"] = "deleted";
    TransitGatewayMulticastDomainState["deleting"] = "deleting";
    TransitGatewayMulticastDomainState["pending"] = "pending";
})(TransitGatewayMulticastDomainState = exports.TransitGatewayMulticastDomainState || (exports.TransitGatewayMulticastDomainState = {}));
var TransitGatewayPolicyTableState;
(function (TransitGatewayPolicyTableState) {
    TransitGatewayPolicyTableState["available"] = "available";
    TransitGatewayPolicyTableState["deleted"] = "deleted";
    TransitGatewayPolicyTableState["deleting"] = "deleting";
    TransitGatewayPolicyTableState["pending"] = "pending";
})(TransitGatewayPolicyTableState = exports.TransitGatewayPolicyTableState || (exports.TransitGatewayPolicyTableState = {}));
var TransitGatewayPrefixListReferenceState;
(function (TransitGatewayPrefixListReferenceState) {
    TransitGatewayPrefixListReferenceState["available"] = "available";
    TransitGatewayPrefixListReferenceState["deleting"] = "deleting";
    TransitGatewayPrefixListReferenceState["modifying"] = "modifying";
    TransitGatewayPrefixListReferenceState["pending"] = "pending";
})(TransitGatewayPrefixListReferenceState = exports.TransitGatewayPrefixListReferenceState || (exports.TransitGatewayPrefixListReferenceState = {}));
var TransitGatewayRouteState;
(function (TransitGatewayRouteState) {
    TransitGatewayRouteState["active"] = "active";
    TransitGatewayRouteState["blackhole"] = "blackhole";
    TransitGatewayRouteState["deleted"] = "deleted";
    TransitGatewayRouteState["deleting"] = "deleting";
    TransitGatewayRouteState["pending"] = "pending";
})(TransitGatewayRouteState = exports.TransitGatewayRouteState || (exports.TransitGatewayRouteState = {}));
var TransitGatewayRouteType;
(function (TransitGatewayRouteType) {
    TransitGatewayRouteType["propagated"] = "propagated";
    TransitGatewayRouteType["static"] = "static";
})(TransitGatewayRouteType = exports.TransitGatewayRouteType || (exports.TransitGatewayRouteType = {}));
var TransitGatewayRouteTableState;
(function (TransitGatewayRouteTableState) {
    TransitGatewayRouteTableState["available"] = "available";
    TransitGatewayRouteTableState["deleted"] = "deleted";
    TransitGatewayRouteTableState["deleting"] = "deleting";
    TransitGatewayRouteTableState["pending"] = "pending";
})(TransitGatewayRouteTableState = exports.TransitGatewayRouteTableState || (exports.TransitGatewayRouteTableState = {}));
var TransitGatewayRouteTableAnnouncementDirection;
(function (TransitGatewayRouteTableAnnouncementDirection) {
    TransitGatewayRouteTableAnnouncementDirection["incoming"] = "incoming";
    TransitGatewayRouteTableAnnouncementDirection["outgoing"] = "outgoing";
})(TransitGatewayRouteTableAnnouncementDirection = exports.TransitGatewayRouteTableAnnouncementDirection || (exports.TransitGatewayRouteTableAnnouncementDirection = {}));
var TransitGatewayRouteTableAnnouncementState;
(function (TransitGatewayRouteTableAnnouncementState) {
    TransitGatewayRouteTableAnnouncementState["available"] = "available";
    TransitGatewayRouteTableAnnouncementState["deleted"] = "deleted";
    TransitGatewayRouteTableAnnouncementState["deleting"] = "deleting";
    TransitGatewayRouteTableAnnouncementState["failed"] = "failed";
    TransitGatewayRouteTableAnnouncementState["failing"] = "failing";
    TransitGatewayRouteTableAnnouncementState["pending"] = "pending";
})(TransitGatewayRouteTableAnnouncementState = exports.TransitGatewayRouteTableAnnouncementState || (exports.TransitGatewayRouteTableAnnouncementState = {}));
var VerifiedAccessEndpointAttachmentType;
(function (VerifiedAccessEndpointAttachmentType) {
    VerifiedAccessEndpointAttachmentType["vpc"] = "vpc";
})(VerifiedAccessEndpointAttachmentType = exports.VerifiedAccessEndpointAttachmentType || (exports.VerifiedAccessEndpointAttachmentType = {}));
var VerifiedAccessEndpointType;
(function (VerifiedAccessEndpointType) {
    VerifiedAccessEndpointType["load_balancer"] = "load-balancer";
    VerifiedAccessEndpointType["network_interface"] = "network-interface";
})(VerifiedAccessEndpointType = exports.VerifiedAccessEndpointType || (exports.VerifiedAccessEndpointType = {}));
var VerifiedAccessEndpointProtocol;
(function (VerifiedAccessEndpointProtocol) {
    VerifiedAccessEndpointProtocol["http"] = "http";
    VerifiedAccessEndpointProtocol["https"] = "https";
})(VerifiedAccessEndpointProtocol = exports.VerifiedAccessEndpointProtocol || (exports.VerifiedAccessEndpointProtocol = {}));
var VerifiedAccessEndpointStatusCode;
(function (VerifiedAccessEndpointStatusCode) {
    VerifiedAccessEndpointStatusCode["active"] = "active";
    VerifiedAccessEndpointStatusCode["deleted"] = "deleted";
    VerifiedAccessEndpointStatusCode["deleting"] = "deleting";
    VerifiedAccessEndpointStatusCode["pending"] = "pending";
    VerifiedAccessEndpointStatusCode["updating"] = "updating";
})(VerifiedAccessEndpointStatusCode = exports.VerifiedAccessEndpointStatusCode || (exports.VerifiedAccessEndpointStatusCode = {}));
var VolumeState;
(function (VolumeState) {
    VolumeState["available"] = "available";
    VolumeState["creating"] = "creating";
    VolumeState["deleted"] = "deleted";
    VolumeState["deleting"] = "deleting";
    VolumeState["error"] = "error";
    VolumeState["in_use"] = "in-use";
})(VolumeState = exports.VolumeState || (exports.VolumeState = {}));
var DnsRecordIpType;
(function (DnsRecordIpType) {
    DnsRecordIpType["dualstack"] = "dualstack";
    DnsRecordIpType["ipv4"] = "ipv4";
    DnsRecordIpType["ipv6"] = "ipv6";
    DnsRecordIpType["service_defined"] = "service-defined";
})(DnsRecordIpType = exports.DnsRecordIpType || (exports.DnsRecordIpType = {}));
var IpAddressType;
(function (IpAddressType) {
    IpAddressType["dualstack"] = "dualstack";
    IpAddressType["ipv4"] = "ipv4";
    IpAddressType["ipv6"] = "ipv6";
})(IpAddressType = exports.IpAddressType || (exports.IpAddressType = {}));
var VpcEndpointType;
(function (VpcEndpointType) {
    VpcEndpointType["Gateway"] = "Gateway";
    VpcEndpointType["GatewayLoadBalancer"] = "GatewayLoadBalancer";
    VpcEndpointType["Interface"] = "Interface";
})(VpcEndpointType = exports.VpcEndpointType || (exports.VpcEndpointType = {}));
var State;
(function (State) {
    State["Available"] = "Available";
    State["Deleted"] = "Deleted";
    State["Deleting"] = "Deleting";
    State["Expired"] = "Expired";
    State["Failed"] = "Failed";
    State["Pending"] = "Pending";
    State["PendingAcceptance"] = "PendingAcceptance";
    State["Rejected"] = "Rejected";
})(State = exports.State || (exports.State = {}));
var ConnectionNotificationState;
(function (ConnectionNotificationState) {
    ConnectionNotificationState["Disabled"] = "Disabled";
    ConnectionNotificationState["Enabled"] = "Enabled";
})(ConnectionNotificationState = exports.ConnectionNotificationState || (exports.ConnectionNotificationState = {}));
var ConnectionNotificationType;
(function (ConnectionNotificationType) {
    ConnectionNotificationType["Topic"] = "Topic";
})(ConnectionNotificationType = exports.ConnectionNotificationType || (exports.ConnectionNotificationType = {}));
var PayerResponsibility;
(function (PayerResponsibility) {
    PayerResponsibility["ServiceOwner"] = "ServiceOwner";
})(PayerResponsibility = exports.PayerResponsibility || (exports.PayerResponsibility = {}));
var DnsNameState;
(function (DnsNameState) {
    DnsNameState["Failed"] = "failed";
    DnsNameState["PendingVerification"] = "pendingVerification";
    DnsNameState["Verified"] = "verified";
})(DnsNameState = exports.DnsNameState || (exports.DnsNameState = {}));
var ServiceState;
(function (ServiceState) {
    ServiceState["Available"] = "Available";
    ServiceState["Deleted"] = "Deleted";
    ServiceState["Deleting"] = "Deleting";
    ServiceState["Failed"] = "Failed";
    ServiceState["Pending"] = "Pending";
})(ServiceState = exports.ServiceState || (exports.ServiceState = {}));
var ServiceType;
(function (ServiceType) {
    ServiceType["Gateway"] = "Gateway";
    ServiceType["GatewayLoadBalancer"] = "GatewayLoadBalancer";
    ServiceType["Interface"] = "Interface";
})(ServiceType = exports.ServiceType || (exports.ServiceType = {}));
var ServiceConnectivityType;
(function (ServiceConnectivityType) {
    ServiceConnectivityType["ipv4"] = "ipv4";
    ServiceConnectivityType["ipv6"] = "ipv6";
})(ServiceConnectivityType = exports.ServiceConnectivityType || (exports.ServiceConnectivityType = {}));
var TunnelInsideIpVersion;
(function (TunnelInsideIpVersion) {
    TunnelInsideIpVersion["ipv4"] = "ipv4";
    TunnelInsideIpVersion["ipv6"] = "ipv6";
})(TunnelInsideIpVersion = exports.TunnelInsideIpVersion || (exports.TunnelInsideIpVersion = {}));
var GatewayAssociationState;
(function (GatewayAssociationState) {
    GatewayAssociationState["associated"] = "associated";
    GatewayAssociationState["associating"] = "associating";
    GatewayAssociationState["disassociating"] = "disassociating";
    GatewayAssociationState["not_associated"] = "not-associated";
})(GatewayAssociationState = exports.GatewayAssociationState || (exports.GatewayAssociationState = {}));
var VpnStaticRouteSource;
(function (VpnStaticRouteSource) {
    VpnStaticRouteSource["Static"] = "Static";
})(VpnStaticRouteSource = exports.VpnStaticRouteSource || (exports.VpnStaticRouteSource = {}));
var VpnState;
(function (VpnState) {
    VpnState["available"] = "available";
    VpnState["deleted"] = "deleted";
    VpnState["deleting"] = "deleting";
    VpnState["pending"] = "pending";
})(VpnState = exports.VpnState || (exports.VpnState = {}));
var TelemetryStatus;
(function (TelemetryStatus) {
    TelemetryStatus["DOWN"] = "DOWN";
    TelemetryStatus["UP"] = "UP";
})(TelemetryStatus = exports.TelemetryStatus || (exports.TelemetryStatus = {}));
var FleetStateCode;
(function (FleetStateCode) {
    FleetStateCode["ACTIVE"] = "active";
    FleetStateCode["DELETED"] = "deleted";
    FleetStateCode["DELETED_RUNNING"] = "deleted_running";
    FleetStateCode["DELETED_TERMINATING_INSTANCES"] = "deleted_terminating";
    FleetStateCode["FAILED"] = "failed";
    FleetStateCode["MODIFYING"] = "modifying";
    FleetStateCode["SUBMITTED"] = "submitted";
})(FleetStateCode = exports.FleetStateCode || (exports.FleetStateCode = {}));
var DeleteFleetErrorCode;
(function (DeleteFleetErrorCode) {
    DeleteFleetErrorCode["FLEET_ID_DOES_NOT_EXIST"] = "fleetIdDoesNotExist";
    DeleteFleetErrorCode["FLEET_ID_MALFORMED"] = "fleetIdMalformed";
    DeleteFleetErrorCode["FLEET_NOT_IN_DELETABLE_STATE"] = "fleetNotInDeletableState";
    DeleteFleetErrorCode["UNEXPECTED_ERROR"] = "unexpectedError";
})(DeleteFleetErrorCode = exports.DeleteFleetErrorCode || (exports.DeleteFleetErrorCode = {}));
var LaunchTemplateErrorCode;
(function (LaunchTemplateErrorCode) {
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_ID_DOES_NOT_EXIST"] = "launchTemplateIdDoesNotExist";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_ID_MALFORMED"] = "launchTemplateIdMalformed";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_NAME_DOES_NOT_EXIST"] = "launchTemplateNameDoesNotExist";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_NAME_MALFORMED"] = "launchTemplateNameMalformed";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_VERSION_DOES_NOT_EXIST"] = "launchTemplateVersionDoesNotExist";
    LaunchTemplateErrorCode["UNEXPECTED_ERROR"] = "unexpectedError";
})(LaunchTemplateErrorCode = exports.LaunchTemplateErrorCode || (exports.LaunchTemplateErrorCode = {}));
var DeleteQueuedReservedInstancesErrorCode;
(function (DeleteQueuedReservedInstancesErrorCode) {
    DeleteQueuedReservedInstancesErrorCode["RESERVED_INSTANCES_ID_INVALID"] = "reserved-instances-id-invalid";
    DeleteQueuedReservedInstancesErrorCode["RESERVED_INSTANCES_NOT_IN_QUEUED_STATE"] = "reserved-instances-not-in-queued-state";
    DeleteQueuedReservedInstancesErrorCode["UNEXPECTED_ERROR"] = "unexpected-error";
})(DeleteQueuedReservedInstancesErrorCode = exports.DeleteQueuedReservedInstancesErrorCode || (exports.DeleteQueuedReservedInstancesErrorCode = {}));
const RouteTableAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RouteTableAssociationFilterSensitiveLog = RouteTableAssociationFilterSensitiveLog;
const PropagatingVgwFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PropagatingVgwFilterSensitiveLog = PropagatingVgwFilterSensitiveLog;
const RouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RouteFilterSensitiveLog = RouteFilterSensitiveLog;
const RouteTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RouteTableFilterSensitiveLog = RouteTableFilterSensitiveLog;
const CreateRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRouteTableResultFilterSensitiveLog = CreateRouteTableResultFilterSensitiveLog;
const CreateSecurityGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSecurityGroupRequestFilterSensitiveLog = CreateSecurityGroupRequestFilterSensitiveLog;
const CreateSecurityGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSecurityGroupResultFilterSensitiveLog = CreateSecurityGroupResultFilterSensitiveLog;
const CreateSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotRequestFilterSensitiveLog = CreateSnapshotRequestFilterSensitiveLog;
const SnapshotFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotFilterSensitiveLog = SnapshotFilterSensitiveLog;
const InstanceSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceSpecificationFilterSensitiveLog = InstanceSpecificationFilterSensitiveLog;
const CreateSnapshotsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotsRequestFilterSensitiveLog = CreateSnapshotsRequestFilterSensitiveLog;
const SnapshotInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotInfoFilterSensitiveLog = SnapshotInfoFilterSensitiveLog;
const CreateSnapshotsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotsResultFilterSensitiveLog = CreateSnapshotsResultFilterSensitiveLog;
const CreateSpotDatafeedSubscriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSpotDatafeedSubscriptionRequestFilterSensitiveLog = CreateSpotDatafeedSubscriptionRequestFilterSensitiveLog;
const SpotInstanceStateFaultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SpotInstanceStateFaultFilterSensitiveLog = SpotInstanceStateFaultFilterSensitiveLog;
const SpotDatafeedSubscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SpotDatafeedSubscriptionFilterSensitiveLog = SpotDatafeedSubscriptionFilterSensitiveLog;
const CreateSpotDatafeedSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSpotDatafeedSubscriptionResultFilterSensitiveLog = CreateSpotDatafeedSubscriptionResultFilterSensitiveLog;
const S3ObjectTagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3ObjectTagFilterSensitiveLog = S3ObjectTagFilterSensitiveLog;
const CreateStoreImageTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateStoreImageTaskRequestFilterSensitiveLog = CreateStoreImageTaskRequestFilterSensitiveLog;
const CreateStoreImageTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateStoreImageTaskResultFilterSensitiveLog = CreateStoreImageTaskResultFilterSensitiveLog;
const CreateSubnetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSubnetRequestFilterSensitiveLog = CreateSubnetRequestFilterSensitiveLog;
const CreateSubnetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSubnetResultFilterSensitiveLog = CreateSubnetResultFilterSensitiveLog;
const CreateSubnetCidrReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSubnetCidrReservationRequestFilterSensitiveLog = CreateSubnetCidrReservationRequestFilterSensitiveLog;
const SubnetCidrReservationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetCidrReservationFilterSensitiveLog = SubnetCidrReservationFilterSensitiveLog;
const CreateSubnetCidrReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSubnetCidrReservationResultFilterSensitiveLog = CreateSubnetCidrReservationResultFilterSensitiveLog;
const CreateTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTagsRequestFilterSensitiveLog = CreateTagsRequestFilterSensitiveLog;
const CreateTrafficMirrorFilterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorFilterRequestFilterSensitiveLog = CreateTrafficMirrorFilterRequestFilterSensitiveLog;
const TrafficMirrorPortRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorPortRangeFilterSensitiveLog = TrafficMirrorPortRangeFilterSensitiveLog;
const TrafficMirrorFilterRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorFilterRuleFilterSensitiveLog = TrafficMirrorFilterRuleFilterSensitiveLog;
const TrafficMirrorFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorFilterFilterSensitiveLog = TrafficMirrorFilterFilterSensitiveLog;
const CreateTrafficMirrorFilterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorFilterResultFilterSensitiveLog = CreateTrafficMirrorFilterResultFilterSensitiveLog;
const TrafficMirrorPortRangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorPortRangeRequestFilterSensitiveLog = TrafficMirrorPortRangeRequestFilterSensitiveLog;
const CreateTrafficMirrorFilterRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorFilterRuleRequestFilterSensitiveLog = CreateTrafficMirrorFilterRuleRequestFilterSensitiveLog;
const CreateTrafficMirrorFilterRuleResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorFilterRuleResultFilterSensitiveLog = CreateTrafficMirrorFilterRuleResultFilterSensitiveLog;
const CreateTrafficMirrorSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorSessionRequestFilterSensitiveLog = CreateTrafficMirrorSessionRequestFilterSensitiveLog;
const TrafficMirrorSessionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorSessionFilterSensitiveLog = TrafficMirrorSessionFilterSensitiveLog;
const CreateTrafficMirrorSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorSessionResultFilterSensitiveLog = CreateTrafficMirrorSessionResultFilterSensitiveLog;
const CreateTrafficMirrorTargetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorTargetRequestFilterSensitiveLog = CreateTrafficMirrorTargetRequestFilterSensitiveLog;
const TrafficMirrorTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficMirrorTargetFilterSensitiveLog = TrafficMirrorTargetFilterSensitiveLog;
const CreateTrafficMirrorTargetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficMirrorTargetResultFilterSensitiveLog = CreateTrafficMirrorTargetResultFilterSensitiveLog;
const TransitGatewayRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRequestOptionsFilterSensitiveLog = TransitGatewayRequestOptionsFilterSensitiveLog;
const CreateTransitGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRequestFilterSensitiveLog = CreateTransitGatewayRequestFilterSensitiveLog;
const TransitGatewayOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayOptionsFilterSensitiveLog = TransitGatewayOptionsFilterSensitiveLog;
const TransitGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayFilterSensitiveLog = TransitGatewayFilterSensitiveLog;
const CreateTransitGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayResultFilterSensitiveLog = CreateTransitGatewayResultFilterSensitiveLog;
const CreateTransitGatewayConnectRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayConnectRequestOptionsFilterSensitiveLog = CreateTransitGatewayConnectRequestOptionsFilterSensitiveLog;
const CreateTransitGatewayConnectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayConnectRequestFilterSensitiveLog = CreateTransitGatewayConnectRequestFilterSensitiveLog;
const TransitGatewayConnectOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayConnectOptionsFilterSensitiveLog = TransitGatewayConnectOptionsFilterSensitiveLog;
const TransitGatewayConnectFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayConnectFilterSensitiveLog = TransitGatewayConnectFilterSensitiveLog;
const CreateTransitGatewayConnectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayConnectResultFilterSensitiveLog = CreateTransitGatewayConnectResultFilterSensitiveLog;
const TransitGatewayConnectRequestBgpOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayConnectRequestBgpOptionsFilterSensitiveLog = TransitGatewayConnectRequestBgpOptionsFilterSensitiveLog;
const CreateTransitGatewayConnectPeerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayConnectPeerRequestFilterSensitiveLog = CreateTransitGatewayConnectPeerRequestFilterSensitiveLog;
const TransitGatewayAttachmentBgpConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayAttachmentBgpConfigurationFilterSensitiveLog = TransitGatewayAttachmentBgpConfigurationFilterSensitiveLog;
const TransitGatewayConnectPeerConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayConnectPeerConfigurationFilterSensitiveLog = TransitGatewayConnectPeerConfigurationFilterSensitiveLog;
const TransitGatewayConnectPeerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayConnectPeerFilterSensitiveLog = TransitGatewayConnectPeerFilterSensitiveLog;
const CreateTransitGatewayConnectPeerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayConnectPeerResultFilterSensitiveLog = CreateTransitGatewayConnectPeerResultFilterSensitiveLog;
const CreateTransitGatewayMulticastDomainRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayMulticastDomainRequestOptionsFilterSensitiveLog = CreateTransitGatewayMulticastDomainRequestOptionsFilterSensitiveLog;
const CreateTransitGatewayMulticastDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayMulticastDomainRequestFilterSensitiveLog = CreateTransitGatewayMulticastDomainRequestFilterSensitiveLog;
const TransitGatewayMulticastDomainOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayMulticastDomainOptionsFilterSensitiveLog = TransitGatewayMulticastDomainOptionsFilterSensitiveLog;
const TransitGatewayMulticastDomainFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayMulticastDomainFilterSensitiveLog = TransitGatewayMulticastDomainFilterSensitiveLog;
const CreateTransitGatewayMulticastDomainResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayMulticastDomainResultFilterSensitiveLog = CreateTransitGatewayMulticastDomainResultFilterSensitiveLog;
const CreateTransitGatewayPeeringAttachmentRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPeeringAttachmentRequestOptionsFilterSensitiveLog = CreateTransitGatewayPeeringAttachmentRequestOptionsFilterSensitiveLog;
const CreateTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = CreateTransitGatewayPeeringAttachmentRequestFilterSensitiveLog;
const CreateTransitGatewayPeeringAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPeeringAttachmentResultFilterSensitiveLog = CreateTransitGatewayPeeringAttachmentResultFilterSensitiveLog;
const CreateTransitGatewayPolicyTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPolicyTableRequestFilterSensitiveLog = CreateTransitGatewayPolicyTableRequestFilterSensitiveLog;
const TransitGatewayPolicyTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPolicyTableFilterSensitiveLog = TransitGatewayPolicyTableFilterSensitiveLog;
const CreateTransitGatewayPolicyTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPolicyTableResultFilterSensitiveLog = CreateTransitGatewayPolicyTableResultFilterSensitiveLog;
const CreateTransitGatewayPrefixListReferenceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPrefixListReferenceRequestFilterSensitiveLog = CreateTransitGatewayPrefixListReferenceRequestFilterSensitiveLog;
const TransitGatewayPrefixListAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPrefixListAttachmentFilterSensitiveLog = TransitGatewayPrefixListAttachmentFilterSensitiveLog;
const TransitGatewayPrefixListReferenceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayPrefixListReferenceFilterSensitiveLog = TransitGatewayPrefixListReferenceFilterSensitiveLog;
const CreateTransitGatewayPrefixListReferenceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayPrefixListReferenceResultFilterSensitiveLog = CreateTransitGatewayPrefixListReferenceResultFilterSensitiveLog;
const CreateTransitGatewayRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteRequestFilterSensitiveLog = CreateTransitGatewayRouteRequestFilterSensitiveLog;
const TransitGatewayRouteAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRouteAttachmentFilterSensitiveLog = TransitGatewayRouteAttachmentFilterSensitiveLog;
const TransitGatewayRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRouteFilterSensitiveLog = TransitGatewayRouteFilterSensitiveLog;
const CreateTransitGatewayRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteResultFilterSensitiveLog = CreateTransitGatewayRouteResultFilterSensitiveLog;
const CreateTransitGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteTableRequestFilterSensitiveLog = CreateTransitGatewayRouteTableRequestFilterSensitiveLog;
const TransitGatewayRouteTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRouteTableFilterSensitiveLog = TransitGatewayRouteTableFilterSensitiveLog;
const CreateTransitGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteTableResultFilterSensitiveLog = CreateTransitGatewayRouteTableResultFilterSensitiveLog;
const CreateTransitGatewayRouteTableAnnouncementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteTableAnnouncementRequestFilterSensitiveLog = CreateTransitGatewayRouteTableAnnouncementRequestFilterSensitiveLog;
const TransitGatewayRouteTableAnnouncementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitGatewayRouteTableAnnouncementFilterSensitiveLog = TransitGatewayRouteTableAnnouncementFilterSensitiveLog;
const CreateTransitGatewayRouteTableAnnouncementResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayRouteTableAnnouncementResultFilterSensitiveLog = CreateTransitGatewayRouteTableAnnouncementResultFilterSensitiveLog;
const CreateTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog = CreateTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog;
const CreateTransitGatewayVpcAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayVpcAttachmentRequestFilterSensitiveLog = CreateTransitGatewayVpcAttachmentRequestFilterSensitiveLog;
const CreateTransitGatewayVpcAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTransitGatewayVpcAttachmentResultFilterSensitiveLog = CreateTransitGatewayVpcAttachmentResultFilterSensitiveLog;
const CreateVerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = CreateVerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog;
const CreateVerifiedAccessEndpointEniOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessEndpointEniOptionsFilterSensitiveLog = CreateVerifiedAccessEndpointEniOptionsFilterSensitiveLog;
const CreateVerifiedAccessEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessEndpointRequestFilterSensitiveLog = CreateVerifiedAccessEndpointRequestFilterSensitiveLog;
const VerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = VerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog;
const VerifiedAccessEndpointEniOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessEndpointEniOptionsFilterSensitiveLog = VerifiedAccessEndpointEniOptionsFilterSensitiveLog;
const VerifiedAccessEndpointStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessEndpointStatusFilterSensitiveLog = VerifiedAccessEndpointStatusFilterSensitiveLog;
const VerifiedAccessEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessEndpointFilterSensitiveLog = VerifiedAccessEndpointFilterSensitiveLog;
const CreateVerifiedAccessEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessEndpointResultFilterSensitiveLog = CreateVerifiedAccessEndpointResultFilterSensitiveLog;
const CreateVerifiedAccessGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessGroupRequestFilterSensitiveLog = CreateVerifiedAccessGroupRequestFilterSensitiveLog;
const VerifiedAccessGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VerifiedAccessGroupFilterSensitiveLog = VerifiedAccessGroupFilterSensitiveLog;
const CreateVerifiedAccessGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessGroupResultFilterSensitiveLog = CreateVerifiedAccessGroupResultFilterSensitiveLog;
const CreateVerifiedAccessInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessInstanceRequestFilterSensitiveLog = CreateVerifiedAccessInstanceRequestFilterSensitiveLog;
const CreateVerifiedAccessInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessInstanceResultFilterSensitiveLog = CreateVerifiedAccessInstanceResultFilterSensitiveLog;
const CreateVerifiedAccessTrustProviderDeviceOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessTrustProviderDeviceOptionsFilterSensitiveLog = CreateVerifiedAccessTrustProviderDeviceOptionsFilterSensitiveLog;
const CreateVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = CreateVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog;
const CreateVerifiedAccessTrustProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessTrustProviderRequestFilterSensitiveLog = CreateVerifiedAccessTrustProviderRequestFilterSensitiveLog;
const CreateVerifiedAccessTrustProviderResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVerifiedAccessTrustProviderResultFilterSensitiveLog = CreateVerifiedAccessTrustProviderResultFilterSensitiveLog;
const CreateVolumeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVolumeRequestFilterSensitiveLog = CreateVolumeRequestFilterSensitiveLog;
const VolumeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VolumeFilterSensitiveLog = VolumeFilterSensitiveLog;
const CreateVpcRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcRequestFilterSensitiveLog = CreateVpcRequestFilterSensitiveLog;
const CreateVpcResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcResultFilterSensitiveLog = CreateVpcResultFilterSensitiveLog;
const DnsOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DnsOptionsSpecificationFilterSensitiveLog = DnsOptionsSpecificationFilterSensitiveLog;
const CreateVpcEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointRequestFilterSensitiveLog = CreateVpcEndpointRequestFilterSensitiveLog;
const DnsEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DnsEntryFilterSensitiveLog = DnsEntryFilterSensitiveLog;
const DnsOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DnsOptionsFilterSensitiveLog = DnsOptionsFilterSensitiveLog;
const SecurityGroupIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SecurityGroupIdentifierFilterSensitiveLog = SecurityGroupIdentifierFilterSensitiveLog;
const LastErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LastErrorFilterSensitiveLog = LastErrorFilterSensitiveLog;
const VpcEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcEndpointFilterSensitiveLog = VpcEndpointFilterSensitiveLog;
const CreateVpcEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointResultFilterSensitiveLog = CreateVpcEndpointResultFilterSensitiveLog;
const CreateVpcEndpointConnectionNotificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointConnectionNotificationRequestFilterSensitiveLog = CreateVpcEndpointConnectionNotificationRequestFilterSensitiveLog;
const ConnectionNotificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConnectionNotificationFilterSensitiveLog = ConnectionNotificationFilterSensitiveLog;
const CreateVpcEndpointConnectionNotificationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointConnectionNotificationResultFilterSensitiveLog = CreateVpcEndpointConnectionNotificationResultFilterSensitiveLog;
const CreateVpcEndpointServiceConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointServiceConfigurationRequestFilterSensitiveLog = CreateVpcEndpointServiceConfigurationRequestFilterSensitiveLog;
const PrivateDnsNameConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PrivateDnsNameConfigurationFilterSensitiveLog = PrivateDnsNameConfigurationFilterSensitiveLog;
const ServiceTypeDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ServiceTypeDetailFilterSensitiveLog = ServiceTypeDetailFilterSensitiveLog;
const ServiceConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ServiceConfigurationFilterSensitiveLog = ServiceConfigurationFilterSensitiveLog;
const CreateVpcEndpointServiceConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcEndpointServiceConfigurationResultFilterSensitiveLog = CreateVpcEndpointServiceConfigurationResultFilterSensitiveLog;
const CreateVpcPeeringConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcPeeringConnectionRequestFilterSensitiveLog = CreateVpcPeeringConnectionRequestFilterSensitiveLog;
const CreateVpcPeeringConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpcPeeringConnectionResultFilterSensitiveLog = CreateVpcPeeringConnectionResultFilterSensitiveLog;
const IKEVersionsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IKEVersionsRequestListValueFilterSensitiveLog = IKEVersionsRequestListValueFilterSensitiveLog;
const CloudWatchLogOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudWatchLogOptionsSpecificationFilterSensitiveLog = CloudWatchLogOptionsSpecificationFilterSensitiveLog;
const VpnTunnelLogOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnTunnelLogOptionsSpecificationFilterSensitiveLog = VpnTunnelLogOptionsSpecificationFilterSensitiveLog;
const Phase1DHGroupNumbersRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1DHGroupNumbersRequestListValueFilterSensitiveLog = Phase1DHGroupNumbersRequestListValueFilterSensitiveLog;
const Phase1EncryptionAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1EncryptionAlgorithmsRequestListValueFilterSensitiveLog = Phase1EncryptionAlgorithmsRequestListValueFilterSensitiveLog;
const Phase1IntegrityAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1IntegrityAlgorithmsRequestListValueFilterSensitiveLog = Phase1IntegrityAlgorithmsRequestListValueFilterSensitiveLog;
const Phase2DHGroupNumbersRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2DHGroupNumbersRequestListValueFilterSensitiveLog = Phase2DHGroupNumbersRequestListValueFilterSensitiveLog;
const Phase2EncryptionAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2EncryptionAlgorithmsRequestListValueFilterSensitiveLog = Phase2EncryptionAlgorithmsRequestListValueFilterSensitiveLog;
const Phase2IntegrityAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2IntegrityAlgorithmsRequestListValueFilterSensitiveLog = Phase2IntegrityAlgorithmsRequestListValueFilterSensitiveLog;
const VpnTunnelOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnTunnelOptionsSpecificationFilterSensitiveLog = VpnTunnelOptionsSpecificationFilterSensitiveLog;
const VpnConnectionOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnConnectionOptionsSpecificationFilterSensitiveLog = VpnConnectionOptionsSpecificationFilterSensitiveLog;
const CreateVpnConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpnConnectionRequestFilterSensitiveLog = CreateVpnConnectionRequestFilterSensitiveLog;
const IKEVersionsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IKEVersionsListValueFilterSensitiveLog = IKEVersionsListValueFilterSensitiveLog;
const CloudWatchLogOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudWatchLogOptionsFilterSensitiveLog = CloudWatchLogOptionsFilterSensitiveLog;
const VpnTunnelLogOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnTunnelLogOptionsFilterSensitiveLog = VpnTunnelLogOptionsFilterSensitiveLog;
const Phase1DHGroupNumbersListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1DHGroupNumbersListValueFilterSensitiveLog = Phase1DHGroupNumbersListValueFilterSensitiveLog;
const Phase1EncryptionAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1EncryptionAlgorithmsListValueFilterSensitiveLog = Phase1EncryptionAlgorithmsListValueFilterSensitiveLog;
const Phase1IntegrityAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase1IntegrityAlgorithmsListValueFilterSensitiveLog = Phase1IntegrityAlgorithmsListValueFilterSensitiveLog;
const Phase2DHGroupNumbersListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2DHGroupNumbersListValueFilterSensitiveLog = Phase2DHGroupNumbersListValueFilterSensitiveLog;
const Phase2EncryptionAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2EncryptionAlgorithmsListValueFilterSensitiveLog = Phase2EncryptionAlgorithmsListValueFilterSensitiveLog;
const Phase2IntegrityAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.Phase2IntegrityAlgorithmsListValueFilterSensitiveLog = Phase2IntegrityAlgorithmsListValueFilterSensitiveLog;
const TunnelOptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TunnelOptionFilterSensitiveLog = TunnelOptionFilterSensitiveLog;
const VpnConnectionOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnConnectionOptionsFilterSensitiveLog = VpnConnectionOptionsFilterSensitiveLog;
const VpnStaticRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnStaticRouteFilterSensitiveLog = VpnStaticRouteFilterSensitiveLog;
const VgwTelemetryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VgwTelemetryFilterSensitiveLog = VgwTelemetryFilterSensitiveLog;
const VpnConnectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnConnectionFilterSensitiveLog = VpnConnectionFilterSensitiveLog;
const CreateVpnConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpnConnectionResultFilterSensitiveLog = CreateVpnConnectionResultFilterSensitiveLog;
const CreateVpnConnectionRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpnConnectionRouteRequestFilterSensitiveLog = CreateVpnConnectionRouteRequestFilterSensitiveLog;
const CreateVpnGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpnGatewayRequestFilterSensitiveLog = CreateVpnGatewayRequestFilterSensitiveLog;
const VpnGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpnGatewayFilterSensitiveLog = VpnGatewayFilterSensitiveLog;
const CreateVpnGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVpnGatewayResultFilterSensitiveLog = CreateVpnGatewayResultFilterSensitiveLog;
const DeleteCarrierGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCarrierGatewayRequestFilterSensitiveLog = DeleteCarrierGatewayRequestFilterSensitiveLog;
const DeleteCarrierGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCarrierGatewayResultFilterSensitiveLog = DeleteCarrierGatewayResultFilterSensitiveLog;
const DeleteClientVpnEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClientVpnEndpointRequestFilterSensitiveLog = DeleteClientVpnEndpointRequestFilterSensitiveLog;
const DeleteClientVpnEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClientVpnEndpointResultFilterSensitiveLog = DeleteClientVpnEndpointResultFilterSensitiveLog;
const DeleteClientVpnRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClientVpnRouteRequestFilterSensitiveLog = DeleteClientVpnRouteRequestFilterSensitiveLog;
const DeleteClientVpnRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClientVpnRouteResultFilterSensitiveLog = DeleteClientVpnRouteResultFilterSensitiveLog;
const DeleteCoipCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCoipCidrRequestFilterSensitiveLog = DeleteCoipCidrRequestFilterSensitiveLog;
const DeleteCoipCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCoipCidrResultFilterSensitiveLog = DeleteCoipCidrResultFilterSensitiveLog;
const DeleteCoipPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCoipPoolRequestFilterSensitiveLog = DeleteCoipPoolRequestFilterSensitiveLog;
const DeleteCoipPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCoipPoolResultFilterSensitiveLog = DeleteCoipPoolResultFilterSensitiveLog;
const DeleteCustomerGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCustomerGatewayRequestFilterSensitiveLog = DeleteCustomerGatewayRequestFilterSensitiveLog;
const DeleteDhcpOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDhcpOptionsRequestFilterSensitiveLog = DeleteDhcpOptionsRequestFilterSensitiveLog;
const DeleteEgressOnlyInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEgressOnlyInternetGatewayRequestFilterSensitiveLog = DeleteEgressOnlyInternetGatewayRequestFilterSensitiveLog;
const DeleteEgressOnlyInternetGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEgressOnlyInternetGatewayResultFilterSensitiveLog = DeleteEgressOnlyInternetGatewayResultFilterSensitiveLog;
const DeleteFleetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetsRequestFilterSensitiveLog = DeleteFleetsRequestFilterSensitiveLog;
const DeleteFleetSuccessItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetSuccessItemFilterSensitiveLog = DeleteFleetSuccessItemFilterSensitiveLog;
const DeleteFleetErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetErrorFilterSensitiveLog = DeleteFleetErrorFilterSensitiveLog;
const DeleteFleetErrorItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetErrorItemFilterSensitiveLog = DeleteFleetErrorItemFilterSensitiveLog;
const DeleteFleetsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetsResultFilterSensitiveLog = DeleteFleetsResultFilterSensitiveLog;
const DeleteFlowLogsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFlowLogsRequestFilterSensitiveLog = DeleteFlowLogsRequestFilterSensitiveLog;
const DeleteFlowLogsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFlowLogsResultFilterSensitiveLog = DeleteFlowLogsResultFilterSensitiveLog;
const DeleteFpgaImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFpgaImageRequestFilterSensitiveLog = DeleteFpgaImageRequestFilterSensitiveLog;
const DeleteFpgaImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFpgaImageResultFilterSensitiveLog = DeleteFpgaImageResultFilterSensitiveLog;
const DeleteInstanceEventWindowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceEventWindowRequestFilterSensitiveLog = DeleteInstanceEventWindowRequestFilterSensitiveLog;
const InstanceEventWindowStateChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEventWindowStateChangeFilterSensitiveLog = InstanceEventWindowStateChangeFilterSensitiveLog;
const DeleteInstanceEventWindowResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceEventWindowResultFilterSensitiveLog = DeleteInstanceEventWindowResultFilterSensitiveLog;
const DeleteInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInternetGatewayRequestFilterSensitiveLog = DeleteInternetGatewayRequestFilterSensitiveLog;
const DeleteIpamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamRequestFilterSensitiveLog = DeleteIpamRequestFilterSensitiveLog;
const DeleteIpamResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamResultFilterSensitiveLog = DeleteIpamResultFilterSensitiveLog;
const DeleteIpamPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamPoolRequestFilterSensitiveLog = DeleteIpamPoolRequestFilterSensitiveLog;
const DeleteIpamPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamPoolResultFilterSensitiveLog = DeleteIpamPoolResultFilterSensitiveLog;
const DeleteIpamResourceDiscoveryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamResourceDiscoveryRequestFilterSensitiveLog = DeleteIpamResourceDiscoveryRequestFilterSensitiveLog;
const DeleteIpamResourceDiscoveryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamResourceDiscoveryResultFilterSensitiveLog = DeleteIpamResourceDiscoveryResultFilterSensitiveLog;
const DeleteIpamScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamScopeRequestFilterSensitiveLog = DeleteIpamScopeRequestFilterSensitiveLog;
const DeleteIpamScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteIpamScopeResultFilterSensitiveLog = DeleteIpamScopeResultFilterSensitiveLog;
const DeleteKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKeyPairRequestFilterSensitiveLog = DeleteKeyPairRequestFilterSensitiveLog;
const DeleteLaunchTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateRequestFilterSensitiveLog = DeleteLaunchTemplateRequestFilterSensitiveLog;
const DeleteLaunchTemplateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateResultFilterSensitiveLog = DeleteLaunchTemplateResultFilterSensitiveLog;
const DeleteLaunchTemplateVersionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateVersionsRequestFilterSensitiveLog = DeleteLaunchTemplateVersionsRequestFilterSensitiveLog;
const DeleteLaunchTemplateVersionsResponseSuccessItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateVersionsResponseSuccessItemFilterSensitiveLog = DeleteLaunchTemplateVersionsResponseSuccessItemFilterSensitiveLog;
const ResponseErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseErrorFilterSensitiveLog = ResponseErrorFilterSensitiveLog;
const DeleteLaunchTemplateVersionsResponseErrorItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateVersionsResponseErrorItemFilterSensitiveLog = DeleteLaunchTemplateVersionsResponseErrorItemFilterSensitiveLog;
const DeleteLaunchTemplateVersionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLaunchTemplateVersionsResultFilterSensitiveLog = DeleteLaunchTemplateVersionsResultFilterSensitiveLog;
const DeleteLocalGatewayRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteRequestFilterSensitiveLog = DeleteLocalGatewayRouteRequestFilterSensitiveLog;
const DeleteLocalGatewayRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteResultFilterSensitiveLog = DeleteLocalGatewayRouteResultFilterSensitiveLog;
const DeleteLocalGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableRequestFilterSensitiveLog = DeleteLocalGatewayRouteTableRequestFilterSensitiveLog;
const DeleteLocalGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableResultFilterSensitiveLog = DeleteLocalGatewayRouteTableResultFilterSensitiveLog;
const DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog = DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog;
const DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog = DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog;
const DeleteLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog = DeleteLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog;
const DeleteLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog = DeleteLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog;
const DeleteManagedPrefixListRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteManagedPrefixListRequestFilterSensitiveLog = DeleteManagedPrefixListRequestFilterSensitiveLog;
const DeleteManagedPrefixListResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteManagedPrefixListResultFilterSensitiveLog = DeleteManagedPrefixListResultFilterSensitiveLog;
const DeleteNatGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNatGatewayRequestFilterSensitiveLog = DeleteNatGatewayRequestFilterSensitiveLog;
const DeleteNatGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNatGatewayResultFilterSensitiveLog = DeleteNatGatewayResultFilterSensitiveLog;
const DeleteNetworkAclRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkAclRequestFilterSensitiveLog = DeleteNetworkAclRequestFilterSensitiveLog;
const DeleteNetworkAclEntryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkAclEntryRequestFilterSensitiveLog = DeleteNetworkAclEntryRequestFilterSensitiveLog;
const DeleteNetworkInsightsAccessScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAccessScopeRequestFilterSensitiveLog = DeleteNetworkInsightsAccessScopeRequestFilterSensitiveLog;
const DeleteNetworkInsightsAccessScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAccessScopeResultFilterSensitiveLog = DeleteNetworkInsightsAccessScopeResultFilterSensitiveLog;
const DeleteNetworkInsightsAccessScopeAnalysisRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAccessScopeAnalysisRequestFilterSensitiveLog = DeleteNetworkInsightsAccessScopeAnalysisRequestFilterSensitiveLog;
const DeleteNetworkInsightsAccessScopeAnalysisResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAccessScopeAnalysisResultFilterSensitiveLog = DeleteNetworkInsightsAccessScopeAnalysisResultFilterSensitiveLog;
const DeleteNetworkInsightsAnalysisRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAnalysisRequestFilterSensitiveLog = DeleteNetworkInsightsAnalysisRequestFilterSensitiveLog;
const DeleteNetworkInsightsAnalysisResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsAnalysisResultFilterSensitiveLog = DeleteNetworkInsightsAnalysisResultFilterSensitiveLog;
const DeleteNetworkInsightsPathRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsPathRequestFilterSensitiveLog = DeleteNetworkInsightsPathRequestFilterSensitiveLog;
const DeleteNetworkInsightsPathResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInsightsPathResultFilterSensitiveLog = DeleteNetworkInsightsPathResultFilterSensitiveLog;
const DeleteNetworkInterfaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInterfaceRequestFilterSensitiveLog = DeleteNetworkInterfaceRequestFilterSensitiveLog;
const DeleteNetworkInterfacePermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInterfacePermissionRequestFilterSensitiveLog = DeleteNetworkInterfacePermissionRequestFilterSensitiveLog;
const DeleteNetworkInterfacePermissionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNetworkInterfacePermissionResultFilterSensitiveLog = DeleteNetworkInterfacePermissionResultFilterSensitiveLog;
const DeletePlacementGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePlacementGroupRequestFilterSensitiveLog = DeletePlacementGroupRequestFilterSensitiveLog;
const DeletePublicIpv4PoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePublicIpv4PoolRequestFilterSensitiveLog = DeletePublicIpv4PoolRequestFilterSensitiveLog;
const DeletePublicIpv4PoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePublicIpv4PoolResultFilterSensitiveLog = DeletePublicIpv4PoolResultFilterSensitiveLog;
const DeleteQueuedReservedInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueuedReservedInstancesRequestFilterSensitiveLog = DeleteQueuedReservedInstancesRequestFilterSensitiveLog;
const DeleteQueuedReservedInstancesErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueuedReservedInstancesErrorFilterSensitiveLog = DeleteQueuedReservedInstancesErrorFilterSensitiveLog;
const FailedQueuedPurchaseDeletionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailedQueuedPurchaseDeletionFilterSensitiveLog = FailedQueuedPurchaseDeletionFilterSensitiveLog;
const SuccessfulQueuedPurchaseDeletionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SuccessfulQueuedPurchaseDeletionFilterSensitiveLog = SuccessfulQueuedPurchaseDeletionFilterSensitiveLog;
const DeleteQueuedReservedInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueuedReservedInstancesResultFilterSensitiveLog = DeleteQueuedReservedInstancesResultFilterSensitiveLog;
const DeleteRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRouteRequestFilterSensitiveLog = DeleteRouteRequestFilterSensitiveLog;
const DeleteRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRouteTableRequestFilterSensitiveLog = DeleteRouteTableRequestFilterSensitiveLog;
const DeleteSecurityGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSecurityGroupRequestFilterSensitiveLog = DeleteSecurityGroupRequestFilterSensitiveLog;
const DeleteSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSnapshotRequestFilterSensitiveLog = DeleteSnapshotRequestFilterSensitiveLog;
const DeleteSpotDatafeedSubscriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSpotDatafeedSubscriptionRequestFilterSensitiveLog = DeleteSpotDatafeedSubscriptionRequestFilterSensitiveLog;
const DeleteSubnetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSubnetRequestFilterSensitiveLog = DeleteSubnetRequestFilterSensitiveLog;
const DeleteSubnetCidrReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSubnetCidrReservationRequestFilterSensitiveLog = DeleteSubnetCidrReservationRequestFilterSensitiveLog;
const DeleteSubnetCidrReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSubnetCidrReservationResultFilterSensitiveLog = DeleteSubnetCidrReservationResultFilterSensitiveLog;
const DeleteTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTagsRequestFilterSensitiveLog = DeleteTagsRequestFilterSensitiveLog;
const DeleteTrafficMirrorFilterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficMirrorFilterRequestFilterSensitiveLog = DeleteTrafficMirrorFilterRequestFilterSensitiveLog;
const DeleteTrafficMirrorFilterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficMirrorFilterResultFilterSensitiveLog = DeleteTrafficMirrorFilterResultFilterSensitiveLog;
const DeleteTrafficMirrorFilterRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficMirrorFilterRuleRequestFilterSensitiveLog = DeleteTrafficMirrorFilterRuleRequestFilterSensitiveLog;
const DeleteTrafficMirrorFilterRuleResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficMirrorFilterRuleResultFilterSensitiveLog = DeleteTrafficMirrorFilterRuleResultFilterSensitiveLog;
const DeleteTrafficMirrorSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficMirrorSessionRequestFilterSensitiveLog = DeleteTrafficMirrorSessionRequestFilterSensitiveLog;
