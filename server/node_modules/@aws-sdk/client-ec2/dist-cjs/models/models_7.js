"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithdrawByoipCidrResultFilterSensitiveLog = exports.WithdrawByoipCidrRequestFilterSensitiveLog = exports.UpdateSecurityGroupRuleDescriptionsIngressResultFilterSensitiveLog = exports.UpdateSecurityGroupRuleDescriptionsIngressRequestFilterSensitiveLog = exports.UpdateSecurityGroupRuleDescriptionsEgressResultFilterSensitiveLog = exports.UpdateSecurityGroupRuleDescriptionsEgressRequestFilterSensitiveLog = exports.SecurityGroupRuleDescriptionFilterSensitiveLog = exports.UnmonitorInstancesResultFilterSensitiveLog = exports.UnmonitorInstancesRequestFilterSensitiveLog = exports.UnassignPrivateNatGatewayAddressResultFilterSensitiveLog = exports.UnassignPrivateNatGatewayAddressRequestFilterSensitiveLog = exports.UnassignPrivateIpAddressesRequestFilterSensitiveLog = exports.UnassignIpv6AddressesResultFilterSensitiveLog = exports.UnassignIpv6AddressesRequestFilterSensitiveLog = exports.TerminateInstancesResultFilterSensitiveLog = void 0;
const TerminateInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TerminateInstancesResultFilterSensitiveLog = TerminateInstancesResultFilterSensitiveLog;
const UnassignIpv6AddressesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnassignIpv6AddressesRequestFilterSensitiveLog = UnassignIpv6AddressesRequestFilterSensitiveLog;
const UnassignIpv6AddressesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnassignIpv6AddressesResultFilterSensitiveLog = UnassignIpv6AddressesResultFilterSensitiveLog;
const UnassignPrivateIpAddressesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnassignPrivateIpAddressesRequestFilterSensitiveLog = UnassignPrivateIpAddressesRequestFilterSensitiveLog;
const UnassignPrivateNatGatewayAddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnassignPrivateNatGatewayAddressRequestFilterSensitiveLog = UnassignPrivateNatGatewayAddressRequestFilterSensitiveLog;
const UnassignPrivateNatGatewayAddressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnassignPrivateNatGatewayAddressResultFilterSensitiveLog = UnassignPrivateNatGatewayAddressResultFilterSensitiveLog;
const UnmonitorInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnmonitorInstancesRequestFilterSensitiveLog = UnmonitorInstancesRequestFilterSensitiveLog;
const UnmonitorInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UnmonitorInstancesResultFilterSensitiveLog = UnmonitorInstancesResultFilterSensitiveLog;
const SecurityGroupRuleDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SecurityGroupRuleDescriptionFilterSensitiveLog = SecurityGroupRuleDescriptionFilterSensitiveLog;
const UpdateSecurityGroupRuleDescriptionsEgressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecurityGroupRuleDescriptionsEgressRequestFilterSensitiveLog = UpdateSecurityGroupRuleDescriptionsEgressRequestFilterSensitiveLog;
const UpdateSecurityGroupRuleDescriptionsEgressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecurityGroupRuleDescriptionsEgressResultFilterSensitiveLog = UpdateSecurityGroupRuleDescriptionsEgressResultFilterSensitiveLog;
const UpdateSecurityGroupRuleDescriptionsIngressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecurityGroupRuleDescriptionsIngressRequestFilterSensitiveLog = UpdateSecurityGroupRuleDescriptionsIngressRequestFilterSensitiveLog;
const UpdateSecurityGroupRuleDescriptionsIngressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecurityGroupRuleDescriptionsIngressResultFilterSensitiveLog = UpdateSecurityGroupRuleDescriptionsIngressResultFilterSensitiveLog;
const WithdrawByoipCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WithdrawByoipCidrRequestFilterSensitiveLog = WithdrawByoipCidrRequestFilterSensitiveLog;
const WithdrawByoipCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WithdrawByoipCidrResultFilterSensitiveLog = WithdrawByoipCidrResultFilterSensitiveLog;
