"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PricingUnit = exports.Currency = exports.ContainerServiceMetricName = exports.ContainerServiceStateDetailCode = exports.ContainerServiceState = exports.ContainerServicePowerName = exports.ContainerServiceDeploymentState = exports.ContainerServiceProtocol = exports.ContactMethodVerificationProtocol = exports.ContactMethodStatus = exports.RecordState = exports.CloudFormationStackRecordSourceType = exports.NetworkProtocol = exports.CertificateStatus = exports.RenewalStatus = exports.CertificateDomainValidationStatus = exports.DnsRecordCreationStateCode = exports.HeaderEnum = exports.ForwardValues = exports.BucketMetricName = exports.BlueprintType = exports.InstancePlatform = exports.BehaviorEnum = exports.AutoSnapshotStatus = exports.AutoMountStatus = exports.AppCategory = exports.UnauthenticatedException = exports.ServiceException = exports.OperationFailureException = exports.NotFoundException = exports.InvalidInputException = exports.OperationStatus = exports.OperationType = exports.MetricUnit = exports.TreatMissingData = exports.MetricStatistic = exports.AlarmState = exports.ResourceType = exports.MetricName = exports.RegionName = exports.ContactProtocol = exports.ComparisonOperator = exports.AddOnType = exports.AccountSetupInProgressException = exports.AccountLevelBpaSyncStatus = exports.BPAStatusMessage = exports.AccessType = exports.StatusType = exports.AccessDirection = exports.AccessDeniedException = void 0;
exports.HeaderObjectFilterSensitiveLog = exports.CookieObjectFilterSensitiveLog = exports.CacheBehaviorPerPathFilterSensitiveLog = exports.CacheBehaviorFilterSensitiveLog = exports.BundleFilterSensitiveLog = exports.BucketBundleFilterSensitiveLog = exports.BucketFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.BucketStateFilterSensitiveLog = exports.BucketAccessLogConfigFilterSensitiveLog = exports.BlueprintFilterSensitiveLog = exports.AvailabilityZoneFilterSensitiveLog = exports.AutoSnapshotDetailsFilterSensitiveLog = exports.AttachStaticIpResultFilterSensitiveLog = exports.AttachStaticIpRequestFilterSensitiveLog = exports.AttachLoadBalancerTlsCertificateResultFilterSensitiveLog = exports.AttachLoadBalancerTlsCertificateRequestFilterSensitiveLog = exports.AttachInstancesToLoadBalancerResultFilterSensitiveLog = exports.AttachInstancesToLoadBalancerRequestFilterSensitiveLog = exports.DiskMapFilterSensitiveLog = exports.AttachedDiskFilterSensitiveLog = exports.AttachDiskResultFilterSensitiveLog = exports.AttachDiskRequestFilterSensitiveLog = exports.AttachCertificateToDistributionResultFilterSensitiveLog = exports.AttachCertificateToDistributionRequestFilterSensitiveLog = exports.AllocateStaticIpResultFilterSensitiveLog = exports.OperationFilterSensitiveLog = exports.AllocateStaticIpRequestFilterSensitiveLog = exports.AlarmFilterSensitiveLog = exports.MonitoredResourceInfoFilterSensitiveLog = exports.ResourceLocationFilterSensitiveLog = exports.AddOnRequestFilterSensitiveLog = exports.StopInstanceOnIdleRequestFilterSensitiveLog = exports.AutoSnapshotAddOnRequestFilterSensitiveLog = exports.AddOnFilterSensitiveLog = exports.AccountLevelBpaSyncFilterSensitiveLog = exports.AccessRulesFilterSensitiveLog = exports.ResourceReceivingAccessFilterSensitiveLog = exports.AccessKeyFilterSensitiveLog = exports.AccessKeyLastUsedFilterSensitiveLog = exports.ExportSnapshotRecordSourceType = exports.R53HostedZoneDeletionStateCode = exports.NameServersUpdateStateCode = exports.DistributionMetricName = exports.DiskSnapshotState = exports.DiskState = exports.Status = exports.OriginProtocolPolicyEnum = exports.IpAddressType = exports.PortInfoSourceType = void 0;
exports.CreateContainerServiceResultFilterSensitiveLog = exports.CreateContainerServiceRequestFilterSensitiveLog = exports.PrivateRegistryAccessRequestFilterSensitiveLog = exports.CreateContactMethodResultFilterSensitiveLog = exports.CreateContactMethodRequestFilterSensitiveLog = exports.CreateCloudFormationStackResultFilterSensitiveLog = exports.CreateCloudFormationStackRequestFilterSensitiveLog = exports.InstanceEntryFilterSensitiveLog = exports.CreateCertificateResultFilterSensitiveLog = exports.CreateCertificateRequestFilterSensitiveLog = exports.CreateBucketAccessKeyResultFilterSensitiveLog = exports.CreateBucketAccessKeyRequestFilterSensitiveLog = exports.CreateBucketResultFilterSensitiveLog = exports.CreateBucketRequestFilterSensitiveLog = exports.CostEstimateFilterSensitiveLog = exports.EstimateByTimeFilterSensitiveLog = exports.TimePeriodFilterSensitiveLog = exports.CopySnapshotResultFilterSensitiveLog = exports.CopySnapshotRequestFilterSensitiveLog = exports.ContainerServicesListResultFilterSensitiveLog = exports.ContainerServiceRegistryLoginFilterSensitiveLog = exports.ContainerServicePowerFilterSensitiveLog = exports.ContainerServiceLogEventFilterSensitiveLog = exports.ContainerServiceECRImagePullerRoleRequestFilterSensitiveLog = exports.ContainerServiceDeploymentRequestFilterSensitiveLog = exports.EndpointRequestFilterSensitiveLog = exports.ContainerServiceFilterSensitiveLog = exports.ContainerServiceStateDetailFilterSensitiveLog = exports.PrivateRegistryAccessFilterSensitiveLog = exports.ContainerServiceECRImagePullerRoleFilterSensitiveLog = exports.ContainerServiceDeploymentFilterSensitiveLog = exports.ContainerServiceEndpointFilterSensitiveLog = exports.ContainerServiceHealthCheckConfigFilterSensitiveLog = exports.ContainerImageFilterSensitiveLog = exports.ContainerFilterSensitiveLog = exports.ContactMethodFilterSensitiveLog = exports.CloudFormationStackRecordFilterSensitiveLog = exports.CloudFormationStackRecordSourceInfoFilterSensitiveLog = exports.DestinationInfoFilterSensitiveLog = exports.CloseInstancePublicPortsResultFilterSensitiveLog = exports.CloseInstancePublicPortsRequestFilterSensitiveLog = exports.PortInfoFilterSensitiveLog = exports.CertificateSummaryFilterSensitiveLog = exports.CertificateFilterSensitiveLog = exports.RenewalSummaryFilterSensitiveLog = exports.DomainValidationRecordFilterSensitiveLog = exports.ResourceRecordFilterSensitiveLog = exports.DnsRecordCreationStateFilterSensitiveLog = exports.CacheSettingsFilterSensitiveLog = exports.QueryStringObjectFilterSensitiveLog = void 0;
exports.DeleteBucketAccessKeyResultFilterSensitiveLog = exports.DeleteBucketAccessKeyRequestFilterSensitiveLog = exports.DeleteBucketResultFilterSensitiveLog = exports.DeleteBucketRequestFilterSensitiveLog = exports.DeleteAutoSnapshotResultFilterSensitiveLog = exports.DeleteAutoSnapshotRequestFilterSensitiveLog = exports.DeleteAlarmResultFilterSensitiveLog = exports.DeleteAlarmRequestFilterSensitiveLog = exports.CreateRelationalDatabaseSnapshotResultFilterSensitiveLog = exports.CreateRelationalDatabaseSnapshotRequestFilterSensitiveLog = exports.CreateRelationalDatabaseFromSnapshotResultFilterSensitiveLog = exports.CreateRelationalDatabaseFromSnapshotRequestFilterSensitiveLog = exports.CreateRelationalDatabaseResultFilterSensitiveLog = exports.CreateRelationalDatabaseRequestFilterSensitiveLog = exports.CreateLoadBalancerTlsCertificateResultFilterSensitiveLog = exports.CreateLoadBalancerTlsCertificateRequestFilterSensitiveLog = exports.CreateLoadBalancerResultFilterSensitiveLog = exports.CreateLoadBalancerRequestFilterSensitiveLog = exports.CreateKeyPairResultFilterSensitiveLog = exports.KeyPairFilterSensitiveLog = exports.CreateKeyPairRequestFilterSensitiveLog = exports.CreateInstanceSnapshotResultFilterSensitiveLog = exports.CreateInstanceSnapshotRequestFilterSensitiveLog = exports.CreateInstancesFromSnapshotResultFilterSensitiveLog = exports.CreateInstancesFromSnapshotRequestFilterSensitiveLog = exports.CreateInstancesResultFilterSensitiveLog = exports.CreateInstancesRequestFilterSensitiveLog = exports.CreateGUISessionAccessDetailsResultFilterSensitiveLog = exports.SessionFilterSensitiveLog = exports.CreateGUISessionAccessDetailsRequestFilterSensitiveLog = exports.CreateDomainEntryResultFilterSensitiveLog = exports.CreateDomainEntryRequestFilterSensitiveLog = exports.DomainEntryFilterSensitiveLog = exports.CreateDomainResultFilterSensitiveLog = exports.CreateDomainRequestFilterSensitiveLog = exports.CreateDistributionResultFilterSensitiveLog = exports.LightsailDistributionFilterSensitiveLog = exports.OriginFilterSensitiveLog = exports.CreateDistributionRequestFilterSensitiveLog = exports.InputOriginFilterSensitiveLog = exports.CreateDiskSnapshotResultFilterSensitiveLog = exports.CreateDiskSnapshotRequestFilterSensitiveLog = exports.CreateDiskFromSnapshotResultFilterSensitiveLog = exports.CreateDiskFromSnapshotRequestFilterSensitiveLog = exports.CreateDiskResultFilterSensitiveLog = exports.CreateDiskRequestFilterSensitiveLog = exports.CreateContainerServiceRegistryLoginResultFilterSensitiveLog = exports.CreateContainerServiceRegistryLoginRequestFilterSensitiveLog = exports.CreateContainerServiceDeploymentResultFilterSensitiveLog = exports.CreateContainerServiceDeploymentRequestFilterSensitiveLog = void 0;
exports.NameServersUpdateStateFilterSensitiveLog = exports.DistributionBundleFilterSensitiveLog = exports.DiskSnapshotInfoFilterSensitiveLog = exports.DiskSnapshotFilterSensitiveLog = exports.DiskInfoFilterSensitiveLog = exports.DiskFilterSensitiveLog = exports.DisableAddOnResultFilterSensitiveLog = exports.DisableAddOnRequestFilterSensitiveLog = exports.DetachStaticIpResultFilterSensitiveLog = exports.DetachStaticIpRequestFilterSensitiveLog = exports.DetachInstancesFromLoadBalancerResultFilterSensitiveLog = exports.DetachInstancesFromLoadBalancerRequestFilterSensitiveLog = exports.DetachDiskResultFilterSensitiveLog = exports.DetachDiskRequestFilterSensitiveLog = exports.DetachCertificateFromDistributionResultFilterSensitiveLog = exports.DetachCertificateFromDistributionRequestFilterSensitiveLog = exports.DeleteRelationalDatabaseSnapshotResultFilterSensitiveLog = exports.DeleteRelationalDatabaseSnapshotRequestFilterSensitiveLog = exports.DeleteRelationalDatabaseResultFilterSensitiveLog = exports.DeleteRelationalDatabaseRequestFilterSensitiveLog = exports.DeleteLoadBalancerTlsCertificateResultFilterSensitiveLog = exports.DeleteLoadBalancerTlsCertificateRequestFilterSensitiveLog = exports.DeleteLoadBalancerResultFilterSensitiveLog = exports.DeleteLoadBalancerRequestFilterSensitiveLog = exports.DeleteKnownHostKeysResultFilterSensitiveLog = exports.DeleteKnownHostKeysRequestFilterSensitiveLog = exports.DeleteKeyPairResultFilterSensitiveLog = exports.DeleteKeyPairRequestFilterSensitiveLog = exports.DeleteInstanceSnapshotResultFilterSensitiveLog = exports.DeleteInstanceSnapshotRequestFilterSensitiveLog = exports.DeleteInstanceResultFilterSensitiveLog = exports.DeleteInstanceRequestFilterSensitiveLog = exports.DeleteDomainEntryResultFilterSensitiveLog = exports.DeleteDomainEntryRequestFilterSensitiveLog = exports.DeleteDomainResultFilterSensitiveLog = exports.DeleteDomainRequestFilterSensitiveLog = exports.DeleteDistributionResultFilterSensitiveLog = exports.DeleteDistributionRequestFilterSensitiveLog = exports.DeleteDiskSnapshotResultFilterSensitiveLog = exports.DeleteDiskSnapshotRequestFilterSensitiveLog = exports.DeleteDiskResultFilterSensitiveLog = exports.DeleteDiskRequestFilterSensitiveLog = exports.DeleteContainerServiceResultFilterSensitiveLog = exports.DeleteContainerServiceRequestFilterSensitiveLog = exports.DeleteContainerImageResultFilterSensitiveLog = exports.DeleteContainerImageRequestFilterSensitiveLog = exports.DeleteContactMethodResultFilterSensitiveLog = exports.DeleteContactMethodRequestFilterSensitiveLog = exports.DeleteCertificateResultFilterSensitiveLog = exports.DeleteCertificateRequestFilterSensitiveLog = void 0;
exports.GetContainerServicesRequestFilterSensitiveLog = exports.GetContainerServicePowersResultFilterSensitiveLog = exports.GetContainerServicePowersRequestFilterSensitiveLog = exports.GetContainerServiceMetricDataResultFilterSensitiveLog = exports.GetContainerServiceMetricDataRequestFilterSensitiveLog = exports.GetContainerServiceDeploymentsResultFilterSensitiveLog = exports.GetContainerServiceDeploymentsRequestFilterSensitiveLog = exports.GetContainerLogResultFilterSensitiveLog = exports.GetContainerLogRequestFilterSensitiveLog = exports.GetContainerImagesResultFilterSensitiveLog = exports.GetContainerImagesRequestFilterSensitiveLog = exports.GetContainerAPIMetadataResultFilterSensitiveLog = exports.GetContainerAPIMetadataRequestFilterSensitiveLog = exports.GetContactMethodsResultFilterSensitiveLog = exports.GetContactMethodsRequestFilterSensitiveLog = exports.GetCloudFormationStackRecordsResultFilterSensitiveLog = exports.GetCloudFormationStackRecordsRequestFilterSensitiveLog = exports.GetCertificatesResultFilterSensitiveLog = exports.GetCertificatesRequestFilterSensitiveLog = exports.GetBundlesResultFilterSensitiveLog = exports.GetBundlesRequestFilterSensitiveLog = exports.GetBucketsResultFilterSensitiveLog = exports.GetBucketsRequestFilterSensitiveLog = exports.GetBucketMetricDataResultFilterSensitiveLog = exports.MetricDatapointFilterSensitiveLog = exports.GetBucketMetricDataRequestFilterSensitiveLog = exports.GetBucketBundlesResultFilterSensitiveLog = exports.GetBucketBundlesRequestFilterSensitiveLog = exports.GetBucketAccessKeysResultFilterSensitiveLog = exports.GetBucketAccessKeysRequestFilterSensitiveLog = exports.GetBlueprintsResultFilterSensitiveLog = exports.GetBlueprintsRequestFilterSensitiveLog = exports.GetAutoSnapshotsResultFilterSensitiveLog = exports.GetAutoSnapshotsRequestFilterSensitiveLog = exports.GetAlarmsResultFilterSensitiveLog = exports.GetAlarmsRequestFilterSensitiveLog = exports.GetActiveNamesResultFilterSensitiveLog = exports.GetActiveNamesRequestFilterSensitiveLog = exports.ExportSnapshotRecordFilterSensitiveLog = exports.ExportSnapshotRecordSourceInfoFilterSensitiveLog = exports.InstanceSnapshotInfoFilterSensitiveLog = exports.ExportSnapshotResultFilterSensitiveLog = exports.ExportSnapshotRequestFilterSensitiveLog = exports.EnableAddOnResultFilterSensitiveLog = exports.EnableAddOnRequestFilterSensitiveLog = exports.DownloadDefaultKeyPairResultFilterSensitiveLog = exports.DownloadDefaultKeyPairRequestFilterSensitiveLog = exports.DomainFilterSensitiveLog = exports.RegisteredDomainDelegationInfoFilterSensitiveLog = exports.R53HostedZoneDeletionStateFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const LightsailServiceException_1 = require("./LightsailServiceException");
class AccessDeniedException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.AccessDeniedException = AccessDeniedException;
var AccessDirection;
(function (AccessDirection) {
    AccessDirection["inbound"] = "inbound";
    AccessDirection["outbound"] = "outbound";
})(AccessDirection = exports.AccessDirection || (exports.AccessDirection = {}));
var StatusType;
(function (StatusType) {
    StatusType["Active"] = "Active";
    StatusType["Inactive"] = "Inactive";
})(StatusType = exports.StatusType || (exports.StatusType = {}));
var AccessType;
(function (AccessType) {
    AccessType["Private"] = "private";
    AccessType["Public"] = "public";
})(AccessType = exports.AccessType || (exports.AccessType = {}));
var BPAStatusMessage;
(function (BPAStatusMessage) {
    BPAStatusMessage["DEFAULTED_FOR_SLR_MISSING"] = "DEFAULTED_FOR_SLR_MISSING";
    BPAStatusMessage["DEFAULTED_FOR_SLR_MISSING_ON_HOLD"] = "DEFAULTED_FOR_SLR_MISSING_ON_HOLD";
    BPAStatusMessage["SYNC_ON_HOLD"] = "SYNC_ON_HOLD";
    BPAStatusMessage["Unknown"] = "Unknown";
})(BPAStatusMessage = exports.BPAStatusMessage || (exports.BPAStatusMessage = {}));
var AccountLevelBpaSyncStatus;
(function (AccountLevelBpaSyncStatus) {
    AccountLevelBpaSyncStatus["Defaulted"] = "Defaulted";
    AccountLevelBpaSyncStatus["Failed"] = "Failed";
    AccountLevelBpaSyncStatus["InSync"] = "InSync";
    AccountLevelBpaSyncStatus["NeverSynced"] = "NeverSynced";
})(AccountLevelBpaSyncStatus = exports.AccountLevelBpaSyncStatus || (exports.AccountLevelBpaSyncStatus = {}));
class AccountSetupInProgressException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "AccountSetupInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccountSetupInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccountSetupInProgressException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.AccountSetupInProgressException = AccountSetupInProgressException;
var AddOnType;
(function (AddOnType) {
    AddOnType["AutoSnapshot"] = "AutoSnapshot";
    AddOnType["StopInstanceOnIdle"] = "StopInstanceOnIdle";
})(AddOnType = exports.AddOnType || (exports.AddOnType = {}));
var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["GreaterThanOrEqualToThreshold"] = "GreaterThanOrEqualToThreshold";
    ComparisonOperator["GreaterThanThreshold"] = "GreaterThanThreshold";
    ComparisonOperator["LessThanOrEqualToThreshold"] = "LessThanOrEqualToThreshold";
    ComparisonOperator["LessThanThreshold"] = "LessThanThreshold";
})(ComparisonOperator = exports.ComparisonOperator || (exports.ComparisonOperator = {}));
var ContactProtocol;
(function (ContactProtocol) {
    ContactProtocol["Email"] = "Email";
    ContactProtocol["SMS"] = "SMS";
})(ContactProtocol = exports.ContactProtocol || (exports.ContactProtocol = {}));
var RegionName;
(function (RegionName) {
    RegionName["AP_NORTHEAST_1"] = "ap-northeast-1";
    RegionName["AP_NORTHEAST_2"] = "ap-northeast-2";
    RegionName["AP_SOUTHEAST_1"] = "ap-southeast-1";
    RegionName["AP_SOUTHEAST_2"] = "ap-southeast-2";
    RegionName["AP_SOUTH_1"] = "ap-south-1";
    RegionName["CA_CENTRAL_1"] = "ca-central-1";
    RegionName["EU_CENTRAL_1"] = "eu-central-1";
    RegionName["EU_NORTH_1"] = "eu-north-1";
    RegionName["EU_WEST_1"] = "eu-west-1";
    RegionName["EU_WEST_2"] = "eu-west-2";
    RegionName["EU_WEST_3"] = "eu-west-3";
    RegionName["US_EAST_1"] = "us-east-1";
    RegionName["US_EAST_2"] = "us-east-2";
    RegionName["US_WEST_1"] = "us-west-1";
    RegionName["US_WEST_2"] = "us-west-2";
})(RegionName = exports.RegionName || (exports.RegionName = {}));
var MetricName;
(function (MetricName) {
    MetricName["BurstCapacityPercentage"] = "BurstCapacityPercentage";
    MetricName["BurstCapacityTime"] = "BurstCapacityTime";
    MetricName["CPUUtilization"] = "CPUUtilization";
    MetricName["ClientTLSNegotiationErrorCount"] = "ClientTLSNegotiationErrorCount";
    MetricName["DatabaseConnections"] = "DatabaseConnections";
    MetricName["DiskQueueDepth"] = "DiskQueueDepth";
    MetricName["FreeStorageSpace"] = "FreeStorageSpace";
    MetricName["HTTPCode_Instance_2XX_Count"] = "HTTPCode_Instance_2XX_Count";
    MetricName["HTTPCode_Instance_3XX_Count"] = "HTTPCode_Instance_3XX_Count";
    MetricName["HTTPCode_Instance_4XX_Count"] = "HTTPCode_Instance_4XX_Count";
    MetricName["HTTPCode_Instance_5XX_Count"] = "HTTPCode_Instance_5XX_Count";
    MetricName["HTTPCode_LB_4XX_Count"] = "HTTPCode_LB_4XX_Count";
    MetricName["HTTPCode_LB_5XX_Count"] = "HTTPCode_LB_5XX_Count";
    MetricName["HealthyHostCount"] = "HealthyHostCount";
    MetricName["InstanceResponseTime"] = "InstanceResponseTime";
    MetricName["NetworkIn"] = "NetworkIn";
    MetricName["NetworkOut"] = "NetworkOut";
    MetricName["NetworkReceiveThroughput"] = "NetworkReceiveThroughput";
    MetricName["NetworkTransmitThroughput"] = "NetworkTransmitThroughput";
    MetricName["RejectedConnectionCount"] = "RejectedConnectionCount";
    MetricName["RequestCount"] = "RequestCount";
    MetricName["StatusCheckFailed"] = "StatusCheckFailed";
    MetricName["StatusCheckFailed_Instance"] = "StatusCheckFailed_Instance";
    MetricName["StatusCheckFailed_System"] = "StatusCheckFailed_System";
    MetricName["UnhealthyHostCount"] = "UnhealthyHostCount";
})(MetricName = exports.MetricName || (exports.MetricName = {}));
var ResourceType;
(function (ResourceType) {
    ResourceType["Alarm"] = "Alarm";
    ResourceType["Bucket"] = "Bucket";
    ResourceType["Certificate"] = "Certificate";
    ResourceType["CloudFormationStackRecord"] = "CloudFormationStackRecord";
    ResourceType["ContactMethod"] = "ContactMethod";
    ResourceType["ContainerService"] = "ContainerService";
    ResourceType["Disk"] = "Disk";
    ResourceType["DiskSnapshot"] = "DiskSnapshot";
    ResourceType["Distribution"] = "Distribution";
    ResourceType["Domain"] = "Domain";
    ResourceType["ExportSnapshotRecord"] = "ExportSnapshotRecord";
    ResourceType["Instance"] = "Instance";
    ResourceType["InstanceSnapshot"] = "InstanceSnapshot";
    ResourceType["KeyPair"] = "KeyPair";
    ResourceType["LoadBalancer"] = "LoadBalancer";
    ResourceType["LoadBalancerTlsCertificate"] = "LoadBalancerTlsCertificate";
    ResourceType["PeeredVpc"] = "PeeredVpc";
    ResourceType["RelationalDatabase"] = "RelationalDatabase";
    ResourceType["RelationalDatabaseSnapshot"] = "RelationalDatabaseSnapshot";
    ResourceType["StaticIp"] = "StaticIp";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
var AlarmState;
(function (AlarmState) {
    AlarmState["ALARM"] = "ALARM";
    AlarmState["INSUFFICIENT_DATA"] = "INSUFFICIENT_DATA";
    AlarmState["OK"] = "OK";
})(AlarmState = exports.AlarmState || (exports.AlarmState = {}));
var MetricStatistic;
(function (MetricStatistic) {
    MetricStatistic["Average"] = "Average";
    MetricStatistic["Maximum"] = "Maximum";
    MetricStatistic["Minimum"] = "Minimum";
    MetricStatistic["SampleCount"] = "SampleCount";
    MetricStatistic["Sum"] = "Sum";
})(MetricStatistic = exports.MetricStatistic || (exports.MetricStatistic = {}));
var TreatMissingData;
(function (TreatMissingData) {
    TreatMissingData["Breaching"] = "breaching";
    TreatMissingData["Ignore"] = "ignore";
    TreatMissingData["Missing"] = "missing";
    TreatMissingData["NotBreaching"] = "notBreaching";
})(TreatMissingData = exports.TreatMissingData || (exports.TreatMissingData = {}));
var MetricUnit;
(function (MetricUnit) {
    MetricUnit["Bits"] = "Bits";
    MetricUnit["BitsSecond"] = "Bits/Second";
    MetricUnit["Bytes"] = "Bytes";
    MetricUnit["BytesSecond"] = "Bytes/Second";
    MetricUnit["Count"] = "Count";
    MetricUnit["CountSecond"] = "Count/Second";
    MetricUnit["Gigabits"] = "Gigabits";
    MetricUnit["GigabitsSecond"] = "Gigabits/Second";
    MetricUnit["Gigabytes"] = "Gigabytes";
    MetricUnit["GigabytesSecond"] = "Gigabytes/Second";
    MetricUnit["Kilobits"] = "Kilobits";
    MetricUnit["KilobitsSecond"] = "Kilobits/Second";
    MetricUnit["Kilobytes"] = "Kilobytes";
    MetricUnit["KilobytesSecond"] = "Kilobytes/Second";
    MetricUnit["Megabits"] = "Megabits";
    MetricUnit["MegabitsSecond"] = "Megabits/Second";
    MetricUnit["Megabytes"] = "Megabytes";
    MetricUnit["MegabytesSecond"] = "Megabytes/Second";
    MetricUnit["Microseconds"] = "Microseconds";
    MetricUnit["Milliseconds"] = "Milliseconds";
    MetricUnit["None"] = "None";
    MetricUnit["Percent"] = "Percent";
    MetricUnit["Seconds"] = "Seconds";
    MetricUnit["Terabits"] = "Terabits";
    MetricUnit["TerabitsSecond"] = "Terabits/Second";
    MetricUnit["Terabytes"] = "Terabytes";
    MetricUnit["TerabytesSecond"] = "Terabytes/Second";
})(MetricUnit = exports.MetricUnit || (exports.MetricUnit = {}));
var OperationType;
(function (OperationType) {
    OperationType["AllocateStaticIp"] = "AllocateStaticIp";
    OperationType["AttachCertificateToDistribution"] = "AttachCertificateToDistribution";
    OperationType["AttachDisk"] = "AttachDisk";
    OperationType["AttachInstancesToLoadBalancer"] = "AttachInstancesToLoadBalancer";
    OperationType["AttachLoadBalancerTlsCertificate"] = "AttachLoadBalancerTlsCertificate";
    OperationType["AttachStaticIp"] = "AttachStaticIp";
    OperationType["CloseInstancePublicPorts"] = "CloseInstancePublicPorts";
    OperationType["CreateBucket"] = "CreateBucket";
    OperationType["CreateBucketAccessKey"] = "CreateBucketAccessKey";
    OperationType["CreateCertificate"] = "CreateCertificate";
    OperationType["CreateContactMethod"] = "CreateContactMethod";
    OperationType["CreateContainerService"] = "CreateContainerService";
    OperationType["CreateContainerServiceDeployment"] = "CreateContainerServiceDeployment";
    OperationType["CreateContainerServiceRegistryLogin"] = "CreateContainerServiceRegistryLogin";
    OperationType["CreateDisk"] = "CreateDisk";
    OperationType["CreateDiskFromSnapshot"] = "CreateDiskFromSnapshot";
    OperationType["CreateDiskSnapshot"] = "CreateDiskSnapshot";
    OperationType["CreateDistribution"] = "CreateDistribution";
    OperationType["CreateDomain"] = "CreateDomain";
    OperationType["CreateInstance"] = "CreateInstance";
    OperationType["CreateInstanceSnapshot"] = "CreateInstanceSnapshot";
    OperationType["CreateInstancesFromSnapshot"] = "CreateInstancesFromSnapshot";
    OperationType["CreateLoadBalancer"] = "CreateLoadBalancer";
    OperationType["CreateLoadBalancerTlsCertificate"] = "CreateLoadBalancerTlsCertificate";
    OperationType["CreateRelationalDatabase"] = "CreateRelationalDatabase";
    OperationType["CreateRelationalDatabaseFromSnapshot"] = "CreateRelationalDatabaseFromSnapshot";
    OperationType["CreateRelationalDatabaseSnapshot"] = "CreateRelationalDatabaseSnapshot";
    OperationType["DeleteAlarm"] = "DeleteAlarm";
    OperationType["DeleteBucket"] = "DeleteBucket";
    OperationType["DeleteBucketAccessKey"] = "DeleteBucketAccessKey";
    OperationType["DeleteCertificate"] = "DeleteCertificate";
    OperationType["DeleteContactMethod"] = "DeleteContactMethod";
    OperationType["DeleteContainerImage"] = "DeleteContainerImage";
    OperationType["DeleteContainerService"] = "DeleteContainerService";
    OperationType["DeleteDisk"] = "DeleteDisk";
    OperationType["DeleteDiskSnapshot"] = "DeleteDiskSnapshot";
    OperationType["DeleteDistribution"] = "DeleteDistribution";
    OperationType["DeleteDomain"] = "DeleteDomain";
    OperationType["DeleteDomainEntry"] = "DeleteDomainEntry";
    OperationType["DeleteInstance"] = "DeleteInstance";
    OperationType["DeleteInstanceSnapshot"] = "DeleteInstanceSnapshot";
    OperationType["DeleteKnownHostKeys"] = "DeleteKnownHostKeys";
    OperationType["DeleteLoadBalancer"] = "DeleteLoadBalancer";
    OperationType["DeleteLoadBalancerTlsCertificate"] = "DeleteLoadBalancerTlsCertificate";
    OperationType["DeleteRelationalDatabase"] = "DeleteRelationalDatabase";
    OperationType["DeleteRelationalDatabaseSnapshot"] = "DeleteRelationalDatabaseSnapshot";
    OperationType["DetachCertificateFromDistribution"] = "DetachCertificateFromDistribution";
    OperationType["DetachDisk"] = "DetachDisk";
    OperationType["DetachInstancesFromLoadBalancer"] = "DetachInstancesFromLoadBalancer";
    OperationType["DetachStaticIp"] = "DetachStaticIp";
    OperationType["DisableAddOn"] = "DisableAddOn";
    OperationType["EnableAddOn"] = "EnableAddOn";
    OperationType["GetAlarms"] = "GetAlarms";
    OperationType["GetContactMethods"] = "GetContactMethods";
    OperationType["OpenInstancePublicPorts"] = "OpenInstancePublicPorts";
    OperationType["PutAlarm"] = "PutAlarm";
    OperationType["PutInstancePublicPorts"] = "PutInstancePublicPorts";
    OperationType["RebootInstance"] = "RebootInstance";
    OperationType["RebootRelationalDatabase"] = "RebootRelationalDatabase";
    OperationType["RegisterContainerImage"] = "RegisterContainerImage";
    OperationType["ReleaseStaticIp"] = "ReleaseStaticIp";
    OperationType["ResetDistributionCache"] = "ResetDistributionCache";
    OperationType["SendContactMethodVerification"] = "SendContactMethodVerification";
    OperationType["SetIpAddressType"] = "SetIpAddressType";
    OperationType["SetResourceAccessForBucket"] = "SetResourceAccessForBucket";
    OperationType["StartGUISession"] = "StartGUISession";
    OperationType["StartInstance"] = "StartInstance";
    OperationType["StartRelationalDatabase"] = "StartRelationalDatabase";
    OperationType["StopGUISession"] = "StopGUISession";
    OperationType["StopInstance"] = "StopInstance";
    OperationType["StopRelationalDatabase"] = "StopRelationalDatabase";
    OperationType["TestAlarm"] = "TestAlarm";
    OperationType["UpdateBucket"] = "UpdateBucket";
    OperationType["UpdateBucketBundle"] = "UpdateBucketBundle";
    OperationType["UpdateContainerService"] = "UpdateContainerService";
    OperationType["UpdateDistribution"] = "UpdateDistribution";
    OperationType["UpdateDistributionBundle"] = "UpdateDistributionBundle";
    OperationType["UpdateDomainEntry"] = "UpdateDomainEntry";
    OperationType["UpdateInstanceMetadataOptions"] = "UpdateInstanceMetadataOptions";
    OperationType["UpdateLoadBalancerAttribute"] = "UpdateLoadBalancerAttribute";
    OperationType["UpdateRelationalDatabase"] = "UpdateRelationalDatabase";
    OperationType["UpdateRelationalDatabaseParameters"] = "UpdateRelationalDatabaseParameters";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
var OperationStatus;
(function (OperationStatus) {
    OperationStatus["Completed"] = "Completed";
    OperationStatus["Failed"] = "Failed";
    OperationStatus["NotStarted"] = "NotStarted";
    OperationStatus["Started"] = "Started";
    OperationStatus["Succeeded"] = "Succeeded";
})(OperationStatus = exports.OperationStatus || (exports.OperationStatus = {}));
class InvalidInputException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "InvalidInputException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidInputException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidInputException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.InvalidInputException = InvalidInputException;
class NotFoundException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.NotFoundException = NotFoundException;
class OperationFailureException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "OperationFailureException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationFailureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationFailureException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.OperationFailureException = OperationFailureException;
class ServiceException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "ServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.ServiceException = ServiceException;
class UnauthenticatedException extends LightsailServiceException_1.LightsailServiceException {
    constructor(opts) {
        super({
            name: "UnauthenticatedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthenticatedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthenticatedException.prototype);
        this.code = opts.code;
        this.docs = opts.docs;
        this.tip = opts.tip;
    }
}
exports.UnauthenticatedException = UnauthenticatedException;
var AppCategory;
(function (AppCategory) {
    AppCategory["LfR"] = "LfR";
})(AppCategory = exports.AppCategory || (exports.AppCategory = {}));
var AutoMountStatus;
(function (AutoMountStatus) {
    AutoMountStatus["Failed"] = "Failed";
    AutoMountStatus["Mounted"] = "Mounted";
    AutoMountStatus["NotMounted"] = "NotMounted";
    AutoMountStatus["Pending"] = "Pending";
})(AutoMountStatus = exports.AutoMountStatus || (exports.AutoMountStatus = {}));
var AutoSnapshotStatus;
(function (AutoSnapshotStatus) {
    AutoSnapshotStatus["FAILED"] = "Failed";
    AutoSnapshotStatus["IN_PROGRESS"] = "InProgress";
    AutoSnapshotStatus["NOT_FOUND"] = "NotFound";
    AutoSnapshotStatus["SUCCESS"] = "Success";
})(AutoSnapshotStatus = exports.AutoSnapshotStatus || (exports.AutoSnapshotStatus = {}));
var BehaviorEnum;
(function (BehaviorEnum) {
    BehaviorEnum["CacheSetting"] = "cache";
    BehaviorEnum["DontCacheSetting"] = "dont-cache";
})(BehaviorEnum = exports.BehaviorEnum || (exports.BehaviorEnum = {}));
var InstancePlatform;
(function (InstancePlatform) {
    InstancePlatform["LinuxUnix"] = "LINUX_UNIX";
    InstancePlatform["Windows"] = "WINDOWS";
})(InstancePlatform = exports.InstancePlatform || (exports.InstancePlatform = {}));
var BlueprintType;
(function (BlueprintType) {
    BlueprintType["app"] = "app";
    BlueprintType["os"] = "os";
})(BlueprintType = exports.BlueprintType || (exports.BlueprintType = {}));
var BucketMetricName;
(function (BucketMetricName) {
    BucketMetricName["BucketSizeBytes"] = "BucketSizeBytes";
    BucketMetricName["NumberOfObjects"] = "NumberOfObjects";
})(BucketMetricName = exports.BucketMetricName || (exports.BucketMetricName = {}));
var ForwardValues;
(function (ForwardValues) {
    ForwardValues["all"] = "all";
    ForwardValues["allowList"] = "allow-list";
    ForwardValues["none"] = "none";
})(ForwardValues = exports.ForwardValues || (exports.ForwardValues = {}));
var HeaderEnum;
(function (HeaderEnum) {
    HeaderEnum["accept"] = "Accept";
    HeaderEnum["acceptCharset"] = "Accept-Charset";
    HeaderEnum["acceptDatetime"] = "Accept-Datetime";
    HeaderEnum["acceptEncoding"] = "Accept-Encoding";
    HeaderEnum["acceptLanguage"] = "Accept-Language";
    HeaderEnum["authorization"] = "Authorization";
    HeaderEnum["cloudFrontForwardedProto"] = "CloudFront-Forwarded-Proto";
    HeaderEnum["cloudFrontIsDesktopViewer"] = "CloudFront-Is-Desktop-Viewer";
    HeaderEnum["cloudFrontIsMobileViewer"] = "CloudFront-Is-Mobile-Viewer";
    HeaderEnum["cloudFrontIsSmartTVViewer"] = "CloudFront-Is-SmartTV-Viewer";
    HeaderEnum["cloudFrontIsTabletViewer"] = "CloudFront-Is-Tablet-Viewer";
    HeaderEnum["cloudFrontViewerCountry"] = "CloudFront-Viewer-Country";
    HeaderEnum["host"] = "Host";
    HeaderEnum["origin"] = "Origin";
    HeaderEnum["referer"] = "Referer";
})(HeaderEnum = exports.HeaderEnum || (exports.HeaderEnum = {}));
var DnsRecordCreationStateCode;
(function (DnsRecordCreationStateCode) {
    DnsRecordCreationStateCode["Failed"] = "FAILED";
    DnsRecordCreationStateCode["Started"] = "STARTED";
    DnsRecordCreationStateCode["Succeeded"] = "SUCCEEDED";
})(DnsRecordCreationStateCode = exports.DnsRecordCreationStateCode || (exports.DnsRecordCreationStateCode = {}));
var CertificateDomainValidationStatus;
(function (CertificateDomainValidationStatus) {
    CertificateDomainValidationStatus["Failed"] = "FAILED";
    CertificateDomainValidationStatus["PendingValidation"] = "PENDING_VALIDATION";
    CertificateDomainValidationStatus["Success"] = "SUCCESS";
})(CertificateDomainValidationStatus = exports.CertificateDomainValidationStatus || (exports.CertificateDomainValidationStatus = {}));
var RenewalStatus;
(function (RenewalStatus) {
    RenewalStatus["Failed"] = "Failed";
    RenewalStatus["PendingAutoRenewal"] = "PendingAutoRenewal";
    RenewalStatus["PendingValidation"] = "PendingValidation";
    RenewalStatus["Success"] = "Success";
})(RenewalStatus = exports.RenewalStatus || (exports.RenewalStatus = {}));
var CertificateStatus;
(function (CertificateStatus) {
    CertificateStatus["Expired"] = "EXPIRED";
    CertificateStatus["Failed"] = "FAILED";
    CertificateStatus["Inactive"] = "INACTIVE";
    CertificateStatus["Issued"] = "ISSUED";
    CertificateStatus["PendingValidation"] = "PENDING_VALIDATION";
    CertificateStatus["Revoked"] = "REVOKED";
    CertificateStatus["ValidationTimedOut"] = "VALIDATION_TIMED_OUT";
})(CertificateStatus = exports.CertificateStatus || (exports.CertificateStatus = {}));
var NetworkProtocol;
(function (NetworkProtocol) {
    NetworkProtocol["ALL"] = "all";
    NetworkProtocol["ICMP"] = "icmp";
    NetworkProtocol["TCP"] = "tcp";
    NetworkProtocol["UDP"] = "udp";
})(NetworkProtocol = exports.NetworkProtocol || (exports.NetworkProtocol = {}));
var CloudFormationStackRecordSourceType;
(function (CloudFormationStackRecordSourceType) {
    CloudFormationStackRecordSourceType["ExportSnapshotRecord"] = "ExportSnapshotRecord";
})(CloudFormationStackRecordSourceType = exports.CloudFormationStackRecordSourceType || (exports.CloudFormationStackRecordSourceType = {}));
var RecordState;
(function (RecordState) {
    RecordState["Failed"] = "Failed";
    RecordState["Started"] = "Started";
    RecordState["Succeeded"] = "Succeeded";
})(RecordState = exports.RecordState || (exports.RecordState = {}));
var ContactMethodStatus;
(function (ContactMethodStatus) {
    ContactMethodStatus["Invalid"] = "Invalid";
    ContactMethodStatus["PendingVerification"] = "PendingVerification";
    ContactMethodStatus["Valid"] = "Valid";
})(ContactMethodStatus = exports.ContactMethodStatus || (exports.ContactMethodStatus = {}));
var ContactMethodVerificationProtocol;
(function (ContactMethodVerificationProtocol) {
    ContactMethodVerificationProtocol["Email"] = "Email";
})(ContactMethodVerificationProtocol = exports.ContactMethodVerificationProtocol || (exports.ContactMethodVerificationProtocol = {}));
var ContainerServiceProtocol;
(function (ContainerServiceProtocol) {
    ContainerServiceProtocol["HTTP"] = "HTTP";
    ContainerServiceProtocol["HTTPS"] = "HTTPS";
    ContainerServiceProtocol["TCP"] = "TCP";
    ContainerServiceProtocol["UDP"] = "UDP";
})(ContainerServiceProtocol = exports.ContainerServiceProtocol || (exports.ContainerServiceProtocol = {}));
var ContainerServiceDeploymentState;
(function (ContainerServiceDeploymentState) {
    ContainerServiceDeploymentState["ACTIVATING"] = "ACTIVATING";
    ContainerServiceDeploymentState["ACTIVE"] = "ACTIVE";
    ContainerServiceDeploymentState["FAILED"] = "FAILED";
    ContainerServiceDeploymentState["INACTIVE"] = "INACTIVE";
})(ContainerServiceDeploymentState = exports.ContainerServiceDeploymentState || (exports.ContainerServiceDeploymentState = {}));
var ContainerServicePowerName;
(function (ContainerServicePowerName) {
    ContainerServicePowerName["large"] = "large";
    ContainerServicePowerName["medium"] = "medium";
    ContainerServicePowerName["micro"] = "micro";
    ContainerServicePowerName["nano"] = "nano";
    ContainerServicePowerName["small"] = "small";
    ContainerServicePowerName["xlarge"] = "xlarge";
})(ContainerServicePowerName = exports.ContainerServicePowerName || (exports.ContainerServicePowerName = {}));
var ContainerServiceState;
(function (ContainerServiceState) {
    ContainerServiceState["DELETING"] = "DELETING";
    ContainerServiceState["DEPLOYING"] = "DEPLOYING";
    ContainerServiceState["DISABLED"] = "DISABLED";
    ContainerServiceState["PENDING"] = "PENDING";
    ContainerServiceState["READY"] = "READY";
    ContainerServiceState["RUNNING"] = "RUNNING";
    ContainerServiceState["UPDATING"] = "UPDATING";
})(ContainerServiceState = exports.ContainerServiceState || (exports.ContainerServiceState = {}));
var ContainerServiceStateDetailCode;
(function (ContainerServiceStateDetailCode) {
    ContainerServiceStateDetailCode["ACTIVATING_DEPLOYMENT"] = "ACTIVATING_DEPLOYMENT";
    ContainerServiceStateDetailCode["CERTIFICATE_LIMIT_EXCEEDED"] = "CERTIFICATE_LIMIT_EXCEEDED";
    ContainerServiceStateDetailCode["CREATING_DEPLOYMENT"] = "CREATING_DEPLOYMENT";
    ContainerServiceStateDetailCode["CREATING_NETWORK_INFRASTRUCTURE"] = "CREATING_NETWORK_INFRASTRUCTURE";
    ContainerServiceStateDetailCode["CREATING_SYSTEM_RESOURCES"] = "CREATING_SYSTEM_RESOURCES";
    ContainerServiceStateDetailCode["EVALUATING_HEALTH_CHECK"] = "EVALUATING_HEALTH_CHECK";
    ContainerServiceStateDetailCode["PROVISIONING_CERTIFICATE"] = "PROVISIONING_CERTIFICATE";
    ContainerServiceStateDetailCode["PROVISIONING_SERVICE"] = "PROVISIONING_SERVICE";
    ContainerServiceStateDetailCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
})(ContainerServiceStateDetailCode = exports.ContainerServiceStateDetailCode || (exports.ContainerServiceStateDetailCode = {}));
var ContainerServiceMetricName;
(function (ContainerServiceMetricName) {
    ContainerServiceMetricName["CPUUtilization"] = "CPUUtilization";
    ContainerServiceMetricName["MemoryUtilization"] = "MemoryUtilization";
})(ContainerServiceMetricName = exports.ContainerServiceMetricName || (exports.ContainerServiceMetricName = {}));
var Currency;
(function (Currency) {
    Currency["USD"] = "USD";
})(Currency = exports.Currency || (exports.Currency = {}));
var PricingUnit;
(function (PricingUnit) {
    PricingUnit["Bundles"] = "Bundles";
    PricingUnit["GB"] = "GB";
    PricingUnit["GBMo"] = "GB-Mo";
    PricingUnit["Hrs"] = "Hrs";
    PricingUnit["Queries"] = "Queries";
})(PricingUnit = exports.PricingUnit || (exports.PricingUnit = {}));
var PortInfoSourceType;
(function (PortInfoSourceType) {
    PortInfoSourceType["Closed"] = "CLOSED";
    PortInfoSourceType["Default"] = "DEFAULT";
    PortInfoSourceType["Instance"] = "INSTANCE";
    PortInfoSourceType["None"] = "NONE";
})(PortInfoSourceType = exports.PortInfoSourceType || (exports.PortInfoSourceType = {}));
var IpAddressType;
(function (IpAddressType) {
    IpAddressType["DUALSTACK"] = "dualstack";
    IpAddressType["IPV4"] = "ipv4";
})(IpAddressType = exports.IpAddressType || (exports.IpAddressType = {}));
var OriginProtocolPolicyEnum;
(function (OriginProtocolPolicyEnum) {
    OriginProtocolPolicyEnum["HTTPOnly"] = "http-only";
    OriginProtocolPolicyEnum["HTTPSOnly"] = "https-only";
})(OriginProtocolPolicyEnum = exports.OriginProtocolPolicyEnum || (exports.OriginProtocolPolicyEnum = {}));
var Status;
(function (Status) {
    Status["FailedInstanceCreation"] = "failedInstanceCreation";
    Status["FailedStartingGUISession"] = "failedStartingGUISession";
    Status["FailedStoppingGUISession"] = "failedStoppingGUISession";
    Status["NotStarted"] = "notStarted";
    Status["SettingUpInstance"] = "settingUpInstance";
    Status["StartExpired"] = "startExpired";
    Status["Started"] = "started";
    Status["Starting"] = "starting";
    Status["Stopped"] = "stopped";
    Status["Stopping"] = "stopping";
})(Status = exports.Status || (exports.Status = {}));
var DiskState;
(function (DiskState) {
    DiskState["Available"] = "available";
    DiskState["Error"] = "error";
    DiskState["InUse"] = "in-use";
    DiskState["Pending"] = "pending";
    DiskState["Unknown"] = "unknown";
})(DiskState = exports.DiskState || (exports.DiskState = {}));
var DiskSnapshotState;
(function (DiskSnapshotState) {
    DiskSnapshotState["Completed"] = "completed";
    DiskSnapshotState["Error"] = "error";
    DiskSnapshotState["Pending"] = "pending";
    DiskSnapshotState["Unknown"] = "unknown";
})(DiskSnapshotState = exports.DiskSnapshotState || (exports.DiskSnapshotState = {}));
var DistributionMetricName;
(function (DistributionMetricName) {
    DistributionMetricName["BytesDownloaded"] = "BytesDownloaded";
    DistributionMetricName["BytesUploaded"] = "BytesUploaded";
    DistributionMetricName["Http4xxErrorRate"] = "Http4xxErrorRate";
    DistributionMetricName["Http5xxErrorRate"] = "Http5xxErrorRate";
    DistributionMetricName["Requests"] = "Requests";
    DistributionMetricName["TotalErrorRate"] = "TotalErrorRate";
})(DistributionMetricName = exports.DistributionMetricName || (exports.DistributionMetricName = {}));
var NameServersUpdateStateCode;
(function (NameServersUpdateStateCode) {
    NameServersUpdateStateCode["Failed"] = "FAILED";
    NameServersUpdateStateCode["Pending"] = "PENDING";
    NameServersUpdateStateCode["Started"] = "STARTED";
    NameServersUpdateStateCode["Succeeded"] = "SUCCEEDED";
})(NameServersUpdateStateCode = exports.NameServersUpdateStateCode || (exports.NameServersUpdateStateCode = {}));
var R53HostedZoneDeletionStateCode;
(function (R53HostedZoneDeletionStateCode) {
    R53HostedZoneDeletionStateCode["Failed"] = "FAILED";
    R53HostedZoneDeletionStateCode["Pending"] = "PENDING";
    R53HostedZoneDeletionStateCode["Started"] = "STARTED";
    R53HostedZoneDeletionStateCode["Succeeded"] = "SUCCEEDED";
})(R53HostedZoneDeletionStateCode = exports.R53HostedZoneDeletionStateCode || (exports.R53HostedZoneDeletionStateCode = {}));
var ExportSnapshotRecordSourceType;
(function (ExportSnapshotRecordSourceType) {
    ExportSnapshotRecordSourceType["DiskSnapshot"] = "DiskSnapshot";
    ExportSnapshotRecordSourceType["InstanceSnapshot"] = "InstanceSnapshot";
})(ExportSnapshotRecordSourceType = exports.ExportSnapshotRecordSourceType || (exports.ExportSnapshotRecordSourceType = {}));
const AccessKeyLastUsedFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccessKeyLastUsedFilterSensitiveLog = AccessKeyLastUsedFilterSensitiveLog;
const AccessKeyFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.accessKeyId && { accessKeyId: smithy_client_1.SENSITIVE_STRING }),
});
exports.AccessKeyFilterSensitiveLog = AccessKeyFilterSensitiveLog;
const ResourceReceivingAccessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceReceivingAccessFilterSensitiveLog = ResourceReceivingAccessFilterSensitiveLog;
const AccessRulesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccessRulesFilterSensitiveLog = AccessRulesFilterSensitiveLog;
const AccountLevelBpaSyncFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountLevelBpaSyncFilterSensitiveLog = AccountLevelBpaSyncFilterSensitiveLog;
const AddOnFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddOnFilterSensitiveLog = AddOnFilterSensitiveLog;
const AutoSnapshotAddOnRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoSnapshotAddOnRequestFilterSensitiveLog = AutoSnapshotAddOnRequestFilterSensitiveLog;
const StopInstanceOnIdleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopInstanceOnIdleRequestFilterSensitiveLog = StopInstanceOnIdleRequestFilterSensitiveLog;
const AddOnRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddOnRequestFilterSensitiveLog = AddOnRequestFilterSensitiveLog;
const ResourceLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceLocationFilterSensitiveLog = ResourceLocationFilterSensitiveLog;
const MonitoredResourceInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MonitoredResourceInfoFilterSensitiveLog = MonitoredResourceInfoFilterSensitiveLog;
const AlarmFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AlarmFilterSensitiveLog = AlarmFilterSensitiveLog;
const AllocateStaticIpRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateStaticIpRequestFilterSensitiveLog = AllocateStaticIpRequestFilterSensitiveLog;
const OperationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OperationFilterSensitiveLog = OperationFilterSensitiveLog;
const AllocateStaticIpResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllocateStaticIpResultFilterSensitiveLog = AllocateStaticIpResultFilterSensitiveLog;
const AttachCertificateToDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachCertificateToDistributionRequestFilterSensitiveLog = AttachCertificateToDistributionRequestFilterSensitiveLog;
const AttachCertificateToDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachCertificateToDistributionResultFilterSensitiveLog = AttachCertificateToDistributionResultFilterSensitiveLog;
const AttachDiskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachDiskRequestFilterSensitiveLog = AttachDiskRequestFilterSensitiveLog;
const AttachDiskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachDiskResultFilterSensitiveLog = AttachDiskResultFilterSensitiveLog;
const AttachedDiskFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachedDiskFilterSensitiveLog = AttachedDiskFilterSensitiveLog;
const DiskMapFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DiskMapFilterSensitiveLog = DiskMapFilterSensitiveLog;
const AttachInstancesToLoadBalancerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachInstancesToLoadBalancerRequestFilterSensitiveLog = AttachInstancesToLoadBalancerRequestFilterSensitiveLog;
const AttachInstancesToLoadBalancerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachInstancesToLoadBalancerResultFilterSensitiveLog = AttachInstancesToLoadBalancerResultFilterSensitiveLog;
const AttachLoadBalancerTlsCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancerTlsCertificateRequestFilterSensitiveLog = AttachLoadBalancerTlsCertificateRequestFilterSensitiveLog;
const AttachLoadBalancerTlsCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancerTlsCertificateResultFilterSensitiveLog = AttachLoadBalancerTlsCertificateResultFilterSensitiveLog;
const AttachStaticIpRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachStaticIpRequestFilterSensitiveLog = AttachStaticIpRequestFilterSensitiveLog;
const AttachStaticIpResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachStaticIpResultFilterSensitiveLog = AttachStaticIpResultFilterSensitiveLog;
const AutoSnapshotDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoSnapshotDetailsFilterSensitiveLog = AutoSnapshotDetailsFilterSensitiveLog;
const AvailabilityZoneFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AvailabilityZoneFilterSensitiveLog = AvailabilityZoneFilterSensitiveLog;
const BlueprintFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BlueprintFilterSensitiveLog = BlueprintFilterSensitiveLog;
const BucketAccessLogConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BucketAccessLogConfigFilterSensitiveLog = BucketAccessLogConfigFilterSensitiveLog;
const BucketStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BucketStateFilterSensitiveLog = BucketStateFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const BucketFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BucketFilterSensitiveLog = BucketFilterSensitiveLog;
const BucketBundleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BucketBundleFilterSensitiveLog = BucketBundleFilterSensitiveLog;
const BundleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BundleFilterSensitiveLog = BundleFilterSensitiveLog;
const CacheBehaviorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CacheBehaviorFilterSensitiveLog = CacheBehaviorFilterSensitiveLog;
const CacheBehaviorPerPathFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CacheBehaviorPerPathFilterSensitiveLog = CacheBehaviorPerPathFilterSensitiveLog;
const CookieObjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CookieObjectFilterSensitiveLog = CookieObjectFilterSensitiveLog;
const HeaderObjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HeaderObjectFilterSensitiveLog = HeaderObjectFilterSensitiveLog;
const QueryStringObjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryStringObjectFilterSensitiveLog = QueryStringObjectFilterSensitiveLog;
const CacheSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CacheSettingsFilterSensitiveLog = CacheSettingsFilterSensitiveLog;
const DnsRecordCreationStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DnsRecordCreationStateFilterSensitiveLog = DnsRecordCreationStateFilterSensitiveLog;
const ResourceRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceRecordFilterSensitiveLog = ResourceRecordFilterSensitiveLog;
const DomainValidationRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DomainValidationRecordFilterSensitiveLog = DomainValidationRecordFilterSensitiveLog;
const RenewalSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RenewalSummaryFilterSensitiveLog = RenewalSummaryFilterSensitiveLog;
const CertificateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CertificateFilterSensitiveLog = CertificateFilterSensitiveLog;
const CertificateSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CertificateSummaryFilterSensitiveLog = CertificateSummaryFilterSensitiveLog;
const PortInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PortInfoFilterSensitiveLog = PortInfoFilterSensitiveLog;
const CloseInstancePublicPortsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloseInstancePublicPortsRequestFilterSensitiveLog = CloseInstancePublicPortsRequestFilterSensitiveLog;
const CloseInstancePublicPortsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloseInstancePublicPortsResultFilterSensitiveLog = CloseInstancePublicPortsResultFilterSensitiveLog;
const DestinationInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DestinationInfoFilterSensitiveLog = DestinationInfoFilterSensitiveLog;
const CloudFormationStackRecordSourceInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudFormationStackRecordSourceInfoFilterSensitiveLog = CloudFormationStackRecordSourceInfoFilterSensitiveLog;
const CloudFormationStackRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudFormationStackRecordFilterSensitiveLog = CloudFormationStackRecordFilterSensitiveLog;
const ContactMethodFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContactMethodFilterSensitiveLog = ContactMethodFilterSensitiveLog;
const ContainerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerFilterSensitiveLog = ContainerFilterSensitiveLog;
const ContainerImageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerImageFilterSensitiveLog = ContainerImageFilterSensitiveLog;
const ContainerServiceHealthCheckConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceHealthCheckConfigFilterSensitiveLog = ContainerServiceHealthCheckConfigFilterSensitiveLog;
const ContainerServiceEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceEndpointFilterSensitiveLog = ContainerServiceEndpointFilterSensitiveLog;
const ContainerServiceDeploymentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceDeploymentFilterSensitiveLog = ContainerServiceDeploymentFilterSensitiveLog;
const ContainerServiceECRImagePullerRoleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceECRImagePullerRoleFilterSensitiveLog = ContainerServiceECRImagePullerRoleFilterSensitiveLog;
const PrivateRegistryAccessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PrivateRegistryAccessFilterSensitiveLog = PrivateRegistryAccessFilterSensitiveLog;
const ContainerServiceStateDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceStateDetailFilterSensitiveLog = ContainerServiceStateDetailFilterSensitiveLog;
const ContainerServiceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceFilterSensitiveLog = ContainerServiceFilterSensitiveLog;
const EndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointRequestFilterSensitiveLog = EndpointRequestFilterSensitiveLog;
const ContainerServiceDeploymentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceDeploymentRequestFilterSensitiveLog = ContainerServiceDeploymentRequestFilterSensitiveLog;
const ContainerServiceECRImagePullerRoleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceECRImagePullerRoleRequestFilterSensitiveLog = ContainerServiceECRImagePullerRoleRequestFilterSensitiveLog;
const ContainerServiceLogEventFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceLogEventFilterSensitiveLog = ContainerServiceLogEventFilterSensitiveLog;
const ContainerServicePowerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServicePowerFilterSensitiveLog = ContainerServicePowerFilterSensitiveLog;
const ContainerServiceRegistryLoginFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServiceRegistryLoginFilterSensitiveLog = ContainerServiceRegistryLoginFilterSensitiveLog;
const ContainerServicesListResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContainerServicesListResultFilterSensitiveLog = ContainerServicesListResultFilterSensitiveLog;
const CopySnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopySnapshotRequestFilterSensitiveLog = CopySnapshotRequestFilterSensitiveLog;
const CopySnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopySnapshotResultFilterSensitiveLog = CopySnapshotResultFilterSensitiveLog;
const TimePeriodFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimePeriodFilterSensitiveLog = TimePeriodFilterSensitiveLog;
const EstimateByTimeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EstimateByTimeFilterSensitiveLog = EstimateByTimeFilterSensitiveLog;
const CostEstimateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CostEstimateFilterSensitiveLog = CostEstimateFilterSensitiveLog;
const CreateBucketRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBucketRequestFilterSensitiveLog = CreateBucketRequestFilterSensitiveLog;
const CreateBucketResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBucketResultFilterSensitiveLog = CreateBucketResultFilterSensitiveLog;
const CreateBucketAccessKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBucketAccessKeyRequestFilterSensitiveLog = CreateBucketAccessKeyRequestFilterSensitiveLog;
const CreateBucketAccessKeyResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.accessKey && { accessKey: (0, exports.AccessKeyFilterSensitiveLog)(obj.accessKey) }),
});
exports.CreateBucketAccessKeyResultFilterSensitiveLog = CreateBucketAccessKeyResultFilterSensitiveLog;
const CreateCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCertificateRequestFilterSensitiveLog = CreateCertificateRequestFilterSensitiveLog;
const CreateCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCertificateResultFilterSensitiveLog = CreateCertificateResultFilterSensitiveLog;
const InstanceEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceEntryFilterSensitiveLog = InstanceEntryFilterSensitiveLog;
const CreateCloudFormationStackRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCloudFormationStackRequestFilterSensitiveLog = CreateCloudFormationStackRequestFilterSensitiveLog;
const CreateCloudFormationStackResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCloudFormationStackResultFilterSensitiveLog = CreateCloudFormationStackResultFilterSensitiveLog;
const CreateContactMethodRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContactMethodRequestFilterSensitiveLog = CreateContactMethodRequestFilterSensitiveLog;
const CreateContactMethodResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContactMethodResultFilterSensitiveLog = CreateContactMethodResultFilterSensitiveLog;
const PrivateRegistryAccessRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PrivateRegistryAccessRequestFilterSensitiveLog = PrivateRegistryAccessRequestFilterSensitiveLog;
const CreateContainerServiceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceRequestFilterSensitiveLog = CreateContainerServiceRequestFilterSensitiveLog;
const CreateContainerServiceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceResultFilterSensitiveLog = CreateContainerServiceResultFilterSensitiveLog;
const CreateContainerServiceDeploymentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceDeploymentRequestFilterSensitiveLog = CreateContainerServiceDeploymentRequestFilterSensitiveLog;
const CreateContainerServiceDeploymentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceDeploymentResultFilterSensitiveLog = CreateContainerServiceDeploymentResultFilterSensitiveLog;
const CreateContainerServiceRegistryLoginRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceRegistryLoginRequestFilterSensitiveLog = CreateContainerServiceRegistryLoginRequestFilterSensitiveLog;
const CreateContainerServiceRegistryLoginResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContainerServiceRegistryLoginResultFilterSensitiveLog = CreateContainerServiceRegistryLoginResultFilterSensitiveLog;
const CreateDiskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskRequestFilterSensitiveLog = CreateDiskRequestFilterSensitiveLog;
const CreateDiskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskResultFilterSensitiveLog = CreateDiskResultFilterSensitiveLog;
const CreateDiskFromSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskFromSnapshotRequestFilterSensitiveLog = CreateDiskFromSnapshotRequestFilterSensitiveLog;
const CreateDiskFromSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskFromSnapshotResultFilterSensitiveLog = CreateDiskFromSnapshotResultFilterSensitiveLog;
const CreateDiskSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskSnapshotRequestFilterSensitiveLog = CreateDiskSnapshotRequestFilterSensitiveLog;
const CreateDiskSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDiskSnapshotResultFilterSensitiveLog = CreateDiskSnapshotResultFilterSensitiveLog;
const InputOriginFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InputOriginFilterSensitiveLog = InputOriginFilterSensitiveLog;
const CreateDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDistributionRequestFilterSensitiveLog = CreateDistributionRequestFilterSensitiveLog;
const OriginFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginFilterSensitiveLog = OriginFilterSensitiveLog;
const LightsailDistributionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LightsailDistributionFilterSensitiveLog = LightsailDistributionFilterSensitiveLog;
const CreateDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDistributionResultFilterSensitiveLog = CreateDistributionResultFilterSensitiveLog;
const CreateDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainRequestFilterSensitiveLog = CreateDomainRequestFilterSensitiveLog;
const CreateDomainResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainResultFilterSensitiveLog = CreateDomainResultFilterSensitiveLog;
const DomainEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DomainEntryFilterSensitiveLog = DomainEntryFilterSensitiveLog;
const CreateDomainEntryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainEntryRequestFilterSensitiveLog = CreateDomainEntryRequestFilterSensitiveLog;
const CreateDomainEntryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainEntryResultFilterSensitiveLog = CreateDomainEntryResultFilterSensitiveLog;
const CreateGUISessionAccessDetailsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGUISessionAccessDetailsRequestFilterSensitiveLog = CreateGUISessionAccessDetailsRequestFilterSensitiveLog;
const SessionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: smithy_client_1.SENSITIVE_STRING }),
});
exports.SessionFilterSensitiveLog = SessionFilterSensitiveLog;
const CreateGUISessionAccessDetailsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.sessions && { sessions: obj.sessions.map((item) => (0, exports.SessionFilterSensitiveLog)(item)) }),
});
exports.CreateGUISessionAccessDetailsResultFilterSensitiveLog = CreateGUISessionAccessDetailsResultFilterSensitiveLog;
const CreateInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstancesRequestFilterSensitiveLog = CreateInstancesRequestFilterSensitiveLog;
const CreateInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstancesResultFilterSensitiveLog = CreateInstancesResultFilterSensitiveLog;
const CreateInstancesFromSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstancesFromSnapshotRequestFilterSensitiveLog = CreateInstancesFromSnapshotRequestFilterSensitiveLog;
const CreateInstancesFromSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstancesFromSnapshotResultFilterSensitiveLog = CreateInstancesFromSnapshotResultFilterSensitiveLog;
const CreateInstanceSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstanceSnapshotRequestFilterSensitiveLog = CreateInstanceSnapshotRequestFilterSensitiveLog;
const CreateInstanceSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInstanceSnapshotResultFilterSensitiveLog = CreateInstanceSnapshotResultFilterSensitiveLog;
const CreateKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeyPairRequestFilterSensitiveLog = CreateKeyPairRequestFilterSensitiveLog;
const KeyPairFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeyPairFilterSensitiveLog = KeyPairFilterSensitiveLog;
const CreateKeyPairResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeyPairResultFilterSensitiveLog = CreateKeyPairResultFilterSensitiveLog;
const CreateLoadBalancerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateLoadBalancerRequestFilterSensitiveLog = CreateLoadBalancerRequestFilterSensitiveLog;
const CreateLoadBalancerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateLoadBalancerResultFilterSensitiveLog = CreateLoadBalancerResultFilterSensitiveLog;
const CreateLoadBalancerTlsCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateLoadBalancerTlsCertificateRequestFilterSensitiveLog = CreateLoadBalancerTlsCertificateRequestFilterSensitiveLog;
const CreateLoadBalancerTlsCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateLoadBalancerTlsCertificateResultFilterSensitiveLog = CreateLoadBalancerTlsCertificateResultFilterSensitiveLog;
const CreateRelationalDatabaseRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.masterUserPassword && { masterUserPassword: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateRelationalDatabaseRequestFilterSensitiveLog = CreateRelationalDatabaseRequestFilterSensitiveLog;
const CreateRelationalDatabaseResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRelationalDatabaseResultFilterSensitiveLog = CreateRelationalDatabaseResultFilterSensitiveLog;
const CreateRelationalDatabaseFromSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRelationalDatabaseFromSnapshotRequestFilterSensitiveLog = CreateRelationalDatabaseFromSnapshotRequestFilterSensitiveLog;
const CreateRelationalDatabaseFromSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRelationalDatabaseFromSnapshotResultFilterSensitiveLog = CreateRelationalDatabaseFromSnapshotResultFilterSensitiveLog;
const CreateRelationalDatabaseSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRelationalDatabaseSnapshotRequestFilterSensitiveLog = CreateRelationalDatabaseSnapshotRequestFilterSensitiveLog;
const CreateRelationalDatabaseSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRelationalDatabaseSnapshotResultFilterSensitiveLog = CreateRelationalDatabaseSnapshotResultFilterSensitiveLog;
const DeleteAlarmRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAlarmRequestFilterSensitiveLog = DeleteAlarmRequestFilterSensitiveLog;
const DeleteAlarmResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAlarmResultFilterSensitiveLog = DeleteAlarmResultFilterSensitiveLog;
const DeleteAutoSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAutoSnapshotRequestFilterSensitiveLog = DeleteAutoSnapshotRequestFilterSensitiveLog;
const DeleteAutoSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAutoSnapshotResultFilterSensitiveLog = DeleteAutoSnapshotResultFilterSensitiveLog;
const DeleteBucketRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBucketRequestFilterSensitiveLog = DeleteBucketRequestFilterSensitiveLog;
const DeleteBucketResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBucketResultFilterSensitiveLog = DeleteBucketResultFilterSensitiveLog;
const DeleteBucketAccessKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBucketAccessKeyRequestFilterSensitiveLog = DeleteBucketAccessKeyRequestFilterSensitiveLog;
const DeleteBucketAccessKeyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBucketAccessKeyResultFilterSensitiveLog = DeleteBucketAccessKeyResultFilterSensitiveLog;
const DeleteCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCertificateRequestFilterSensitiveLog = DeleteCertificateRequestFilterSensitiveLog;
const DeleteCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCertificateResultFilterSensitiveLog = DeleteCertificateResultFilterSensitiveLog;
const DeleteContactMethodRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContactMethodRequestFilterSensitiveLog = DeleteContactMethodRequestFilterSensitiveLog;
const DeleteContactMethodResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContactMethodResultFilterSensitiveLog = DeleteContactMethodResultFilterSensitiveLog;
const DeleteContainerImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContainerImageRequestFilterSensitiveLog = DeleteContainerImageRequestFilterSensitiveLog;
const DeleteContainerImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContainerImageResultFilterSensitiveLog = DeleteContainerImageResultFilterSensitiveLog;
const DeleteContainerServiceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContainerServiceRequestFilterSensitiveLog = DeleteContainerServiceRequestFilterSensitiveLog;
const DeleteContainerServiceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteContainerServiceResultFilterSensitiveLog = DeleteContainerServiceResultFilterSensitiveLog;
const DeleteDiskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDiskRequestFilterSensitiveLog = DeleteDiskRequestFilterSensitiveLog;
const DeleteDiskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDiskResultFilterSensitiveLog = DeleteDiskResultFilterSensitiveLog;
const DeleteDiskSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDiskSnapshotRequestFilterSensitiveLog = DeleteDiskSnapshotRequestFilterSensitiveLog;
const DeleteDiskSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDiskSnapshotResultFilterSensitiveLog = DeleteDiskSnapshotResultFilterSensitiveLog;
const DeleteDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDistributionRequestFilterSensitiveLog = DeleteDistributionRequestFilterSensitiveLog;
const DeleteDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDistributionResultFilterSensitiveLog = DeleteDistributionResultFilterSensitiveLog;
const DeleteDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainRequestFilterSensitiveLog = DeleteDomainRequestFilterSensitiveLog;
const DeleteDomainResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainResultFilterSensitiveLog = DeleteDomainResultFilterSensitiveLog;
const DeleteDomainEntryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainEntryRequestFilterSensitiveLog = DeleteDomainEntryRequestFilterSensitiveLog;
const DeleteDomainEntryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainEntryResultFilterSensitiveLog = DeleteDomainEntryResultFilterSensitiveLog;
const DeleteInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceRequestFilterSensitiveLog = DeleteInstanceRequestFilterSensitiveLog;
const DeleteInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceResultFilterSensitiveLog = DeleteInstanceResultFilterSensitiveLog;
const DeleteInstanceSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceSnapshotRequestFilterSensitiveLog = DeleteInstanceSnapshotRequestFilterSensitiveLog;
const DeleteInstanceSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteInstanceSnapshotResultFilterSensitiveLog = DeleteInstanceSnapshotResultFilterSensitiveLog;
const DeleteKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKeyPairRequestFilterSensitiveLog = DeleteKeyPairRequestFilterSensitiveLog;
const DeleteKeyPairResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKeyPairResultFilterSensitiveLog = DeleteKeyPairResultFilterSensitiveLog;
const DeleteKnownHostKeysRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKnownHostKeysRequestFilterSensitiveLog = DeleteKnownHostKeysRequestFilterSensitiveLog;
const DeleteKnownHostKeysResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKnownHostKeysResultFilterSensitiveLog = DeleteKnownHostKeysResultFilterSensitiveLog;
const DeleteLoadBalancerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLoadBalancerRequestFilterSensitiveLog = DeleteLoadBalancerRequestFilterSensitiveLog;
const DeleteLoadBalancerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLoadBalancerResultFilterSensitiveLog = DeleteLoadBalancerResultFilterSensitiveLog;
const DeleteLoadBalancerTlsCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLoadBalancerTlsCertificateRequestFilterSensitiveLog = DeleteLoadBalancerTlsCertificateRequestFilterSensitiveLog;
const DeleteLoadBalancerTlsCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLoadBalancerTlsCertificateResultFilterSensitiveLog = DeleteLoadBalancerTlsCertificateResultFilterSensitiveLog;
const DeleteRelationalDatabaseRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRelationalDatabaseRequestFilterSensitiveLog = DeleteRelationalDatabaseRequestFilterSensitiveLog;
const DeleteRelationalDatabaseResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRelationalDatabaseResultFilterSensitiveLog = DeleteRelationalDatabaseResultFilterSensitiveLog;
const DeleteRelationalDatabaseSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRelationalDatabaseSnapshotRequestFilterSensitiveLog = DeleteRelationalDatabaseSnapshotRequestFilterSensitiveLog;
const DeleteRelationalDatabaseSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRelationalDatabaseSnapshotResultFilterSensitiveLog = DeleteRelationalDatabaseSnapshotResultFilterSensitiveLog;
const DetachCertificateFromDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachCertificateFromDistributionRequestFilterSensitiveLog = DetachCertificateFromDistributionRequestFilterSensitiveLog;
const DetachCertificateFromDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachCertificateFromDistributionResultFilterSensitiveLog = DetachCertificateFromDistributionResultFilterSensitiveLog;
const DetachDiskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachDiskRequestFilterSensitiveLog = DetachDiskRequestFilterSensitiveLog;
const DetachDiskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachDiskResultFilterSensitiveLog = DetachDiskResultFilterSensitiveLog;
const DetachInstancesFromLoadBalancerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachInstancesFromLoadBalancerRequestFilterSensitiveLog = DetachInstancesFromLoadBalancerRequestFilterSensitiveLog;
const DetachInstancesFromLoadBalancerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachInstancesFromLoadBalancerResultFilterSensitiveLog = DetachInstancesFromLoadBalancerResultFilterSensitiveLog;
const DetachStaticIpRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachStaticIpRequestFilterSensitiveLog = DetachStaticIpRequestFilterSensitiveLog;
const DetachStaticIpResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachStaticIpResultFilterSensitiveLog = DetachStaticIpResultFilterSensitiveLog;
const DisableAddOnRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableAddOnRequestFilterSensitiveLog = DisableAddOnRequestFilterSensitiveLog;
const DisableAddOnResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableAddOnResultFilterSensitiveLog = DisableAddOnResultFilterSensitiveLog;
const DiskFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DiskFilterSensitiveLog = DiskFilterSensitiveLog;
const DiskInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DiskInfoFilterSensitiveLog = DiskInfoFilterSensitiveLog;
const DiskSnapshotFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DiskSnapshotFilterSensitiveLog = DiskSnapshotFilterSensitiveLog;
const DiskSnapshotInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DiskSnapshotInfoFilterSensitiveLog = DiskSnapshotInfoFilterSensitiveLog;
const DistributionBundleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DistributionBundleFilterSensitiveLog = DistributionBundleFilterSensitiveLog;
const NameServersUpdateStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NameServersUpdateStateFilterSensitiveLog = NameServersUpdateStateFilterSensitiveLog;
const R53HostedZoneDeletionStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.R53HostedZoneDeletionStateFilterSensitiveLog = R53HostedZoneDeletionStateFilterSensitiveLog;
const RegisteredDomainDelegationInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegisteredDomainDelegationInfoFilterSensitiveLog = RegisteredDomainDelegationInfoFilterSensitiveLog;
const DomainFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DomainFilterSensitiveLog = DomainFilterSensitiveLog;
const DownloadDefaultKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DownloadDefaultKeyPairRequestFilterSensitiveLog = DownloadDefaultKeyPairRequestFilterSensitiveLog;
const DownloadDefaultKeyPairResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DownloadDefaultKeyPairResultFilterSensitiveLog = DownloadDefaultKeyPairResultFilterSensitiveLog;
const EnableAddOnRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableAddOnRequestFilterSensitiveLog = EnableAddOnRequestFilterSensitiveLog;
const EnableAddOnResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableAddOnResultFilterSensitiveLog = EnableAddOnResultFilterSensitiveLog;
const ExportSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportSnapshotRequestFilterSensitiveLog = ExportSnapshotRequestFilterSensitiveLog;
const ExportSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportSnapshotResultFilterSensitiveLog = ExportSnapshotResultFilterSensitiveLog;
const InstanceSnapshotInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceSnapshotInfoFilterSensitiveLog = InstanceSnapshotInfoFilterSensitiveLog;
const ExportSnapshotRecordSourceInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportSnapshotRecordSourceInfoFilterSensitiveLog = ExportSnapshotRecordSourceInfoFilterSensitiveLog;
const ExportSnapshotRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportSnapshotRecordFilterSensitiveLog = ExportSnapshotRecordFilterSensitiveLog;
const GetActiveNamesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetActiveNamesRequestFilterSensitiveLog = GetActiveNamesRequestFilterSensitiveLog;
const GetActiveNamesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetActiveNamesResultFilterSensitiveLog = GetActiveNamesResultFilterSensitiveLog;
const GetAlarmsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAlarmsRequestFilterSensitiveLog = GetAlarmsRequestFilterSensitiveLog;
const GetAlarmsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAlarmsResultFilterSensitiveLog = GetAlarmsResultFilterSensitiveLog;
const GetAutoSnapshotsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAutoSnapshotsRequestFilterSensitiveLog = GetAutoSnapshotsRequestFilterSensitiveLog;
const GetAutoSnapshotsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAutoSnapshotsResultFilterSensitiveLog = GetAutoSnapshotsResultFilterSensitiveLog;
const GetBlueprintsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBlueprintsRequestFilterSensitiveLog = GetBlueprintsRequestFilterSensitiveLog;
const GetBlueprintsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBlueprintsResultFilterSensitiveLog = GetBlueprintsResultFilterSensitiveLog;
const GetBucketAccessKeysRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketAccessKeysRequestFilterSensitiveLog = GetBucketAccessKeysRequestFilterSensitiveLog;
const GetBucketAccessKeysResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.accessKeys && { accessKeys: obj.accessKeys.map((item) => (0, exports.AccessKeyFilterSensitiveLog)(item)) }),
});
exports.GetBucketAccessKeysResultFilterSensitiveLog = GetBucketAccessKeysResultFilterSensitiveLog;
const GetBucketBundlesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketBundlesRequestFilterSensitiveLog = GetBucketBundlesRequestFilterSensitiveLog;
const GetBucketBundlesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketBundlesResultFilterSensitiveLog = GetBucketBundlesResultFilterSensitiveLog;
const GetBucketMetricDataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketMetricDataRequestFilterSensitiveLog = GetBucketMetricDataRequestFilterSensitiveLog;
const MetricDatapointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricDatapointFilterSensitiveLog = MetricDatapointFilterSensitiveLog;
const GetBucketMetricDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketMetricDataResultFilterSensitiveLog = GetBucketMetricDataResultFilterSensitiveLog;
const GetBucketsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketsRequestFilterSensitiveLog = GetBucketsRequestFilterSensitiveLog;
const GetBucketsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBucketsResultFilterSensitiveLog = GetBucketsResultFilterSensitiveLog;
const GetBundlesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBundlesRequestFilterSensitiveLog = GetBundlesRequestFilterSensitiveLog;
const GetBundlesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetBundlesResultFilterSensitiveLog = GetBundlesResultFilterSensitiveLog;
const GetCertificatesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCertificatesRequestFilterSensitiveLog = GetCertificatesRequestFilterSensitiveLog;
const GetCertificatesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCertificatesResultFilterSensitiveLog = GetCertificatesResultFilterSensitiveLog;
const GetCloudFormationStackRecordsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCloudFormationStackRecordsRequestFilterSensitiveLog = GetCloudFormationStackRecordsRequestFilterSensitiveLog;
const GetCloudFormationStackRecordsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCloudFormationStackRecordsResultFilterSensitiveLog = GetCloudFormationStackRecordsResultFilterSensitiveLog;
const GetContactMethodsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContactMethodsRequestFilterSensitiveLog = GetContactMethodsRequestFilterSensitiveLog;
const GetContactMethodsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContactMethodsResultFilterSensitiveLog = GetContactMethodsResultFilterSensitiveLog;
const GetContainerAPIMetadataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerAPIMetadataRequestFilterSensitiveLog = GetContainerAPIMetadataRequestFilterSensitiveLog;
const GetContainerAPIMetadataResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerAPIMetadataResultFilterSensitiveLog = GetContainerAPIMetadataResultFilterSensitiveLog;
const GetContainerImagesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerImagesRequestFilterSensitiveLog = GetContainerImagesRequestFilterSensitiveLog;
const GetContainerImagesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerImagesResultFilterSensitiveLog = GetContainerImagesResultFilterSensitiveLog;
const GetContainerLogRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerLogRequestFilterSensitiveLog = GetContainerLogRequestFilterSensitiveLog;
const GetContainerLogResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerLogResultFilterSensitiveLog = GetContainerLogResultFilterSensitiveLog;
const GetContainerServiceDeploymentsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServiceDeploymentsRequestFilterSensitiveLog = GetContainerServiceDeploymentsRequestFilterSensitiveLog;
const GetContainerServiceDeploymentsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServiceDeploymentsResultFilterSensitiveLog = GetContainerServiceDeploymentsResultFilterSensitiveLog;
const GetContainerServiceMetricDataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServiceMetricDataRequestFilterSensitiveLog = GetContainerServiceMetricDataRequestFilterSensitiveLog;
const GetContainerServiceMetricDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServiceMetricDataResultFilterSensitiveLog = GetContainerServiceMetricDataResultFilterSensitiveLog;
const GetContainerServicePowersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServicePowersRequestFilterSensitiveLog = GetContainerServicePowersRequestFilterSensitiveLog;
const GetContainerServicePowersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServicePowersResultFilterSensitiveLog = GetContainerServicePowersResultFilterSensitiveLog;
const GetContainerServicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetContainerServicesRequestFilterSensitiveLog = GetContainerServicesRequestFilterSensitiveLog;
